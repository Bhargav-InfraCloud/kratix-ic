apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: kratix-platform-system
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: minio
  namespace: kratix-platform-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9000
    nodePort: 31337
  selector:
    run: minio
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: minio
  name: minio
  namespace: kratix-platform-system
spec:
  replicas: 1
  selector:
    matchLabels:
      run: minio
  template:
    metadata:
      labels:
        run: minio
    spec:
      initContainers:
      - name: make-buckets
        image: minio/minio:RELEASE.2022-06-30T20-58-09Z
        volumeMounts:
        - mountPath: /data
          name: data-volume
      containers:
      - image: minio/minio:RELEASE.2022-06-30T20-58-09Z
        name: minio
        args: ["server", "/data"]
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /data
          name: data-volume
      volumes:
      - name: data-volume
        emptyDir: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
stringData:
  accessKeyID: minioadmin
  secretAccessKey: minioadmin
---
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-create-bucket
spec:
  template:
    spec:
      containers:
      - name: minio-event-configuration
        image: minio/mc
        command: ["mc", "mb", "minio/kratix"]
        env:
        - name: MC_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: accessKeyID
        - name: MC_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: secretAccessKey
        - name: MC_ENDPOINT
          value: minio.kratix-platform-system.svc.cluster.local
        - name: MC_HOST_minio
          value: "http://$(MC_ACCESS_KEY):$(MC_SECRET_KEY)@$(MC_ENDPOINT)"
      restartPolicy: Never
  backoffLimit: 4
