apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: kratix-platform-system
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: minio
  namespace: kratix-platform-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9000
    nodePort: 31337
  selector:
    run: minio
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: minio
  name: minio
  namespace: kratix-platform-system
spec:
  replicas: 1
  selector:
    matchLabels:
      run: minio
  template:
    metadata:
      labels:
        run: minio
    spec:
      initContainers:
      - name: make-buckets
        image: minio/minio:RELEASE.2020-10-28T08-16-50Z-38-g7482aa978
        volumeMounts:
        - mountPath: /data
          name: data-volume
        command: ["/bin/sh", "-c"]
        args: 
          - | 
            mkdir  /data/kratix-resources;
            cat > /data/kratix-resources/kratix-resources.yaml << EOF2
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: kratix-info
              namespace: kratix-worker-system 
            data:
              clusterName: worker-1
            EOF2
      containers:
      - image: minio/minio:RELEASE.2020-10-28T08-16-50Z-38-g7482aa978
        name: minio
        args: ["server", "/data"]
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /data
          name: data-volume
      volumes:
      - name: data-volume
        emptyDir: {}
