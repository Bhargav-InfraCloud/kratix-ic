apiVersion: platform.kratix.io/v1alpha1
kind: Promise
metadata:
  creationTimestamp: null
  name: appstack-promise
spec:
  xaasCrd:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: appstacks.example.promise.syntasso.io
    spec:
      group: example.promise.syntasso.io
      names:
        kind: appstack
        plural: appstacks
        singular: appstack
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            properties:
              spec:
                properties:
                  appImageTag:
                    type: string
                  applicationName:
                    type: string
                  builderImageTag:
                    type: string
                  dockerConfigJson:
                    type: string
                  gitRepo:
                    type: string
                type: object
            type: object
        served: true
        storage: true
  xaasRequestPipeline:
  - syntasso/appstack-request-pipeline
  clusterWorkerResources:
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour-external
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: contour
    subjects:
    - kind: ServiceAccount
      name: contour
      namespace: contour-external
  - apiVersion: v1
    kind: Namespace
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour-external
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour
      namespace: contour-external
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: envoy
      namespace: contour-external
  - apiVersion: v1
    data:
      contour.yaml: |
        #
        # server:
        #   determine which XDS Server implementation to utilize in Contour.
        #   xds-server-type: contour
        #
        # Specify the gateway-api Gateway Contour should watch.
        # gateway:
        #   name: contour
        #   namespace: contour-external
        #
        # should contour expect to be running inside a k8s cluster
        # incluster: true
        #
        # path to kubeconfig (if not running inside a k8s cluster)
        # kubeconfig: /path/to/.kube/config
        #
        # Disable RFC-compliant behavior to strip "Content-Length" header if
        # "Tranfer-Encoding: chunked" is also set.
        # disableAllowChunkedLength: false
        # Disable HTTPProxy permitInsecure field
        disablePermitInsecure: false
        tls:
        # minimum TLS version that Contour will negotiate
        # minimum-protocol-version: "1.2"
        # TLS ciphers to be supported by Envoy TLS listeners when negotiating
        # TLS 1.2.
        # cipher-suites:
        # - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
        # - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
        # - 'ECDHE-ECDSA-AES256-GCM-SHA384'
        # - 'ECDHE-RSA-AES256-GCM-SHA384'
        # Defines the Kubernetes name/namespace matching a secret to use
        # as the fallback certificate when requests which don't match the
        # SNI defined for a vhost.
          fallback-certificate:
        #   name: fallback-secret-name
        #   namespace: contour-external
          envoy-client-certificate:
        #   name: envoy-client-cert-secret-name
        #   namespace: contour-external
        # The following config shows the defaults for the leader election.
        # leaderelection:
        #   configmap-name: leader-elect
        #   configmap-namespace: contour-external
        ### Logging options
        # Default setting
        accesslog-format: envoy
        # To enable JSON logging in Envoy
        # accesslog-format: json
        # The default fields that will be logged are specified below.
        # To customise this list, just add or remove entries.
        # The canonical list is available at
        # https://godoc.org/github.com/projectcontour/contour/internal/envoy#JSONFields
        # json-fields:
        #   - "@timestamp"
        #   - "authority"
        #   - "bytes_received"
        #   - "bytes_sent"
        #   - "downstream_local_address"
        #   - "downstream_remote_address"
        #   - "duration"
        #   - "method"
        #   - "path"
        #   - "protocol"
        #   - "request_id"
        #   - "requested_server_name"
        #   - "response_code"
        #   - "response_flags"
        #   - "uber_trace_id"
        #   - "upstream_cluster"
        #   - "upstream_host"
        #   - "upstream_local_address"
        #   - "upstream_service_time"
        #   - "user_agent"
        #   - "x_forwarded_for"
        #
        # default-http-versions:
        # - "HTTP/2"
        # - "HTTP/1.1"
        #
        # The following shows the default proxy timeout settings.
        # timeouts:
        #   request-timeout: infinity
        #   connection-idle-timeout: 60s
        #   stream-idle-timeout: 5m
        #   max-connection-duration: infinity
        #   delayed-close-timeout: 1s
        #   connection-shutdown-grace-period: 5s
        #
        # Envoy cluster settings.
        # cluster:
        #   configure the cluster dns lookup family
        #   valid options are: auto (default), v4, v6
        #   dns-lookup-family: auto
        #
        # Envoy network settings.
        # network:
        #   Configure the number of additional ingress proxy hops from the
        #   right side of the x-forwarded-for HTTP header to trust.
        #   num-trusted-hops: 0
        #
        # Configure an optional global rate limit service.
        # rateLimitService:
        #   Identifies the extension service defining the rate limit service,
        #   formatted as <namespace>/<name>.
        #   extensionService: projectcontour/ratelimit
        #   Defines the rate limit domain to pass to the rate limit service.
        #   Acts as a container for a set of rate limit definitions within
        #   the RLS.
        #   domain: contour
        #   Defines whether to allow requests to proceed when the rate limit
        #   service fails to respond with a valid rate limit decision within
        #   the timeout defined on the extension service.
        #   failOpen: false
    kind: ConfigMap
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour
      namespace: contour-external
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      labels:
        networking.knative.dev/ingress-provider: contour
      name: extensionservices.projectcontour.io
    spec:
      group: projectcontour.io
      names:
        kind: ExtensionService
        listKind: ExtensionServiceList
        plural: extensionservices
        shortNames:
        - extensionservice
        - extensionservices
        singular: extensionservice
      preserveUnknownFields: false
      scope: Namespaced
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: ExtensionService is the schema for the Contour extension
              services API. An ExtensionService resource binds a network service to
              the Contour API so that Contour API features can be implemented by collaborating
              components.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: ExtensionServiceSpec defines the desired state of an
                  ExtensionService resource.
                properties:
                  loadBalancerPolicy:
                    description: The policy for load balancing GRPC service requests.
                      Note that the `Cookie` and `RequestHash` load balancing strategies
                      cannot be used here.
                    properties:
                      requestHashPolicies:
                        description: RequestHashPolicies contains a list of hash policies
                          to apply when the `RequestHash` load balancing strategy
                          is chosen. If an element of the supplied list of hash policies
                          is invalid, it will be ignored. If the list of hash policies
                          is empty after validation, the load balancing strategy will
                          fall back the the default `RoundRobin`.
                        items:
                          description: RequestHashPolicy contains configuration for
                            an individual hash policy on a request attribute.
                          properties:
                            headerHashOptions:
                              description: HeaderHashOptions should be set when request
                                header hash based load balancing is desired. It must
                                be the only hash option field set, otherwise this
                                request hash policy object will be ignored.
                              properties:
                                headerName:
                                  description: HeaderName is the name of the HTTP
                                    request header that will be used to calculate
                                    the hash key. If the header specified is not present
                                    on a request, no hash will be produced.
                                  minLength: 1
                                  type: string
                              type: object
                            terminal:
                              description: Terminal is a flag that allows for short-circuiting
                                computing of a hash for a given request. If set to
                                true, and the request attribute specified in the attribute
                                hash options is present, no further hash policies
                                will be used to calculate a hash for the request.
                              type: boolean
                          type: object
                        type: array
                      strategy:
                        description: Strategy specifies the policy used to balance
                          requests across the pool of backend pods. Valid policy names
                          are `Random`, `RoundRobin`, `WeightedLeastRequest`, `Cookie`,
                          and `RequestHash`. If an unknown strategy name is specified
                          or no policy is supplied, the default `RoundRobin` policy
                          is used.
                        type: string
                    type: object
                  protocol:
                    description: Protocol may be used to specify (or override) the
                      protocol used to reach this Service. Values may be tls, h2,
                      h2c. If omitted, protocol-selection falls back on Service annotations.
                    enum:
                    - h2
                    - h2c
                    type: string
                  protocolVersion:
                    description: This field sets the version of the GRPC protocol
                      that Envoy uses to send requests to the extension service. Since
                      Contour always uses the v3 Envoy API, this is currently fixed
                      at "v3". However, other protocol options will be available in
                      future.
                    enum:
                    - v3
                    type: string
                  services:
                    description: Services specifies the set of Kubernetes Service
                      resources that receive GRPC extension API requests. If no weights
                      are specified for any of the entries in this array, traffic
                      will be spread evenly across all the services. Otherwise, traffic
                      is balanced proportionally to the Weight field in each entry.
                    items:
                      description: ExtensionServiceTarget defines an Kubernetes Service
                        to target with extension service traffic.
                      properties:
                        name:
                          description: Name is the name of Kubernetes service that
                            will accept service traffic.
                          type: string
                        port:
                          description: Port (defined as Integer) to proxy traffic
                            to since a service can have multiple defined.
                          exclusiveMaximum: true
                          maximum: 65536
                          minimum: 1
                          type: integer
                        weight:
                          description: Weight defines proportion of traffic to balance
                            to the Kubernetes Service.
                          format: int32
                          type: integer
                      required:
                      - name
                      - port
                      type: object
                    minItems: 1
                    type: array
                  timeoutPolicy:
                    description: The timeout policy for requests to the services.
                    properties:
                      idle:
                        description: Timeout after which, if there are no active requests
                          for this route, the connection between Envoy and the backend
                          or Envoy and the external client will be closed. If not
                          specified, there is no per-route idle timeout, though a
                          connection manager-wide stream_idle_timeout default of 5m
                          still applies.
                        pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                        type: string
                      response:
                        description: Timeout for receiving a response from the server
                          after processing a request from client. If not supplied,
                          Envoy's default value of 15s applies.
                        pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                        type: string
                    type: object
                  validation:
                    description: UpstreamValidation defines how to verify the backend
                      service's certificate
                    properties:
                      caSecret:
                        description: Name of the Kubernetes secret be used to validate
                          the certificate presented by the backend
                        type: string
                      subjectName:
                        description: Key which is expected to be present in the 'subjectAltName'
                          of the presented certificate
                        type: string
                    required:
                    - caSecret
                    - subjectName
                    type: object
                required:
                - services
                type: object
              status:
                description: ExtensionServiceStatus defines the observed state of
                  an ExtensionService resource.
                properties:
                  conditions:
                    description: "Conditions contains the current status of the ExtensionService
                      resource. \n Contour will update a single condition, `Valid`,
                      that is in normal-true polarity. \n Contour will not modify
                      any other Conditions set in this block, in case some other controller
                      wants to add a Condition."
                    items:
                      description: "DetailedCondition is an extension of the normal
                        Kubernetes conditions, with two extra fields to hold sub-conditions,
                        which provide more detailed reasons for the state (True or
                        False) of the condition. \n `errors` holds information about
                        sub-conditions which are fatal to that condition and render
                        its state False. \n `warnings` holds information about sub-conditions
                        which are not fatal to that condition and do not force the
                        state to be False. \n Remember that Conditions have a type,
                        a status, and a reason. \n The type is the type of the condition,
                        the most important one in this CRD set is `Valid`. `Valid`
                        is a positive-polarity condition: when it is `status: true`
                        there are no problems. \n In more detail, `status: true` means
                        that the object is has been ingested into Contour with no
                        errors. `warnings` may still be present, and will be indicated
                        in the Reason field. There must be zero entries in the `errors`
                        slice in this case. \n `Valid`, `status: false` means that
                        the object has had one or more fatal errors during processing
                        into Contour.  The details of the errors will be present under
                        the `errors` field. There must be at least one error in the
                        `errors` slice if `status` is `false`. \n For DetailedConditions
                        of types other than `Valid`, the Condition must be in the
                        negative polarity. When they have `status` `true`, there is
                        an error. There must be at least one entry in the `errors`
                        Subcondition slice. When they have `status` `false`, there
                        are no serious errors, and there must be zero entries in the
                        `errors` slice. In either case, there may be entries in the
                        `warnings` slice. \n Regardless of the polarity, the `reason`
                        and `message` fields must be updated with either the detail
                        of the reason (if there is one and only one entry in total
                        across both the `errors` and `warnings` slices), or `MultipleReasons`
                        if there is more than one entry."
                      properties:
                        errors:
                          description: "Errors contains a slice of relevant error
                            subconditions for this object. \n Subconditions are expected
                            to appear when relevant (when there is a error), and disappear
                            when not relevant. An empty slice here indicates no errors."
                          items:
                            description: "SubCondition is a Condition-like type intended
                              for use as a subcondition inside a DetailedCondition.
                              \n It contains a subset of the Condition fields. \n
                              It is intended for warnings and errors, so `type` names
                              should use abnormal-true polarity, that is, they should
                              be of the form \"ErrorPresent: true\". \n The expected
                              lifecycle for these errors is that they should only
                              be present when the error or warning is, and should
                              be removed when they are not relevant."
                            properties:
                              message:
                                description: "Message is a human readable message
                                  indicating details about the transition. \n This
                                  may be an empty string."
                                maxLength: 32768
                                type: string
                              reason:
                                description: "Reason contains a programmatic identifier
                                  indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define
                                  expected values and meanings for this field, and
                                  whether the values are considered a guaranteed API.
                                  \n The value should be a CamelCase string. \n This
                                  field may not be empty."
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: "Type of condition in `CamelCase` or
                                  in `foo.example.com/CamelCase`. \n This must be
                                  in abnormal-true polarity, that is, `ErrorFound`
                                  or `controller.io/ErrorFound`. \n The regex it matches
                                  is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                        warnings:
                          description: "Warnings contains a slice of relevant warning
                            subconditions for this object. \n Subconditions are expected
                            to appear when relevant (when there is a warning), and
                            disappear when not relevant. An empty slice here indicates
                            no warnings."
                          items:
                            description: "SubCondition is a Condition-like type intended
                              for use as a subcondition inside a DetailedCondition.
                              \n It contains a subset of the Condition fields. \n
                              It is intended for warnings and errors, so `type` names
                              should use abnormal-true polarity, that is, they should
                              be of the form \"ErrorPresent: true\". \n The expected
                              lifecycle for these errors is that they should only
                              be present when the error or warning is, and should
                              be removed when they are not relevant."
                            properties:
                              message:
                                description: "Message is a human readable message
                                  indicating details about the transition. \n This
                                  may be an empty string."
                                maxLength: 32768
                                type: string
                              reason:
                                description: "Reason contains a programmatic identifier
                                  indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define
                                  expected values and meanings for this field, and
                                  whether the values are considered a guaranteed API.
                                  \n The value should be a CamelCase string. \n This
                                  field may not be empty."
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: "Type of condition in `CamelCase` or
                                  in `foo.example.com/CamelCase`. \n This must be
                                  in abnormal-true polarity, that is, `ErrorFound`
                                  or `controller.io/ErrorFound`. \n The regex it matches
                                  is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      labels:
        networking.knative.dev/ingress-provider: contour
      name: httpproxies.projectcontour.io
    spec:
      group: projectcontour.io
      names:
        kind: HTTPProxy
        listKind: HTTPProxyList
        plural: httpproxies
        shortNames:
        - proxy
        - proxies
        singular: httpproxy
      preserveUnknownFields: false
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - description: Fully qualified domain name
          jsonPath: .spec.virtualhost.fqdn
          name: FQDN
          type: string
        - description: Secret with TLS credentials
          jsonPath: .spec.virtualhost.tls.secretName
          name: TLS Secret
          type: string
        - description: The current status of the HTTPProxy
          jsonPath: .status.currentStatus
          name: Status
          type: string
        - description: Description of the current status
          jsonPath: .status.description
          name: Status Description
          type: string
        name: v1
        schema:
          openAPIV3Schema:
            description: HTTPProxy is an Ingress CRD specification.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: HTTPProxySpec defines the spec of the CRD.
                properties:
                  includes:
                    description: Includes allow for specific routing configuration
                      to be included from another HTTPProxy, possibly in another namespace.
                    items:
                      description: Include describes a set of policies that can be
                        applied to an HTTPProxy in a namespace.
                      properties:
                        conditions:
                          description: 'Conditions are a set of rules that are applied
                            to included HTTPProxies. In effect, they are added onto
                            the Conditions of included HTTPProxy Route structs. When
                            applied, they are merged using AND, with one exception:
                            There can be only one Prefix MatchCondition per Conditions
                            slice. More than one Prefix, or contradictory Conditions,
                            will make the include invalid.'
                          items:
                            description: MatchCondition are a general holder for matching
                              rules for HTTPProxies. One of Prefix or Header must
                              be provided.
                            properties:
                              header:
                                description: Header specifies the header condition
                                  to match.
                                properties:
                                  contains:
                                    description: Contains specifies a substring that
                                      must be present in the header value.
                                    type: string
                                  exact:
                                    description: Exact specifies a string that the
                                      header value must be equal to.
                                    type: string
                                  name:
                                    description: Name is the name of the header to
                                      match against. Name is required. Header names
                                      are case insensitive.
                                    type: string
                                  notcontains:
                                    description: NotContains specifies a substring
                                      that must not be present in the header value.
                                    type: string
                                  notexact:
                                    description: NoExact specifies a string that the
                                      header value must not be equal to. The condition
                                      is true if the header has any other value.
                                    type: string
                                  present:
                                    description: Present specifies that condition
                                      is true when the named header is present, regardless
                                      of its value. Note that setting Present to false
                                      does not make the condition true if the named
                                      header is absent.
                                    type: boolean
                                required:
                                - name
                                type: object
                              prefix:
                                description: Prefix defines a prefix match for a request.
                                type: string
                            type: object
                          type: array
                        name:
                          description: Name of the HTTPProxy
                          type: string
                        namespace:
                          description: Namespace of the HTTPProxy to include. Defaults
                            to the current namespace if not supplied.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  routes:
                    description: Routes are the ingress routes. If TCPProxy is present,
                      Routes is ignored.
                    items:
                      description: Route contains the set of routes for a virtual
                        host.
                      properties:
                        authPolicy:
                          description: AuthPolicy updates the authorization policy
                            that was set on the root HTTPProxy object for client requests
                            that match this route.
                          properties:
                            context:
                              additionalProperties:
                                type: string
                              description: Context is a set of key/value pairs that
                                are sent to the authentication server in the check
                                request. If a context is provided at an enclosing
                                scope, the entries are merged such that the inner
                                scope overrides matching keys from the outer scope.
                              type: object
                            disabled:
                              description: When true, this field disables client request
                                authentication for the scope of the policy.
                              type: boolean
                          type: object
                        conditions:
                          description: 'Conditions are a set of rules that are applied
                            to a Route. When applied, they are merged using AND, with
                            one exception: There can be only one Prefix MatchCondition
                            per Conditions slice. More than one Prefix, or contradictory
                            Conditions, will make the route invalid.'
                          items:
                            description: MatchCondition are a general holder for matching
                              rules for HTTPProxies. One of Prefix or Header must
                              be provided.
                            properties:
                              header:
                                description: Header specifies the header condition
                                  to match.
                                properties:
                                  contains:
                                    description: Contains specifies a substring that
                                      must be present in the header value.
                                    type: string
                                  exact:
                                    description: Exact specifies a string that the
                                      header value must be equal to.
                                    type: string
                                  name:
                                    description: Name is the name of the header to
                                      match against. Name is required. Header names
                                      are case insensitive.
                                    type: string
                                  notcontains:
                                    description: NotContains specifies a substring
                                      that must not be present in the header value.
                                    type: string
                                  notexact:
                                    description: NoExact specifies a string that the
                                      header value must not be equal to. The condition
                                      is true if the header has any other value.
                                    type: string
                                  present:
                                    description: Present specifies that condition
                                      is true when the named header is present, regardless
                                      of its value. Note that setting Present to false
                                      does not make the condition true if the named
                                      header is absent.
                                    type: boolean
                                required:
                                - name
                                type: object
                              prefix:
                                description: Prefix defines a prefix match for a request.
                                type: string
                            type: object
                          type: array
                        enableWebsockets:
                          description: Enables websocket support for the route.
                          type: boolean
                        healthCheckPolicy:
                          description: The health check policy for this route.
                          properties:
                            healthyThresholdCount:
                              description: The number of healthy health checks required
                                before a host is marked healthy
                              format: int64
                              minimum: 0
                              type: integer
                            host:
                              description: The value of the host header in the HTTP
                                health check request. If left empty (default value),
                                the name "contour-envoy-healthcheck" will be used.
                              type: string
                            intervalSeconds:
                              description: The interval (seconds) between health checks
                              format: int64
                              type: integer
                            path:
                              description: HTTP endpoint used to perform health checks
                                on upstream service
                              type: string
                            timeoutSeconds:
                              description: The time to wait (seconds) for a health
                                check response
                              format: int64
                              type: integer
                            unhealthyThresholdCount:
                              description: The number of unhealthy health checks required
                                before a host is marked unhealthy
                              format: int64
                              minimum: 0
                              type: integer
                          required:
                          - path
                          type: object
                        loadBalancerPolicy:
                          description: The load balancing policy for this route.
                          properties:
                            requestHashPolicies:
                              description: RequestHashPolicies contains a list of
                                hash policies to apply when the `RequestHash` load
                                balancing strategy is chosen. If an element of the
                                supplied list of hash policies is invalid, it will
                                be ignored. If the list of hash policies is empty
                                after validation, the load balancing strategy will
                                fall back the the default `RoundRobin`.
                              items:
                                description: RequestHashPolicy contains configuration
                                  for an individual hash policy on a request attribute.
                                properties:
                                  headerHashOptions:
                                    description: HeaderHashOptions should be set when
                                      request header hash based load balancing is
                                      desired. It must be the only hash option field
                                      set, otherwise this request hash policy object
                                      will be ignored.
                                    properties:
                                      headerName:
                                        description: HeaderName is the name of the
                                          HTTP request header that will be used to
                                          calculate the hash key. If the header specified
                                          is not present on a request, no hash will
                                          be produced.
                                        minLength: 1
                                        type: string
                                    type: object
                                  terminal:
                                    description: Terminal is a flag that allows for
                                      short-circuiting computing of a hash for a given
                                      request. If set to true, and the request attribute
                                      specified in the attribute hash options is present,
                                      no further hash policies will be used to calculate
                                      a hash for the request.
                                    type: boolean
                                type: object
                              type: array
                            strategy:
                              description: Strategy specifies the policy used to balance
                                requests across the pool of backend pods. Valid policy
                                names are `Random`, `RoundRobin`, `WeightedLeastRequest`,
                                `Cookie`, and `RequestHash`. If an unknown strategy
                                name is specified or no policy is supplied, the default
                                `RoundRobin` policy is used.
                              type: string
                          type: object
                        pathRewritePolicy:
                          description: The policy for rewriting the path of the request
                            URL after the request has been routed to a Service.
                          properties:
                            replacePrefix:
                              description: ReplacePrefix describes how the path prefix
                                should be replaced.
                              items:
                                description: ReplacePrefix describes a path prefix
                                  replacement.
                                properties:
                                  prefix:
                                    description: "Prefix specifies the URL path prefix
                                      to be replaced. \n If Prefix is specified, it
                                      must exactly match the MatchCondition prefix
                                      that is rendered by the chain of including HTTPProxies
                                      and only that path prefix will be replaced by
                                      Replacement. This allows HTTPProxies that are
                                      included through multiple roots to only replace
                                      specific path prefixes, leaving others unmodified.
                                      \n If Prefix is not specified, all routing prefixes
                                      rendered by the include chain will be replaced."
                                    minLength: 1
                                    type: string
                                  replacement:
                                    description: Replacement is the string that the
                                      routing path prefix will be replaced with. This
                                      must not be empty.
                                    minLength: 1
                                    type: string
                                required:
                                - replacement
                                type: object
                              type: array
                          type: object
                        permitInsecure:
                          description: Allow this path to respond to insecure requests
                            over HTTP which are normally not permitted when a `virtualhost.tls`
                            block is present.
                          type: boolean
                        rateLimitPolicy:
                          description: The policy for rate limiting on the route.
                          properties:
                            global:
                              description: Global defines global rate limiting parameters,
                                i.e. parameters defining descriptors that are sent
                                to an external rate limit service (RLS) for a rate
                                limit decision on each request.
                              properties:
                                descriptors:
                                  description: Descriptors defines the list of descriptors
                                    that will be generated and sent to the rate limit
                                    service. Each descriptor contains 1+ key-value
                                    pair entries.
                                  items:
                                    description: RateLimitDescriptor defines a list
                                      of key-value pair generators.
                                    properties:
                                      entries:
                                        description: Entries is the list of key-value
                                          pair generators.
                                        items:
                                          description: RateLimitDescriptorEntry is
                                            a key-value pair generator. Exactly one
                                            field on this struct must be non-nil.
                                          properties:
                                            genericKey:
                                              description: GenericKey defines a descriptor
                                                entry with a static key and value.
                                              properties:
                                                key:
                                                  description: Key defines the key
                                                    of the descriptor entry. If not
                                                    set, the key is set to "generic_key".
                                                  type: string
                                                value:
                                                  description: Value defines the value
                                                    of the descriptor entry.
                                                  minLength: 1
                                                  type: string
                                              type: object
                                            remoteAddress:
                                              description: RemoteAddress defines a
                                                descriptor entry with a key of "remote_address"
                                                and a value equal to the client's
                                                IP address (from x-forwarded-for).
                                              type: object
                                            requestHeader:
                                              description: RequestHeader defines a
                                                descriptor entry that's populated
                                                only if a given header is present
                                                on the request. The descriptor key
                                                is static, and the descriptor value
                                                is equal to the value of the header.
                                              properties:
                                                descriptorKey:
                                                  description: DescriptorKey defines
                                                    the key to use on the descriptor
                                                    entry.
                                                  minLength: 1
                                                  type: string
                                                headerName:
                                                  description: HeaderName defines
                                                    the name of the header to look
                                                    for on the request.
                                                  minLength: 1
                                                  type: string
                                              type: object
                                          type: object
                                        minItems: 1
                                        type: array
                                    type: object
                                  minItems: 1
                                  type: array
                              type: object
                            local:
                              description: Local defines local rate limiting parameters,
                                i.e. parameters for rate limiting that occurs within
                                each Envoy pod as requests are handled.
                              properties:
                                burst:
                                  description: Burst defines the number of requests
                                    above the requests per unit that should be allowed
                                    within a short period of time.
                                  format: int32
                                  type: integer
                                requests:
                                  description: Requests defines how many requests
                                    per unit of time should be allowed before rate
                                    limiting occurs.
                                  format: int32
                                  minimum: 1
                                  type: integer
                                responseHeadersToAdd:
                                  description: ResponseHeadersToAdd is an optional
                                    list of response headers to set when a request
                                    is rate-limited.
                                  items:
                                    description: HeaderValue represents a header name/value
                                      pair
                                    properties:
                                      name:
                                        description: Name represents a key of a header
                                        minLength: 1
                                        type: string
                                      value:
                                        description: Value represents the value of
                                          a header specified by a key
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                responseStatusCode:
                                  description: ResponseStatusCode is the HTTP status
                                    code to use for responses to rate-limited requests.
                                    Codes must be in the 400-599 range (inclusive).
                                    If not specified, the Envoy default of 429 (Too
                                    Many Requests) is used.
                                  format: int32
                                  maximum: 599
                                  minimum: 400
                                  type: integer
                                unit:
                                  description: Unit defines the period of time within
                                    which requests over the limit will be rate limited.
                                    Valid values are "second", "minute" and "hour".
                                  enum:
                                  - second
                                  - minute
                                  - hour
                                  type: string
                              required:
                              - requests
                              - unit
                              type: object
                          type: object
                        requestHeadersPolicy:
                          description: The policy for managing request headers during
                            proxying.
                          properties:
                            remove:
                              description: Remove specifies a list of HTTP header
                                names to remove.
                              items:
                                type: string
                              type: array
                            set:
                              description: Set specifies a list of HTTP header values
                                that will be set in the HTTP header. If the header
                                does not exist it will be added, otherwise it will
                                be overwritten with the new value.
                              items:
                                description: HeaderValue represents a header name/value
                                  pair
                                properties:
                                  name:
                                    description: Name represents a key of a header
                                    minLength: 1
                                    type: string
                                  value:
                                    description: Value represents the value of a header
                                      specified by a key
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                          type: object
                        responseHeadersPolicy:
                          description: The policy for managing response headers during
                            proxying. Rewriting the 'Host' header is not supported.
                          properties:
                            remove:
                              description: Remove specifies a list of HTTP header
                                names to remove.
                              items:
                                type: string
                              type: array
                            set:
                              description: Set specifies a list of HTTP header values
                                that will be set in the HTTP header. If the header
                                does not exist it will be added, otherwise it will
                                be overwritten with the new value.
                              items:
                                description: HeaderValue represents a header name/value
                                  pair
                                properties:
                                  name:
                                    description: Name represents a key of a header
                                    minLength: 1
                                    type: string
                                  value:
                                    description: Value represents the value of a header
                                      specified by a key
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                          type: object
                        retryPolicy:
                          description: The retry policy for this route.
                          properties:
                            count:
                              description: NumRetries is maximum allowed number of
                                retries. If not supplied, the number of retries is
                                one.
                              format: int64
                              minimum: 0
                              type: integer
                            perTryTimeout:
                              description: PerTryTimeout specifies the timeout per
                                retry attempt. Ignored if NumRetries is not supplied.
                              pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                              type: string
                            retriableStatusCodes:
                              description: "RetriableStatusCodes specifies the HTTP
                                status codes that should be retried. \n This field
                                is only respected when you include `retriable-status-codes`
                                in the `RetryOn` field."
                              items:
                                format: int32
                                type: integer
                              type: array
                            retryOn:
                              description: "RetryOn specifies the conditions on which
                                to retry a request. \n Supported [HTTP conditions](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on):
                                \n - `5xx` - `gateway-error` - `reset` - `connect-failure`
                                - `retriable-4xx` - `refused-stream` - `retriable-status-codes`
                                - `retriable-headers` \n Supported [gRPC conditions](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on):
                                \n - `cancelled` - `deadline-exceeded` - `internal`
                                - `resource-exhausted` - `unavailable`"
                              items:
                                description: RetryOn is a string type alias with validation
                                  to ensure that the value is valid.
                                enum:
                                - 5xx
                                - gateway-error
                                - reset
                                - connect-failure
                                - retriable-4xx
                                - refused-stream
                                - retriable-status-codes
                                - retriable-headers
                                - cancelled
                                - deadline-exceeded
                                - internal
                                - resource-exhausted
                                - unavailable
                                type: string
                              type: array
                          type: object
                        services:
                          description: Services are the services to proxy traffic.
                          items:
                            description: Service defines an Kubernetes Service to
                              proxy traffic.
                            properties:
                              mirror:
                                description: If Mirror is true the Service will receive
                                  a read only mirror of the traffic for this route.
                                type: boolean
                              name:
                                description: Name is the name of Kubernetes service
                                  to proxy traffic. Names defined here will be used
                                  to look up corresponding endpoints which contain
                                  the ips to route.
                                type: string
                              port:
                                description: Port (defined as Integer) to proxy traffic
                                  to since a service can have multiple defined.
                                exclusiveMaximum: true
                                maximum: 65536
                                minimum: 1
                                type: integer
                              protocol:
                                description: Protocol may be used to specify (or override)
                                  the protocol used to reach this Service. Values
                                  may be tls, h2, h2c. If omitted, protocol-selection
                                  falls back on Service annotations.
                                enum:
                                - h2
                                - h2c
                                - tls
                                type: string
                              requestHeadersPolicy:
                                description: The policy for managing request headers
                                  during proxying. Rewriting the 'Host' header is
                                  not supported.
                                properties:
                                  remove:
                                    description: Remove specifies a list of HTTP header
                                      names to remove.
                                    items:
                                      type: string
                                    type: array
                                  set:
                                    description: Set specifies a list of HTTP header
                                      values that will be set in the HTTP header.
                                      If the header does not exist it will be added,
                                      otherwise it will be overwritten with the new
                                      value.
                                    items:
                                      description: HeaderValue represents a header
                                        name/value pair
                                      properties:
                                        name:
                                          description: Name represents a key of a
                                            header
                                          minLength: 1
                                          type: string
                                        value:
                                          description: Value represents the value
                                            of a header specified by a key
                                          minLength: 1
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                type: object
                              responseHeadersPolicy:
                                description: The policy for managing response headers
                                  during proxying. Rewriting the 'Host' header is
                                  not supported.
                                properties:
                                  remove:
                                    description: Remove specifies a list of HTTP header
                                      names to remove.
                                    items:
                                      type: string
                                    type: array
                                  set:
                                    description: Set specifies a list of HTTP header
                                      values that will be set in the HTTP header.
                                      If the header does not exist it will be added,
                                      otherwise it will be overwritten with the new
                                      value.
                                    items:
                                      description: HeaderValue represents a header
                                        name/value pair
                                      properties:
                                        name:
                                          description: Name represents a key of a
                                            header
                                          minLength: 1
                                          type: string
                                        value:
                                          description: Value represents the value
                                            of a header specified by a key
                                          minLength: 1
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                type: object
                              validation:
                                description: UpstreamValidation defines how to verify
                                  the backend service's certificate
                                properties:
                                  caSecret:
                                    description: Name of the Kubernetes secret be
                                      used to validate the certificate presented by
                                      the backend
                                    type: string
                                  subjectName:
                                    description: Key which is expected to be present
                                      in the 'subjectAltName' of the presented certificate
                                    type: string
                                required:
                                - caSecret
                                - subjectName
                                type: object
                              weight:
                                description: Weight defines percentage of traffic
                                  to balance traffic
                                format: int64
                                minimum: 0
                                type: integer
                            required:
                            - name
                            - port
                            type: object
                          minItems: 1
                          type: array
                        timeoutPolicy:
                          description: The timeout policy for this route.
                          properties:
                            idle:
                              description: Timeout after which, if there are no active
                                requests for this route, the connection between Envoy
                                and the backend or Envoy and the external client will
                                be closed. If not specified, there is no per-route
                                idle timeout, though a connection manager-wide stream_idle_timeout
                                default of 5m still applies.
                              pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                              type: string
                            response:
                              description: Timeout for receiving a response from the
                                server after processing a request from client. If
                                not supplied, Envoy's default value of 15s applies.
                              pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                              type: string
                          type: object
                      required:
                      - services
                      type: object
                    type: array
                  tcpproxy:
                    description: TCPProxy holds TCP proxy information.
                    properties:
                      healthCheckPolicy:
                        description: The health check policy for this tcp proxy
                        properties:
                          healthyThresholdCount:
                            description: The number of healthy health checks required
                              before a host is marked healthy
                            format: int32
                            type: integer
                          intervalSeconds:
                            description: The interval (seconds) between health checks
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: The time to wait (seconds) for a health check
                              response
                            format: int64
                            type: integer
                          unhealthyThresholdCount:
                            description: The number of unhealthy health checks required
                              before a host is marked unhealthy
                            format: int32
                            type: integer
                        type: object
                      include:
                        description: Include specifies that this tcpproxy should be
                          delegated to another HTTPProxy.
                        properties:
                          name:
                            description: Name of the child HTTPProxy
                            type: string
                          namespace:
                            description: Namespace of the HTTPProxy to include. Defaults
                              to the current namespace if not supplied.
                            type: string
                        required:
                        - name
                        type: object
                      includes:
                        description: "IncludesDeprecated allow for specific routing
                          configuration to be appended to another HTTPProxy in another
                          namespace. \n Exists due to a mistake when developing HTTPProxy
                          and the field was marked plural when it should have been
                          singular. This field should stay to not break backwards
                          compatibility to v1 users."
                        properties:
                          name:
                            description: Name of the child HTTPProxy
                            type: string
                          namespace:
                            description: Namespace of the HTTPProxy to include. Defaults
                              to the current namespace if not supplied.
                            type: string
                        required:
                        - name
                        type: object
                      loadBalancerPolicy:
                        description: The load balancing policy for the backend services.
                          Note that the `Cookie` and `RequestHash` load balancing
                          strategies cannot be used here.
                        properties:
                          requestHashPolicies:
                            description: RequestHashPolicies contains a list of hash
                              policies to apply when the `RequestHash` load balancing
                              strategy is chosen. If an element of the supplied list
                              of hash policies is invalid, it will be ignored. If
                              the list of hash policies is empty after validation,
                              the load balancing strategy will fall back the the default
                              `RoundRobin`.
                            items:
                              description: RequestHashPolicy contains configuration
                                for an individual hash policy on a request attribute.
                              properties:
                                headerHashOptions:
                                  description: HeaderHashOptions should be set when
                                    request header hash based load balancing is desired.
                                    It must be the only hash option field set, otherwise
                                    this request hash policy object will be ignored.
                                  properties:
                                    headerName:
                                      description: HeaderName is the name of the HTTP
                                        request header that will be used to calculate
                                        the hash key. If the header specified is not
                                        present on a request, no hash will be produced.
                                      minLength: 1
                                      type: string
                                  type: object
                                terminal:
                                  description: Terminal is a flag that allows for
                                    short-circuiting computing of a hash for a given
                                    request. If set to true, and the request attribute
                                    specified in the attribute hash options is present,
                                    no further hash policies will be used to calculate
                                    a hash for the request.
                                  type: boolean
                              type: object
                            type: array
                          strategy:
                            description: Strategy specifies the policy used to balance
                              requests across the pool of backend pods. Valid policy
                              names are `Random`, `RoundRobin`, `WeightedLeastRequest`,
                              `Cookie`, and `RequestHash`. If an unknown strategy
                              name is specified or no policy is supplied, the default
                              `RoundRobin` policy is used.
                            type: string
                        type: object
                      services:
                        description: Services are the services to proxy traffic
                        items:
                          description: Service defines an Kubernetes Service to proxy
                            traffic.
                          properties:
                            mirror:
                              description: If Mirror is true the Service will receive
                                a read only mirror of the traffic for this route.
                              type: boolean
                            name:
                              description: Name is the name of Kubernetes service
                                to proxy traffic. Names defined here will be used
                                to look up corresponding endpoints which contain the
                                ips to route.
                              type: string
                            port:
                              description: Port (defined as Integer) to proxy traffic
                                to since a service can have multiple defined.
                              exclusiveMaximum: true
                              maximum: 65536
                              minimum: 1
                              type: integer
                            protocol:
                              description: Protocol may be used to specify (or override)
                                the protocol used to reach this Service. Values may
                                be tls, h2, h2c. If omitted, protocol-selection falls
                                back on Service annotations.
                              enum:
                              - h2
                              - h2c
                              - tls
                              type: string
                            requestHeadersPolicy:
                              description: The policy for managing request headers
                                during proxying. Rewriting the 'Host' header is not
                                supported.
                              properties:
                                remove:
                                  description: Remove specifies a list of HTTP header
                                    names to remove.
                                  items:
                                    type: string
                                  type: array
                                set:
                                  description: Set specifies a list of HTTP header
                                    values that will be set in the HTTP header. If
                                    the header does not exist it will be added, otherwise
                                    it will be overwritten with the new value.
                                  items:
                                    description: HeaderValue represents a header name/value
                                      pair
                                    properties:
                                      name:
                                        description: Name represents a key of a header
                                        minLength: 1
                                        type: string
                                      value:
                                        description: Value represents the value of
                                          a header specified by a key
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                              type: object
                            responseHeadersPolicy:
                              description: The policy for managing response headers
                                during proxying. Rewriting the 'Host' header is not
                                supported.
                              properties:
                                remove:
                                  description: Remove specifies a list of HTTP header
                                    names to remove.
                                  items:
                                    type: string
                                  type: array
                                set:
                                  description: Set specifies a list of HTTP header
                                    values that will be set in the HTTP header. If
                                    the header does not exist it will be added, otherwise
                                    it will be overwritten with the new value.
                                  items:
                                    description: HeaderValue represents a header name/value
                                      pair
                                    properties:
                                      name:
                                        description: Name represents a key of a header
                                        minLength: 1
                                        type: string
                                      value:
                                        description: Value represents the value of
                                          a header specified by a key
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                              type: object
                            validation:
                              description: UpstreamValidation defines how to verify
                                the backend service's certificate
                              properties:
                                caSecret:
                                  description: Name of the Kubernetes secret be used
                                    to validate the certificate presented by the backend
                                  type: string
                                subjectName:
                                  description: Key which is expected to be present
                                    in the 'subjectAltName' of the presented certificate
                                  type: string
                              required:
                              - caSecret
                              - subjectName
                              type: object
                            weight:
                              description: Weight defines percentage of traffic to
                                balance traffic
                              format: int64
                              minimum: 0
                              type: integer
                          required:
                          - name
                          - port
                          type: object
                        type: array
                    type: object
                  virtualhost:
                    description: Virtualhost appears at most once. If it is present,
                      the object is considered to be a "root" HTTPProxy.
                    properties:
                      authorization:
                        description: This field configures an extension service to
                          perform authorization for this virtual host. Authorization
                          can only be configured on virtual hosts that have TLS enabled.
                          If the TLS configuration requires client certificate /validation,
                          the client certificate is always included in the authentication
                          check request.
                        properties:
                          authPolicy:
                            description: AuthPolicy sets a default authorization policy
                              for client requests. This policy will be used unless
                              overridden by individual routes.
                            properties:
                              context:
                                additionalProperties:
                                  type: string
                                description: Context is a set of key/value pairs that
                                  are sent to the authentication server in the check
                                  request. If a context is provided at an enclosing
                                  scope, the entries are merged such that the inner
                                  scope overrides matching keys from the outer scope.
                                type: object
                              disabled:
                                description: When true, this field disables client
                                  request authentication for the scope of the policy.
                                type: boolean
                            type: object
                          extensionRef:
                            description: ExtensionServiceRef specifies the extension
                              resource that will authorize client requests.
                            properties:
                              apiVersion:
                                description: API version of the referent. If this
                                  field is not specified, the default "projectcontour.io/v1alpha1"
                                  will be used
                                minLength: 1
                                type: string
                              name:
                                description: "Name of the referent. \n More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                                minLength: 1
                                type: string
                              namespace:
                                description: "Namespace of the referent. If this field
                                  is not specifies, the namespace of the resource
                                  that targets the referent will be used. \n More
                                  info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
                                minLength: 1
                                type: string
                            type: object
                          failOpen:
                            description: If FailOpen is true, the client request is
                              forwarded to the upstream service even if the authorization
                              server fails to respond. This field should not be set
                              in most cases. It is intended for use only while migrating
                              applications from internal authorization to Contour
                              external authorization.
                            type: boolean
                          responseTimeout:
                            description: ResponseTimeout configures maximum time to
                              wait for a check response from the authorization server.
                              Timeout durations are expressed in the Go [Duration
                              format](https://godoc.org/time#ParseDuration). Valid
                              time units are "ns", "us" (or "µs"), "ms", "s", "m",
                              "h". The string "infinity" is also a valid input and
                              specifies no timeout.
                            pattern: ^(((\d*(\.\d*)?h)|(\d*(\.\d*)?m)|(\d*(\.\d*)?s)|(\d*(\.\d*)?ms)|(\d*(\.\d*)?us)|(\d*(\.\d*)?µs)|(\d*(\.\d*)?ns))+|infinity|infinite)$
                            type: string
                        required:
                        - extensionRef
                        type: object
                      corsPolicy:
                        description: Specifies the cross-origin policy to apply to
                          the VirtualHost.
                        properties:
                          allowCredentials:
                            description: Specifies whether the resource allows credentials.
                            type: boolean
                          allowHeaders:
                            description: AllowHeaders specifies the content for the
                              *access-control-allow-headers* header.
                            items:
                              description: CORSHeaderValue specifies the value of
                                the string headers returned by a cross-domain request.
                              pattern: ^[a-zA-Z0-9!#$%&'*+.^_`|~-]+$
                              type: string
                            type: array
                          allowMethods:
                            description: AllowMethods specifies the content for the
                              *access-control-allow-methods* header.
                            items:
                              description: CORSHeaderValue specifies the value of
                                the string headers returned by a cross-domain request.
                              pattern: ^[a-zA-Z0-9!#$%&'*+.^_`|~-]+$
                              type: string
                            type: array
                          allowOrigin:
                            description: AllowOrigin specifies the origins that will
                              be allowed to do CORS requests. "*" means allow any
                              origin.
                            items:
                              type: string
                            type: array
                          exposeHeaders:
                            description: ExposeHeaders Specifies the content for the
                              *access-control-expose-headers* header.
                            items:
                              description: CORSHeaderValue specifies the value of
                                the string headers returned by a cross-domain request.
                              pattern: ^[a-zA-Z0-9!#$%&'*+.^_`|~-]+$
                              type: string
                            type: array
                          maxAge:
                            description: MaxAge indicates for how long the results
                              of a preflight request can be cached. MaxAge durations
                              are expressed in the Go [Duration format](https://godoc.org/time#ParseDuration).
                              Valid time units are "ns", "us" (or "µs"), "ms", "s",
                              "m", "h". Only positive values are allowed while 0 disables
                              the cache requiring a preflight OPTIONS check for all
                              cross-origin requests.
                            type: string
                        required:
                        - allowMethods
                        - allowOrigin
                        type: object
                      fqdn:
                        description: The fully qualified domain name of the root of
                          the ingress tree all leaves of the DAG rooted at this object
                          relate to the fqdn.
                        type: string
                      rateLimitPolicy:
                        description: The policy for rate limiting on the virtual host.
                        properties:
                          global:
                            description: Global defines global rate limiting parameters,
                              i.e. parameters defining descriptors that are sent to
                              an external rate limit service (RLS) for a rate limit
                              decision on each request.
                            properties:
                              descriptors:
                                description: Descriptors defines the list of descriptors
                                  that will be generated and sent to the rate limit
                                  service. Each descriptor contains 1+ key-value pair
                                  entries.
                                items:
                                  description: RateLimitDescriptor defines a list
                                    of key-value pair generators.
                                  properties:
                                    entries:
                                      description: Entries is the list of key-value
                                        pair generators.
                                      items:
                                        description: RateLimitDescriptorEntry is a
                                          key-value pair generator. Exactly one field
                                          on this struct must be non-nil.
                                        properties:
                                          genericKey:
                                            description: GenericKey defines a descriptor
                                              entry with a static key and value.
                                            properties:
                                              key:
                                                description: Key defines the key of
                                                  the descriptor entry. If not set,
                                                  the key is set to "generic_key".
                                                type: string
                                              value:
                                                description: Value defines the value
                                                  of the descriptor entry.
                                                minLength: 1
                                                type: string
                                            type: object
                                          remoteAddress:
                                            description: RemoteAddress defines a descriptor
                                              entry with a key of "remote_address"
                                              and a value equal to the client's IP
                                              address (from x-forwarded-for).
                                            type: object
                                          requestHeader:
                                            description: RequestHeader defines a descriptor
                                              entry that's populated only if a given
                                              header is present on the request. The
                                              descriptor key is static, and the descriptor
                                              value is equal to the value of the header.
                                            properties:
                                              descriptorKey:
                                                description: DescriptorKey defines
                                                  the key to use on the descriptor
                                                  entry.
                                                minLength: 1
                                                type: string
                                              headerName:
                                                description: HeaderName defines the
                                                  name of the header to look for on
                                                  the request.
                                                minLength: 1
                                                type: string
                                            type: object
                                        type: object
                                      minItems: 1
                                      type: array
                                  type: object
                                minItems: 1
                                type: array
                            type: object
                          local:
                            description: Local defines local rate limiting parameters,
                              i.e. parameters for rate limiting that occurs within
                              each Envoy pod as requests are handled.
                            properties:
                              burst:
                                description: Burst defines the number of requests
                                  above the requests per unit that should be allowed
                                  within a short period of time.
                                format: int32
                                type: integer
                              requests:
                                description: Requests defines how many requests per
                                  unit of time should be allowed before rate limiting
                                  occurs.
                                format: int32
                                minimum: 1
                                type: integer
                              responseHeadersToAdd:
                                description: ResponseHeadersToAdd is an optional list
                                  of response headers to set when a request is rate-limited.
                                items:
                                  description: HeaderValue represents a header name/value
                                    pair
                                  properties:
                                    name:
                                      description: Name represents a key of a header
                                      minLength: 1
                                      type: string
                                    value:
                                      description: Value represents the value of a
                                        header specified by a key
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              responseStatusCode:
                                description: ResponseStatusCode is the HTTP status
                                  code to use for responses to rate-limited requests.
                                  Codes must be in the 400-599 range (inclusive).
                                  If not specified, the Envoy default of 429 (Too
                                  Many Requests) is used.
                                format: int32
                                maximum: 599
                                minimum: 400
                                type: integer
                              unit:
                                description: Unit defines the period of time within
                                  which requests over the limit will be rate limited.
                                  Valid values are "second", "minute" and "hour".
                                enum:
                                - second
                                - minute
                                - hour
                                type: string
                            required:
                            - requests
                            - unit
                            type: object
                        type: object
                      tls:
                        description: If present the fields describes TLS properties
                          of the virtual host. The SNI names that will be matched
                          on are described in fqdn, the tls.secretName secret must
                          contain a certificate that itself contains a name that matches
                          the FQDN.
                        properties:
                          clientValidation:
                            description: "ClientValidation defines how to verify the
                              client certificate when an external client establishes
                              a TLS connection to Envoy. \n This setting: \n 1. Enables
                              TLS client certificate validation. 2. Requires clients
                              to present a TLS certificate (i.e. not optional validation).
                              3. Specifies how the client certificate will be validated."
                            properties:
                              caSecret:
                                description: Name of a Kubernetes secret that contains
                                  a CA certificate bundle. The client certificate
                                  must validate against the certificates in the bundle.
                                minLength: 1
                                type: string
                            required:
                            - caSecret
                            type: object
                          enableFallbackCertificate:
                            description: EnableFallbackCertificate defines if the
                              vhost should allow a default certificate to be applied
                              which handles all requests which don't match the SNI
                              defined in this vhost.
                            type: boolean
                          minimumProtocolVersion:
                            description: MinimumProtocolVersion is the minimum TLS
                              version this vhost should negotiate. Valid options are
                              `1.2` (default) and `1.3`. Any other value defaults
                              to TLS 1.2.
                            type: string
                          passthrough:
                            description: Passthrough defines whether the encrypted
                              TLS handshake will be passed through to the backing
                              cluster. Either Passthrough or SecretName must be specified,
                              but not both.
                            type: boolean
                          secretName:
                            description: SecretName is the name of a TLS secret in
                              the current namespace. Either SecretName or Passthrough
                              must be specified, but not both. If specified, the named
                              secret must contain a matching certificate for the virtual
                              host's FQDN.
                            type: string
                        type: object
                    required:
                    - fqdn
                    type: object
                type: object
              status:
                description: Status is a container for computed information about
                  the HTTPProxy.
                properties:
                  conditions:
                    description: "Conditions contains information about the current
                      status of the HTTPProxy, in an upstream-friendly container.
                      \n Contour will update a single condition, `Valid`, that is
                      in normal-true polarity. That is, when `currentStatus` is `valid`,
                      the `Valid` condition will be `status: true`, and vice versa.
                      \n Contour will leave untouched any other Conditions set in
                      this block, in case some other controller wants to add a Condition.
                      \n If you are another controller owner and wish to add a condition,
                      you *should* namespace your condition with a label, like `controller.domain.com/ConditionName`."
                    items:
                      description: "DetailedCondition is an extension of the normal
                        Kubernetes conditions, with two extra fields to hold sub-conditions,
                        which provide more detailed reasons for the state (True or
                        False) of the condition. \n `errors` holds information about
                        sub-conditions which are fatal to that condition and render
                        its state False. \n `warnings` holds information about sub-conditions
                        which are not fatal to that condition and do not force the
                        state to be False. \n Remember that Conditions have a type,
                        a status, and a reason. \n The type is the type of the condition,
                        the most important one in this CRD set is `Valid`. `Valid`
                        is a positive-polarity condition: when it is `status: true`
                        there are no problems. \n In more detail, `status: true` means
                        that the object is has been ingested into Contour with no
                        errors. `warnings` may still be present, and will be indicated
                        in the Reason field. There must be zero entries in the `errors`
                        slice in this case. \n `Valid`, `status: false` means that
                        the object has had one or more fatal errors during processing
                        into Contour.  The details of the errors will be present under
                        the `errors` field. There must be at least one error in the
                        `errors` slice if `status` is `false`. \n For DetailedConditions
                        of types other than `Valid`, the Condition must be in the
                        negative polarity. When they have `status` `true`, there is
                        an error. There must be at least one entry in the `errors`
                        Subcondition slice. When they have `status` `false`, there
                        are no serious errors, and there must be zero entries in the
                        `errors` slice. In either case, there may be entries in the
                        `warnings` slice. \n Regardless of the polarity, the `reason`
                        and `message` fields must be updated with either the detail
                        of the reason (if there is one and only one entry in total
                        across both the `errors` and `warnings` slices), or `MultipleReasons`
                        if there is more than one entry."
                      properties:
                        errors:
                          description: "Errors contains a slice of relevant error
                            subconditions for this object. \n Subconditions are expected
                            to appear when relevant (when there is a error), and disappear
                            when not relevant. An empty slice here indicates no errors."
                          items:
                            description: "SubCondition is a Condition-like type intended
                              for use as a subcondition inside a DetailedCondition.
                              \n It contains a subset of the Condition fields. \n
                              It is intended for warnings and errors, so `type` names
                              should use abnormal-true polarity, that is, they should
                              be of the form \"ErrorPresent: true\". \n The expected
                              lifecycle for these errors is that they should only
                              be present when the error or warning is, and should
                              be removed when they are not relevant."
                            properties:
                              message:
                                description: "Message is a human readable message
                                  indicating details about the transition. \n This
                                  may be an empty string."
                                maxLength: 32768
                                type: string
                              reason:
                                description: "Reason contains a programmatic identifier
                                  indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define
                                  expected values and meanings for this field, and
                                  whether the values are considered a guaranteed API.
                                  \n The value should be a CamelCase string. \n This
                                  field may not be empty."
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: "Type of condition in `CamelCase` or
                                  in `foo.example.com/CamelCase`. \n This must be
                                  in abnormal-true polarity, that is, `ErrorFound`
                                  or `controller.io/ErrorFound`. \n The regex it matches
                                  is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                        warnings:
                          description: "Warnings contains a slice of relevant warning
                            subconditions for this object. \n Subconditions are expected
                            to appear when relevant (when there is a warning), and
                            disappear when not relevant. An empty slice here indicates
                            no warnings."
                          items:
                            description: "SubCondition is a Condition-like type intended
                              for use as a subcondition inside a DetailedCondition.
                              \n It contains a subset of the Condition fields. \n
                              It is intended for warnings and errors, so `type` names
                              should use abnormal-true polarity, that is, they should
                              be of the form \"ErrorPresent: true\". \n The expected
                              lifecycle for these errors is that they should only
                              be present when the error or warning is, and should
                              be removed when they are not relevant."
                            properties:
                              message:
                                description: "Message is a human readable message
                                  indicating details about the transition. \n This
                                  may be an empty string."
                                maxLength: 32768
                                type: string
                              reason:
                                description: "Reason contains a programmatic identifier
                                  indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define
                                  expected values and meanings for this field, and
                                  whether the values are considered a guaranteed API.
                                  \n The value should be a CamelCase string. \n This
                                  field may not be empty."
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: "Type of condition in `CamelCase` or
                                  in `foo.example.com/CamelCase`. \n This must be
                                  in abnormal-true polarity, that is, `ErrorFound`
                                  or `controller.io/ErrorFound`. \n The regex it matches
                                  is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                  currentStatus:
                    type: string
                  description:
                    type: string
                  loadBalancer:
                    description: LoadBalancer contains the current status of the load
                      balancer.
                    properties:
                      ingress:
                        description: Ingress is a list containing ingress points for
                          the load-balancer. Traffic intended for the service should
                          be sent to these ingress points.
                        items:
                          description: 'LoadBalancerIngress represents the status
                            of a load-balancer ingress point: traffic intended for
                            the service should be sent to an ingress point.'
                          properties:
                            hostname:
                              description: Hostname is set for load-balancer ingress
                                points that are DNS based (typically AWS load-balancers)
                              type: string
                            ip:
                              description: IP is set for load-balancer ingress points
                                that are IP based (typically GCE or OpenStack load-balancers)
                              type: string
                            ports:
                              description: Ports is a list of records of service ports
                                If used, every port defined in the service should
                                have an entry in it
                              items:
                                properties:
                                  error:
                                    description: 'Error is to record the problem with
                                      the service port The format of the error shall
                                      comply with the following rules: - built-in
                                      error values shall be specified in this file
                                      and those shall use   CamelCase names - cloud
                                      provider specific error values must have names
                                      that comply with the   format foo.example.com/CamelCase.
                                      --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                    maxLength: 316
                                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                    type: string
                                  port:
                                    description: Port is the port number of the service
                                      port of which status is recorded here
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: 'Protocol is the protocol of the
                                      service port of which status is recorded here
                                      The supported values are: "TCP", "UDP", "SCTP"'
                                    type: string
                                required:
                                - port
                                - protocol
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        type: array
                    type: object
                type: object
            required:
            - metadata
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      labels:
        networking.knative.dev/ingress-provider: contour
      name: tlscertificatedelegations.projectcontour.io
    spec:
      group: projectcontour.io
      names:
        kind: TLSCertificateDelegation
        listKind: TLSCertificateDelegationList
        plural: tlscertificatedelegations
        shortNames:
        - tlscerts
        singular: tlscertificatedelegation
      preserveUnknownFields: false
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            description: TLSCertificateDelegation is an TLS Certificate Delegation
              CRD specification. See design/tls-certificate-delegation.md for details.
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: TLSCertificateDelegationSpec defines the spec of the
                  CRD
                properties:
                  delegations:
                    items:
                      description: CertificateDelegation maps the authority to reference
                        a secret in the current namespace to a set of namespaces.
                      properties:
                        secretName:
                          description: required, the name of a secret in the current
                            namespace.
                          type: string
                        targetNamespaces:
                          description: required, the namespaces the authority to reference
                            the the secret will be delegated to. If TargetNamespaces
                            is nil or empty, the CertificateDelegation' is ignored.
                            If the TargetNamespace list contains the character, "*"
                            the secret will be delegated to all namespaces.
                          items:
                            type: string
                          type: array
                      required:
                      - secretName
                      - targetNamespaces
                      type: object
                    type: array
                required:
                - delegations
                type: object
              status:
                description: TLSCertificateDelegationStatus allows for the status
                  of the delegation to be presented to the user.
                properties:
                  conditions:
                    description: "Conditions contains information about the current
                      status of the HTTPProxy, in an upstream-friendly container.
                      \n Contour will update a single condition, `Valid`, that is
                      in normal-true polarity. That is, when `currentStatus` is `valid`,
                      the `Valid` condition will be `status: true`, and vice versa.
                      \n Contour will leave untouched any other Conditions set in
                      this block, in case some other controller wants to add a Condition.
                      \n If you are another controller owner and wish to add a condition,
                      you *should* namespace your condition with a label, like `controller.domain.com\\ConditionName`."
                    items:
                      description: "DetailedCondition is an extension of the normal
                        Kubernetes conditions, with two extra fields to hold sub-conditions,
                        which provide more detailed reasons for the state (True or
                        False) of the condition. \n `errors` holds information about
                        sub-conditions which are fatal to that condition and render
                        its state False. \n `warnings` holds information about sub-conditions
                        which are not fatal to that condition and do not force the
                        state to be False. \n Remember that Conditions have a type,
                        a status, and a reason. \n The type is the type of the condition,
                        the most important one in this CRD set is `Valid`. `Valid`
                        is a positive-polarity condition: when it is `status: true`
                        there are no problems. \n In more detail, `status: true` means
                        that the object is has been ingested into Contour with no
                        errors. `warnings` may still be present, and will be indicated
                        in the Reason field. There must be zero entries in the `errors`
                        slice in this case. \n `Valid`, `status: false` means that
                        the object has had one or more fatal errors during processing
                        into Contour.  The details of the errors will be present under
                        the `errors` field. There must be at least one error in the
                        `errors` slice if `status` is `false`. \n For DetailedConditions
                        of types other than `Valid`, the Condition must be in the
                        negative polarity. When they have `status` `true`, there is
                        an error. There must be at least one entry in the `errors`
                        Subcondition slice. When they have `status` `false`, there
                        are no serious errors, and there must be zero entries in the
                        `errors` slice. In either case, there may be entries in the
                        `warnings` slice. \n Regardless of the polarity, the `reason`
                        and `message` fields must be updated with either the detail
                        of the reason (if there is one and only one entry in total
                        across both the `errors` and `warnings` slices), or `MultipleReasons`
                        if there is more than one entry."
                      properties:
                        errors:
                          description: "Errors contains a slice of relevant error
                            subconditions for this object. \n Subconditions are expected
                            to appear when relevant (when there is a error), and disappear
                            when not relevant. An empty slice here indicates no errors."
                          items:
                            description: "SubCondition is a Condition-like type intended
                              for use as a subcondition inside a DetailedCondition.
                              \n It contains a subset of the Condition fields. \n
                              It is intended for warnings and errors, so `type` names
                              should use abnormal-true polarity, that is, they should
                              be of the form \"ErrorPresent: true\". \n The expected
                              lifecycle for these errors is that they should only
                              be present when the error or warning is, and should
                              be removed when they are not relevant."
                            properties:
                              message:
                                description: "Message is a human readable message
                                  indicating details about the transition. \n This
                                  may be an empty string."
                                maxLength: 32768
                                type: string
                              reason:
                                description: "Reason contains a programmatic identifier
                                  indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define
                                  expected values and meanings for this field, and
                                  whether the values are considered a guaranteed API.
                                  \n The value should be a CamelCase string. \n This
                                  field may not be empty."
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: "Type of condition in `CamelCase` or
                                  in `foo.example.com/CamelCase`. \n This must be
                                  in abnormal-true polarity, that is, `ErrorFound`
                                  or `controller.io/ErrorFound`. \n The regex it matches
                                  is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition. Producers
                            of specific condition types may define expected values
                            and meanings for this field, and whether the values are
                            considered a guaranteed API. The value should be a CamelCase
                            string. This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            --- Many .condition.type values are consistent across
                            resources like Available, but because arbitrary conditions
                            can be useful (see .node.status.conditions), the ability
                            to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                        warnings:
                          description: "Warnings contains a slice of relevant warning
                            subconditions for this object. \n Subconditions are expected
                            to appear when relevant (when there is a warning), and
                            disappear when not relevant. An empty slice here indicates
                            no warnings."
                          items:
                            description: "SubCondition is a Condition-like type intended
                              for use as a subcondition inside a DetailedCondition.
                              \n It contains a subset of the Condition fields. \n
                              It is intended for warnings and errors, so `type` names
                              should use abnormal-true polarity, that is, they should
                              be of the form \"ErrorPresent: true\". \n The expected
                              lifecycle for these errors is that they should only
                              be present when the error or warning is, and should
                              be removed when they are not relevant."
                            properties:
                              message:
                                description: "Message is a human readable message
                                  indicating details about the transition. \n This
                                  may be an empty string."
                                maxLength: 32768
                                type: string
                              reason:
                                description: "Reason contains a programmatic identifier
                                  indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define
                                  expected values and meanings for this field, and
                                  whether the values are considered a guaranteed API.
                                  \n The value should be a CamelCase string. \n This
                                  field may not be empty."
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: "Type of condition in `CamelCase` or
                                  in `foo.example.com/CamelCase`. \n This must be
                                  in abnormal-true polarity, that is, `ErrorFound`
                                  or `controller.io/ErrorFound`. \n The regex it matches
                                  is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                type: object
            required:
            - metadata
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour-certgen
      namespace: contour-external
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour
      namespace: contour-external
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: contour-certgen
    subjects:
    - kind: ServiceAccount
      name: contour-certgen
      namespace: contour-external
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour-certgen
      namespace: contour-external
    rules:
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
      - update
  - apiVersion: batch/v1
    kind: Job
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour-certgen-v1.13.1
      namespace: contour-external
    spec:
      backoffLimit: 1
      completions: 1
      parallelism: 1
      template:
        metadata:
          labels:
            app: contour-certgen
        spec:
          containers:
          - command:
            - contour
            - certgen
            - --kube
            - --incluster
            - --overwrite
            - --secrets-format=compact
            - --namespace=$(CONTOUR_NAMESPACE)
            env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            image: gcr.io/knative-releases/github.com/projectcontour/contour/cmd/contour@sha256:ebcce854c513e0f24f3af875d0450a6f55c12c790e3fdbe940548eede6e0cecb
            imagePullPolicy: Always
            name: contour
          restartPolicy: Never
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          serviceAccountName: contour-certgen
      ttlSecondsAfterFinished: 0
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      creationTimestamp: null
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour
    rules:
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - create
      - get
      - update
    - apiGroups:
      - ""
      resources:
      - endpoints
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - services
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - list
    - apiGroups:
      - networking.k8s.io
      resources:
      - ingressclasses
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - networking.k8s.io
      resources:
      - ingresses
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - networking.k8s.io
      resources:
      - ingresses/status
      verbs:
      - create
      - get
      - update
    - apiGroups:
      - networking.x-k8s.io
      resources:
      - backendpolicies
      - gateways
      - httproutes
      - tlsroutes
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - projectcontour.io
      resources:
      - extensionservices
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - projectcontour.io
      resources:
      - extensionservices/status
      verbs:
      - create
      - get
      - update
    - apiGroups:
      - projectcontour.io
      resources:
      - httpproxies
      - tlscertificatedelegations
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - projectcontour.io
      resources:
      - httpproxies/status
      verbs:
      - create
      - get
      - update
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour
      namespace: contour-external
    spec:
      ports:
      - name: xds
        port: 8001
        protocol: TCP
        targetPort: 8001
      selector:
        app: contour
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
      labels:
        networking.knative.dev/ingress-provider: contour
      name: envoy
      namespace: contour-external
    spec:
      externalTrafficPolicy: Local
      ports:
      - name: http
        port: 80
        protocol: TCP
      - name: https
        port: 443
        protocol: TCP
      selector:
        app: envoy
      type: LoadBalancer
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: contour
        networking.knative.dev/ingress-provider: contour
      name: contour
      namespace: contour-external
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: contour
      strategy:
        rollingUpdate:
          maxSurge: 50%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            prometheus.io/port: "8000"
            prometheus.io/scrape: "true"
          labels:
            app: contour
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app: contour
                  topologyKey: kubernetes.io/hostname
                weight: 100
          containers:
          - args:
            - serve
            - --ingress-class-name=contour-external
            - --incluster
            - --xds-address=0.0.0.0
            - --xds-port=8001
            - --envoy-service-http-port=80
            - --envoy-service-https-port=443
            - --contour-cafile=/certs/ca.crt
            - --contour-cert-file=/certs/tls.crt
            - --contour-key-file=/certs/tls.key
            - --config-path=/config/contour.yaml
            command:
            - contour
            env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            image: gcr.io/knative-releases/github.com/projectcontour/contour/cmd/contour@sha256:ebcce854c513e0f24f3af875d0450a6f55c12c790e3fdbe940548eede6e0cecb
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /healthz
                port: 8000
            name: contour
            ports:
            - containerPort: 8001
              name: xds
              protocol: TCP
            - containerPort: 8000
              name: metrics
              protocol: TCP
            - containerPort: 6060
              name: debug
              protocol: TCP
            readinessProbe:
              initialDelaySeconds: 15
              periodSeconds: 10
              tcpSocket:
                port: 8001
            volumeMounts:
            - mountPath: /certs
              name: contourcert
              readOnly: true
            - mountPath: /config
              name: contour-config
              readOnly: true
          dnsPolicy: ClusterFirst
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          serviceAccountName: contour
          volumes:
          - name: contourcert
            secret:
              secretName: contourcert
          - configMap:
              defaultMode: 420
              items:
              - key: contour.yaml
                path: contour.yaml
              name: contour
            name: contour-config
  - apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        app: envoy
        networking.knative.dev/ingress-provider: contour
      name: envoy
      namespace: contour-external
    spec:
      selector:
        matchLabels:
          app: envoy
      template:
        metadata:
          annotations:
            prometheus.io/path: /stats/prometheus
            prometheus.io/port: "8002"
            prometheus.io/scrape: "true"
          labels:
            app: envoy
        spec:
          automountServiceAccountToken: false
          containers:
          - args:
            - envoy
            - shutdown-manager
            command:
            - contour
            image: gcr.io/knative-releases/github.com/projectcontour/contour/cmd/contour@sha256:ebcce854c513e0f24f3af875d0450a6f55c12c790e3fdbe940548eede6e0cecb
            imagePullPolicy: IfNotPresent
            lifecycle:
              preStop:
                exec:
                  command:
                  - contour
                  - envoy
                  - shutdown
            livenessProbe:
              httpGet:
                path: /healthz
                port: 8090
              initialDelaySeconds: 3
              periodSeconds: 10
            name: shutdown-manager
          - args:
            - -c
            - /config/envoy.json
            - --service-cluster $(CONTOUR_NAMESPACE)
            - --service-node $(ENVOY_POD_NAME)
            - --log-level info
            command:
            - envoy
            env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ENVOY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            image: docker.io/envoyproxy/envoy:v1.17.1
            imagePullPolicy: IfNotPresent
            lifecycle:
              preStop:
                httpGet:
                  path: /shutdown
                  port: 8090
                  scheme: HTTP
            name: envoy
            ports:
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 443
              name: https
              protocol: TCP
            readinessProbe:
              httpGet:
                path: /ready
                port: 8002
              initialDelaySeconds: 3
              periodSeconds: 4
            volumeMounts:
            - mountPath: /config
              name: envoy-config
              readOnly: true
            - mountPath: /certs
              name: envoycert
              readOnly: true
          initContainers:
          - args:
            - bootstrap
            - /config/envoy.json
            - --xds-address=contour
            - --xds-port=8001
            - --xds-resource-version=v3
            - --resources-dir=/config/resources
            - --envoy-cafile=/certs/ca.crt
            - --envoy-cert-file=/certs/tls.crt
            - --envoy-key-file=/certs/tls.key
            command:
            - contour
            env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            image: gcr.io/knative-releases/github.com/projectcontour/contour/cmd/contour@sha256:ebcce854c513e0f24f3af875d0450a6f55c12c790e3fdbe940548eede6e0cecb
            imagePullPolicy: IfNotPresent
            name: envoy-initconfig
            volumeMounts:
            - mountPath: /config
              name: envoy-config
            - mountPath: /certs
              name: envoycert
              readOnly: true
          restartPolicy: Always
          serviceAccountName: envoy
          terminationGracePeriodSeconds: 300
          volumes:
          - emptyDir: {}
            name: envoy-config
          - name: envoycert
            secret:
              secretName: envoycert
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 10%
        type: RollingUpdate
  - apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour-internal
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: contour
    subjects:
    - kind: ServiceAccount
      name: contour
      namespace: contour-internal
  - apiVersion: v1
    kind: Namespace
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour-internal
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour
      namespace: contour-internal
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: envoy
      namespace: contour-internal
  - apiVersion: v1
    data:
      contour.yaml: |
        #
        # server:
        #   determine which XDS Server implementation to utilize in Contour.
        #   xds-server-type: contour
        #
        # Specify the gateway-api Gateway Contour should watch.
        # gateway:
        #   name: contour
        #   namespace: contour-internal
        #
        # should contour expect to be running inside a k8s cluster
        # incluster: true
        #
        # path to kubeconfig (if not running inside a k8s cluster)
        # kubeconfig: /path/to/.kube/config
        #
        # Disable RFC-compliant behavior to strip "Content-Length" header if
        # "Tranfer-Encoding: chunked" is also set.
        # disableAllowChunkedLength: false
        # Disable HTTPProxy permitInsecure field
        disablePermitInsecure: false
        tls:
        # minimum TLS version that Contour will negotiate
        # minimum-protocol-version: "1.2"
        # TLS ciphers to be supported by Envoy TLS listeners when negotiating
        # TLS 1.2.
        # cipher-suites:
        # - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
        # - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
        # - 'ECDHE-ECDSA-AES256-GCM-SHA384'
        # - 'ECDHE-RSA-AES256-GCM-SHA384'
        # Defines the Kubernetes name/namespace matching a secret to use
        # as the fallback certificate when requests which don't match the
        # SNI defined for a vhost.
          fallback-certificate:
        #   name: fallback-secret-name
        #   namespace: contour-internal
          envoy-client-certificate:
        #   name: envoy-client-cert-secret-name
        #   namespace: contour-internal
        # The following config shows the defaults for the leader election.
        # leaderelection:
        #   configmap-name: leader-elect
        #   configmap-namespace: contour-internal
        ### Logging options
        # Default setting
        accesslog-format: envoy
        # To enable JSON logging in Envoy
        # accesslog-format: json
        # The default fields that will be logged are specified below.
        # To customise this list, just add or remove entries.
        # The canonical list is available at
        # https://godoc.org/github.com/projectcontour/contour/internal/envoy#JSONFields
        # json-fields:
        #   - "@timestamp"
        #   - "authority"
        #   - "bytes_received"
        #   - "bytes_sent"
        #   - "downstream_local_address"
        #   - "downstream_remote_address"
        #   - "duration"
        #   - "method"
        #   - "path"
        #   - "protocol"
        #   - "request_id"
        #   - "requested_server_name"
        #   - "response_code"
        #   - "response_flags"
        #   - "uber_trace_id"
        #   - "upstream_cluster"
        #   - "upstream_host"
        #   - "upstream_local_address"
        #   - "upstream_service_time"
        #   - "user_agent"
        #   - "x_forwarded_for"
        #
        # default-http-versions:
        # - "HTTP/2"
        # - "HTTP/1.1"
        #
        # The following shows the default proxy timeout settings.
        # timeouts:
        #   request-timeout: infinity
        #   connection-idle-timeout: 60s
        #   stream-idle-timeout: 5m
        #   max-connection-duration: infinity
        #   delayed-close-timeout: 1s
        #   connection-shutdown-grace-period: 5s
        #
        # Envoy cluster settings.
        # cluster:
        #   configure the cluster dns lookup family
        #   valid options are: auto (default), v4, v6
        #   dns-lookup-family: auto
        #
        # Envoy network settings.
        # network:
        #   Configure the number of additional ingress proxy hops from the
        #   right side of the x-forwarded-for HTTP header to trust.
        #   num-trusted-hops: 0
        #
        # Configure an optional global rate limit service.
        # rateLimitService:
        #   Identifies the extension service defining the rate limit service,
        #   formatted as <namespace>/<name>.
        #   extensionService: projectcontour/ratelimit
        #   Defines the rate limit domain to pass to the rate limit service.
        #   Acts as a container for a set of rate limit definitions within
        #   the RLS.
        #   domain: contour
        #   Defines whether to allow requests to proceed when the rate limit
        #   service fails to respond with a valid rate limit decision within
        #   the timeout defined on the extension service.
        #   failOpen: false
    kind: ConfigMap
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour
      namespace: contour-internal
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour-certgen
      namespace: contour-internal
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour
      namespace: contour-internal
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: contour-certgen
    subjects:
    - kind: ServiceAccount
      name: contour-certgen
      namespace: contour-internal
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour-certgen
      namespace: contour-internal
    rules:
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - create
      - update
  - apiVersion: batch/v1
    kind: Job
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour-certgen-v1.13.1
      namespace: contour-internal
    spec:
      backoffLimit: 1
      completions: 1
      parallelism: 1
      template:
        metadata:
          labels:
            app: contour-certgen
        spec:
          containers:
          - command:
            - contour
            - certgen
            - --kube
            - --incluster
            - --overwrite
            - --secrets-format=compact
            - --namespace=$(CONTOUR_NAMESPACE)
            env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            image: gcr.io/knative-releases/github.com/projectcontour/contour/cmd/contour@sha256:ebcce854c513e0f24f3af875d0450a6f55c12c790e3fdbe940548eede6e0cecb
            imagePullPolicy: Always
            name: contour
          restartPolicy: Never
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          serviceAccountName: contour-certgen
      ttlSecondsAfterFinished: 0
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour
      namespace: contour-internal
    spec:
      ports:
      - name: xds
        port: 8001
        protocol: TCP
        targetPort: 8001
      selector:
        app: contour
      type: ClusterIP
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
      labels:
        networking.knative.dev/ingress-provider: contour
      name: envoy
      namespace: contour-internal
    spec:
      ports:
      - name: http
        port: 80
        protocol: TCP
      - name: https
        port: 443
        protocol: TCP
      selector:
        app: envoy
      type: ClusterIP
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: contour
        networking.knative.dev/ingress-provider: contour
      name: contour
      namespace: contour-internal
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: contour
      strategy:
        rollingUpdate:
          maxSurge: 50%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            prometheus.io/port: "8000"
            prometheus.io/scrape: "true"
          labels:
            app: contour
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app: contour
                  topologyKey: kubernetes.io/hostname
                weight: 100
          containers:
          - args:
            - serve
            - --ingress-class-name=contour-internal
            - --incluster
            - --xds-address=0.0.0.0
            - --xds-port=8001
            - --envoy-service-http-port=80
            - --envoy-service-https-port=443
            - --contour-cafile=/certs/ca.crt
            - --contour-cert-file=/certs/tls.crt
            - --contour-key-file=/certs/tls.key
            - --config-path=/config/contour.yaml
            command:
            - contour
            env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            image: gcr.io/knative-releases/github.com/projectcontour/contour/cmd/contour@sha256:ebcce854c513e0f24f3af875d0450a6f55c12c790e3fdbe940548eede6e0cecb
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /healthz
                port: 8000
            name: contour
            ports:
            - containerPort: 8001
              name: xds
              protocol: TCP
            - containerPort: 8000
              name: metrics
              protocol: TCP
            - containerPort: 6060
              name: debug
              protocol: TCP
            readinessProbe:
              initialDelaySeconds: 15
              periodSeconds: 10
              tcpSocket:
                port: 8001
            volumeMounts:
            - mountPath: /certs
              name: contourcert
              readOnly: true
            - mountPath: /config
              name: contour-config
              readOnly: true
          dnsPolicy: ClusterFirst
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          serviceAccountName: contour
          volumes:
          - name: contourcert
            secret:
              secretName: contourcert
          - configMap:
              defaultMode: 420
              items:
              - key: contour.yaml
                path: contour.yaml
              name: contour
            name: contour-config
  - apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        app: envoy
        networking.knative.dev/ingress-provider: contour
      name: envoy
      namespace: contour-internal
    spec:
      selector:
        matchLabels:
          app: envoy
      template:
        metadata:
          annotations:
            prometheus.io/path: /stats/prometheus
            prometheus.io/port: "8002"
            prometheus.io/scrape: "true"
          labels:
            app: envoy
        spec:
          automountServiceAccountToken: false
          containers:
          - args:
            - envoy
            - shutdown-manager
            command:
            - contour
            image: gcr.io/knative-releases/github.com/projectcontour/contour/cmd/contour@sha256:ebcce854c513e0f24f3af875d0450a6f55c12c790e3fdbe940548eede6e0cecb
            imagePullPolicy: IfNotPresent
            lifecycle:
              preStop:
                exec:
                  command:
                  - contour
                  - envoy
                  - shutdown
            livenessProbe:
              httpGet:
                path: /healthz
                port: 8090
              initialDelaySeconds: 3
              periodSeconds: 10
            name: shutdown-manager
          - args:
            - -c
            - /config/envoy.json
            - --service-cluster $(CONTOUR_NAMESPACE)
            - --service-node $(ENVOY_POD_NAME)
            - --log-level info
            command:
            - envoy
            env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ENVOY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            image: docker.io/envoyproxy/envoy:v1.17.1
            imagePullPolicy: IfNotPresent
            lifecycle:
              preStop:
                httpGet:
                  path: /shutdown
                  port: 8090
                  scheme: HTTP
            name: envoy
            ports:
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 443
              name: https
              protocol: TCP
            readinessProbe:
              httpGet:
                path: /ready
                port: 8002
              initialDelaySeconds: 3
              periodSeconds: 4
            volumeMounts:
            - mountPath: /config
              name: envoy-config
              readOnly: true
            - mountPath: /certs
              name: envoycert
              readOnly: true
          initContainers:
          - args:
            - bootstrap
            - /config/envoy.json
            - --xds-address=contour
            - --xds-port=8001
            - --xds-resource-version=v3
            - --resources-dir=/config/resources
            - --envoy-cafile=/certs/ca.crt
            - --envoy-cert-file=/certs/tls.crt
            - --envoy-key-file=/certs/tls.key
            command:
            - contour
            env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            image: gcr.io/knative-releases/github.com/projectcontour/contour/cmd/contour@sha256:ebcce854c513e0f24f3af875d0450a6f55c12c790e3fdbe940548eede6e0cecb
            imagePullPolicy: IfNotPresent
            name: envoy-initconfig
            volumeMounts:
            - mountPath: /config
              name: envoy-config
            - mountPath: /certs
              name: envoycert
              readOnly: true
          restartPolicy: Always
          serviceAccountName: envoy
          terminationGracePeriodSeconds: 300
          volumes:
          - emptyDir: {}
            name: envoy-config
          - name: envoycert
            secret:
              secretName: envoycert
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 10%
        type: RollingUpdate
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: default-ns-sa
      namespace: default
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: default-ns-role
      namespace: default
    rules:
    - apiGroups:
      - '*'
      resources:
      - '*'
      verbs:
      - '*'
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: default-ns-role-binding
      namespace: default
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: default-ns-role
    subjects:
    - kind: ServiceAccount
      name: default-ns-sa
      namespace: default
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: kapp-controller
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: kapp-controller-packaging-global
  - apiVersion: apiregistration.k8s.io/v1
    kind: APIService
    metadata:
      name: v1alpha1.data.packaging.carvel.dev
    spec:
      group: data.packaging.carvel.dev
      groupPriorityMinimum: 100
      service:
        name: packaging-api
        namespace: kapp-controller
      version: v1alpha1
      versionPriority: 100
  - apiVersion: v1
    kind: Service
    metadata:
      name: packaging-api
      namespace: kapp-controller
    spec:
      ports:
      - port: 443
        protocol: TCP
        targetPort: api
      selector:
        app: kapp-controller
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: internalpackagemetadatas.internal.packaging.carvel.dev
    spec:
      group: internal.packaging.carvel.dev
      names:
        kind: InternalPackageMetadata
        listKind: InternalPackageMetadataList
        plural: internalpackagemetadatas
        singular: internalpackagemetadata
      scope: Namespaced
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  categories:
                    items:
                      type: string
                    type: array
                  displayName:
                    type: string
                  iconSVGBase64:
                    type: string
                  longDescription:
                    type: string
                  maintainers:
                    items:
                      properties:
                        name:
                          type: string
                      type: object
                    type: array
                  providerName:
                    type: string
                  shortDescription:
                    type: string
                  supportDescription:
                    type: string
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: internalpackages.internal.packaging.carvel.dev
    spec:
      group: internal.packaging.carvel.dev
      names:
        kind: InternalPackage
        listKind: InternalPackageList
        plural: internalpackages
        singular: internalpackage
      scope: Namespaced
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  capacityRequirementsDescription:
                    type: string
                  licenses:
                    items:
                      type: string
                    type: array
                  refName:
                    type: string
                  releaseNotes:
                    type: string
                  releasedAt:
                    format: date-time
                    nullable: true
                    type: string
                  template:
                    properties:
                      spec:
                        properties:
                          canceled:
                            description: Canceled when set to true will stop all active
                              changes
                            type: boolean
                          cluster:
                            properties:
                              kubeconfigSecretRef:
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                type: object
                              namespace:
                                type: string
                            type: object
                          deploy:
                            items:
                              properties:
                                kapp:
                                  properties:
                                    delete:
                                      properties:
                                        rawOptions:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    inspect:
                                      properties:
                                        rawOptions:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    intoNs:
                                      type: string
                                    mapNs:
                                      items:
                                        type: string
                                      type: array
                                    rawOptions:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              type: object
                            type: array
                          fetch:
                            items:
                              properties:
                                git:
                                  description: TODO implement git
                                  properties:
                                    lfsSkipSmudge:
                                      type: boolean
                                    ref:
                                      type: string
                                    secretRef:
                                      description: 'Secret may include one or more
                                        keys: ssh-privatekey, ssh-knownhosts'
                                      properties:
                                        name:
                                          description: Object is expected to be within
                                            same namespace
                                          type: string
                                      type: object
                                    subPath:
                                      type: string
                                    url:
                                      type: string
                                  type: object
                                helmChart:
                                  properties:
                                    name:
                                      description: 'Example: stable/redis'
                                      type: string
                                    repository:
                                      properties:
                                        secretRef:
                                          properties:
                                            name:
                                              description: Object is expected to be
                                                within same namespace
                                              type: string
                                          type: object
                                        url:
                                          type: string
                                      type: object
                                    version:
                                      type: string
                                  type: object
                                http:
                                  properties:
                                    secretRef:
                                      description: 'Secret may include one or more
                                        keys: username, password'
                                      properties:
                                        name:
                                          description: Object is expected to be within
                                            same namespace
                                          type: string
                                      type: object
                                    sha256:
                                      type: string
                                    subPath:
                                      type: string
                                    url:
                                      description: 'URL can point to one of following
                                        formats: text, tgz, zip'
                                      type: string
                                  type: object
                                image:
                                  properties:
                                    secretRef:
                                      description: 'Secret may include one or more
                                        keys: username, password, token. By default
                                        anonymous access is used for authentication.
                                        TODO support docker config formated secret'
                                      properties:
                                        name:
                                          description: Object is expected to be within
                                            same namespace
                                          type: string
                                      type: object
                                    subPath:
                                      type: string
                                    url:
                                      description: 'Example: username/app1-config:v0.1.0'
                                      type: string
                                  type: object
                                imgpkgBundle:
                                  properties:
                                    image:
                                      type: string
                                    secretRef:
                                      description: 'Secret may include one or more
                                        keys: username, password, token. By default
                                        anonymous access is used for authentication.
                                        TODO support docker config formated secret'
                                      properties:
                                        name:
                                          description: Object is expected to be within
                                            same namespace
                                          type: string
                                      type: object
                                  type: object
                                inline:
                                  properties:
                                    paths:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    pathsFrom:
                                      items:
                                        properties:
                                          configMapRef:
                                            properties:
                                              directoryPath:
                                                type: string
                                              name:
                                                type: string
                                            type: object
                                          secretRef:
                                            properties:
                                              directoryPath:
                                                type: string
                                              name:
                                                type: string
                                            type: object
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            type: array
                          noopDelete:
                            description: When NoopDeletion set to true, App deletion
                              should delete App CR but preserve App's associated resources
                            type: boolean
                          paused:
                            description: Paused when set to true will ignore all pending
                              changes, once it set back to false, pending changes
                              will be applied
                            type: boolean
                          serviceAccountName:
                            type: string
                          syncPeriod:
                            description: Controls frequency of app reconciliation
                            type: string
                          template:
                            items:
                              properties:
                                helmTemplate:
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                    path:
                                      type: string
                                    valuesFrom:
                                      items:
                                        properties:
                                          configMapRef:
                                            properties:
                                              name:
                                                type: string
                                            type: object
                                          path:
                                            type: string
                                          secretRef:
                                            properties:
                                              name:
                                                type: string
                                            type: object
                                        type: object
                                      type: array
                                  type: object
                                jsonnet:
                                  description: TODO implement jsonnet
                                  type: object
                                kbld:
                                  properties:
                                    paths:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                kustomize:
                                  description: TODO implement kustomize
                                  type: object
                                sops:
                                  properties:
                                    paths:
                                      items:
                                        type: string
                                      type: array
                                    pgp:
                                      properties:
                                        privateKeysSecretRef:
                                          properties:
                                            name:
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                ytt:
                                  properties:
                                    fileMarks:
                                      items:
                                        type: string
                                      type: array
                                    ignoreUnknownComments:
                                      type: boolean
                                    inline:
                                      properties:
                                        paths:
                                          additionalProperties:
                                            type: string
                                          type: object
                                        pathsFrom:
                                          items:
                                            properties:
                                              configMapRef:
                                                properties:
                                                  directoryPath:
                                                    type: string
                                                  name:
                                                    type: string
                                                type: object
                                              secretRef:
                                                properties:
                                                  directoryPath:
                                                    type: string
                                                  name:
                                                    type: string
                                                type: object
                                            type: object
                                          type: array
                                      type: object
                                    paths:
                                      items:
                                        type: string
                                      type: array
                                    strict:
                                      type: boolean
                                    valuesFrom:
                                      items:
                                        properties:
                                          configMapRef:
                                            properties:
                                              name:
                                                type: string
                                            type: object
                                          path:
                                            type: string
                                          secretRef:
                                            properties:
                                              name:
                                                type: string
                                            type: object
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            type: array
                        type: object
                    required:
                    - spec
                    type: object
                  valuesSchema:
                    description: valuesSchema can be used to show template values
                      that can be configured by users when a Package is installed
                      in an OpenAPI schema format.
                    properties:
                      openAPIv3:
                        nullable: true
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                    type: object
                  version:
                    type: string
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: apps.kappctrl.k14s.io
    spec:
      group: kappctrl.k14s.io
      names:
        kind: App
        listKind: AppList
        plural: apps
        singular: app
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - description: Friendly description
          jsonPath: .status.friendlyDescription
          name: Description
          type: string
        - description: Last time app started being deployed. Does not mean anything
            was changed.
          jsonPath: .status.deploy.startedAt
          name: Since-Deploy
          type: date
        - description: Time since creation
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  canceled:
                    description: Canceled when set to true will stop all active changes
                    type: boolean
                  cluster:
                    properties:
                      kubeconfigSecretRef:
                        properties:
                          key:
                            type: string
                          name:
                            type: string
                        type: object
                      namespace:
                        type: string
                    type: object
                  deploy:
                    items:
                      properties:
                        kapp:
                          properties:
                            delete:
                              properties:
                                rawOptions:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            inspect:
                              properties:
                                rawOptions:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            intoNs:
                              type: string
                            mapNs:
                              items:
                                type: string
                              type: array
                            rawOptions:
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    type: array
                  fetch:
                    items:
                      properties:
                        git:
                          description: TODO implement git
                          properties:
                            lfsSkipSmudge:
                              type: boolean
                            ref:
                              type: string
                            secretRef:
                              description: 'Secret may include one or more keys: ssh-privatekey,
                                ssh-knownhosts'
                              properties:
                                name:
                                  description: Object is expected to be within same
                                    namespace
                                  type: string
                              type: object
                            subPath:
                              type: string
                            url:
                              type: string
                          type: object
                        helmChart:
                          properties:
                            name:
                              description: 'Example: stable/redis'
                              type: string
                            repository:
                              properties:
                                secretRef:
                                  properties:
                                    name:
                                      description: Object is expected to be within
                                        same namespace
                                      type: string
                                  type: object
                                url:
                                  type: string
                              type: object
                            version:
                              type: string
                          type: object
                        http:
                          properties:
                            secretRef:
                              description: 'Secret may include one or more keys: username,
                                password'
                              properties:
                                name:
                                  description: Object is expected to be within same
                                    namespace
                                  type: string
                              type: object
                            sha256:
                              type: string
                            subPath:
                              type: string
                            url:
                              description: 'URL can point to one of following formats:
                                text, tgz, zip'
                              type: string
                          type: object
                        image:
                          properties:
                            secretRef:
                              description: 'Secret may include one or more keys: username,
                                password, token. By default anonymous access is used
                                for authentication. TODO support docker config formated
                                secret'
                              properties:
                                name:
                                  description: Object is expected to be within same
                                    namespace
                                  type: string
                              type: object
                            subPath:
                              type: string
                            url:
                              description: 'Example: username/app1-config:v0.1.0'
                              type: string
                          type: object
                        imgpkgBundle:
                          properties:
                            image:
                              type: string
                            secretRef:
                              description: 'Secret may include one or more keys: username,
                                password, token. By default anonymous access is used
                                for authentication. TODO support docker config formated
                                secret'
                              properties:
                                name:
                                  description: Object is expected to be within same
                                    namespace
                                  type: string
                              type: object
                          type: object
                        inline:
                          properties:
                            paths:
                              additionalProperties:
                                type: string
                              type: object
                            pathsFrom:
                              items:
                                properties:
                                  configMapRef:
                                    properties:
                                      directoryPath:
                                        type: string
                                      name:
                                        type: string
                                    type: object
                                  secretRef:
                                    properties:
                                      directoryPath:
                                        type: string
                                      name:
                                        type: string
                                    type: object
                                type: object
                              type: array
                          type: object
                      type: object
                    type: array
                  noopDelete:
                    description: When NoopDeletion set to true, App deletion should
                      delete App CR but preserve App's associated resources
                    type: boolean
                  paused:
                    description: Paused when set to true will ignore all pending changes,
                      once it set back to false, pending changes will be applied
                    type: boolean
                  serviceAccountName:
                    type: string
                  syncPeriod:
                    description: Controls frequency of app reconciliation
                    type: string
                  template:
                    items:
                      properties:
                        helmTemplate:
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                            path:
                              type: string
                            valuesFrom:
                              items:
                                properties:
                                  configMapRef:
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                  path:
                                    type: string
                                  secretRef:
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                type: object
                              type: array
                          type: object
                        jsonnet:
                          description: TODO implement jsonnet
                          type: object
                        kbld:
                          properties:
                            paths:
                              items:
                                type: string
                              type: array
                          type: object
                        kustomize:
                          description: TODO implement kustomize
                          type: object
                        sops:
                          properties:
                            paths:
                              items:
                                type: string
                              type: array
                            pgp:
                              properties:
                                privateKeysSecretRef:
                                  properties:
                                    name:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        ytt:
                          properties:
                            fileMarks:
                              items:
                                type: string
                              type: array
                            ignoreUnknownComments:
                              type: boolean
                            inline:
                              properties:
                                paths:
                                  additionalProperties:
                                    type: string
                                  type: object
                                pathsFrom:
                                  items:
                                    properties:
                                      configMapRef:
                                        properties:
                                          directoryPath:
                                            type: string
                                          name:
                                            type: string
                                        type: object
                                      secretRef:
                                        properties:
                                          directoryPath:
                                            type: string
                                          name:
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                              type: object
                            paths:
                              items:
                                type: string
                              type: array
                            strict:
                              type: boolean
                            valuesFrom:
                              items:
                                properties:
                                  configMapRef:
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                  path:
                                    type: string
                                  secretRef:
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                type: object
                              type: array
                          type: object
                      type: object
                    type: array
                type: object
              status:
                properties:
                  conditions:
                    items:
                      description: TODO rename to Condition
                      properties:
                        message:
                          description: Human-readable message indicating details about
                            last transition.
                          type: string
                        reason:
                          description: Unique, this should be a short, machine understandable
                            string that gives the reason for condition's last transition.
                            If it reports "ResizeStarted" that means the underlying
                            persistent volume is being resized.
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  consecutiveReconcileFailures:
                    type: integer
                  consecutiveReconcileSuccesses:
                    type: integer
                  deploy:
                    properties:
                      error:
                        type: string
                      exitCode:
                        type: integer
                      finished:
                        type: boolean
                      startedAt:
                        format: date-time
                        type: string
                      stderr:
                        type: string
                      stdout:
                        type: string
                      updatedAt:
                        format: date-time
                        type: string
                    type: object
                  fetch:
                    properties:
                      error:
                        type: string
                      exitCode:
                        type: integer
                      startedAt:
                        format: date-time
                        type: string
                      stderr:
                        type: string
                      stdout:
                        type: string
                      updatedAt:
                        format: date-time
                        type: string
                    type: object
                  friendlyDescription:
                    type: string
                  inspect:
                    properties:
                      error:
                        type: string
                      exitCode:
                        type: integer
                      stderr:
                        type: string
                      stdout:
                        type: string
                      updatedAt:
                        format: date-time
                        type: string
                    type: object
                  managedAppName:
                    type: string
                  observedGeneration:
                    format: int64
                    type: integer
                  template:
                    properties:
                      error:
                        type: string
                      exitCode:
                        type: integer
                      stderr:
                        type: string
                      updatedAt:
                        format: date-time
                        type: string
                    type: object
                  usefulErrorMessage:
                    type: string
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: packageinstalls.packaging.carvel.dev
    spec:
      group: packaging.carvel.dev
      names:
        kind: PackageInstall
        listKind: PackageInstallList
        plural: packageinstalls
        shortNames:
        - pkgi
        singular: packageinstall
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - description: PackageMetadata name
          jsonPath: .spec.packageRef.refName
          name: Package name
          type: string
        - description: PackageMetadata version
          jsonPath: .status.version
          name: Package version
          type: string
        - description: Friendly description
          jsonPath: .status.friendlyDescription
          name: Description
          type: string
        - description: Time since creation
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  canceled:
                    description: Canceled when set to true will stop all active changes
                    type: boolean
                  cluster:
                    properties:
                      kubeconfigSecretRef:
                        properties:
                          key:
                            type: string
                          name:
                            type: string
                        type: object
                      namespace:
                        type: string
                    type: object
                  noopDelete:
                    description: When NoopDelete set to true, PackageInstall deletion
                      should delete PackageInstall/App CR but preserve App's associated
                      resources.
                    type: boolean
                  packageRef:
                    properties:
                      refName:
                        type: string
                      versionSelection:
                        properties:
                          constraints:
                            type: string
                          prereleases:
                            properties:
                              identifiers:
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                    type: object
                  paused:
                    description: Paused when set to true will ignore all pending changes,
                      once it set back to false, pending changes will be applied
                    type: boolean
                  serviceAccountName:
                    type: string
                  syncPeriod:
                    description: Controls frequency of App reconciliation in time
                      + unit format. Always >= 30s. If value below 30s is specified,
                      30s will be used.
                    type: string
                  values:
                    items:
                      properties:
                        secretRef:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
              status:
                properties:
                  conditions:
                    items:
                      description: TODO rename to Condition
                      properties:
                        message:
                          description: Human-readable message indicating details about
                            last transition.
                          type: string
                        reason:
                          description: Unique, this should be a short, machine understandable
                            string that gives the reason for condition's last transition.
                            If it reports "ResizeStarted" that means the underlying
                            persistent volume is being resized.
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  friendlyDescription:
                    type: string
                  observedGeneration:
                    format: int64
                    type: integer
                  usefulErrorMessage:
                    type: string
                  version:
                    description: TODO this is desired resolved version (not actually
                      deployed)
                    type: string
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        packaging.carvel.dev/global-namespace: kapp-controller-packaging-global
      name: packagerepositories.packaging.carvel.dev
    spec:
      group: packaging.carvel.dev
      names:
        kind: PackageRepository
        listKind: PackageRepositoryList
        plural: packagerepositories
        shortNames:
        - pkgr
        singular: packagerepository
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - description: Time since creation
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Friendly description
          jsonPath: .status.friendlyDescription
          name: Description
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  fetch:
                    properties:
                      git:
                        description: TODO implement git
                        properties:
                          lfsSkipSmudge:
                            type: boolean
                          ref:
                            type: string
                          secretRef:
                            description: 'Secret may include one or more keys: ssh-privatekey,
                              ssh-knownhosts'
                            properties:
                              name:
                                description: Object is expected to be within same
                                  namespace
                                type: string
                            type: object
                          subPath:
                            type: string
                          url:
                            type: string
                        type: object
                      http:
                        properties:
                          secretRef:
                            description: 'Secret may include one or more keys: username,
                              password'
                            properties:
                              name:
                                description: Object is expected to be within same
                                  namespace
                                type: string
                            type: object
                          sha256:
                            type: string
                          subPath:
                            type: string
                          url:
                            description: 'URL can point to one of following formats:
                              text, tgz, zip'
                            type: string
                        type: object
                      image:
                        properties:
                          secretRef:
                            description: 'Secret may include one or more keys: username,
                              password, token. By default anonymous access is used
                              for authentication. TODO support docker config formated
                              secret'
                            properties:
                              name:
                                description: Object is expected to be within same
                                  namespace
                                type: string
                            type: object
                          subPath:
                            type: string
                          url:
                            description: 'Example: username/app1-config:v0.1.0'
                            type: string
                        type: object
                      imgpkgBundle:
                        properties:
                          image:
                            type: string
                          secretRef:
                            description: 'Secret may include one or more keys: username,
                              password, token. By default anonymous access is used
                              for authentication. TODO support docker config formated
                              secret'
                            properties:
                              name:
                                description: Object is expected to be within same
                                  namespace
                                type: string
                            type: object
                        type: object
                    type: object
                  paused:
                    description: Paused when set to true will ignore all pending changes,
                      once it set back to false, pending changes will be applied
                    type: boolean
                  syncPeriod:
                    description: Controls frequency of PackageRepository reconciliation
                    type: string
                required:
                - fetch
                type: object
              status:
                properties:
                  conditions:
                    items:
                      description: TODO rename to Condition
                      properties:
                        message:
                          description: Human-readable message indicating details about
                            last transition.
                          type: string
                        reason:
                          description: Unique, this should be a short, machine understandable
                            string that gives the reason for condition's last transition.
                            If it reports "ResizeStarted" that means the underlying
                            persistent volume is being resized.
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  consecutiveReconcileFailures:
                    type: integer
                  consecutiveReconcileSuccesses:
                    type: integer
                  deploy:
                    properties:
                      error:
                        type: string
                      exitCode:
                        type: integer
                      finished:
                        type: boolean
                      startedAt:
                        format: date-time
                        type: string
                      stderr:
                        type: string
                      stdout:
                        type: string
                      updatedAt:
                        format: date-time
                        type: string
                    type: object
                  fetch:
                    properties:
                      error:
                        type: string
                      exitCode:
                        type: integer
                      startedAt:
                        format: date-time
                        type: string
                      stderr:
                        type: string
                      stdout:
                        type: string
                      updatedAt:
                        format: date-time
                        type: string
                    type: object
                  friendlyDescription:
                    type: string
                  observedGeneration:
                    format: int64
                    type: integer
                  template:
                    properties:
                      error:
                        type: string
                      exitCode:
                        type: integer
                      stderr:
                        type: string
                      updatedAt:
                        format: date-time
                        type: string
                    type: object
                  usefulErrorMessage:
                    type: string
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kapp-controller.carvel.dev/version: v0.23.0
        kbld.k14s.io/images: |
          - Metas:
            - Path: /Users/dk/workspace/k14s-go/src/github.com/vmware-tanzu/carvel-kapp-controller
              Type: local
            - Dirty: false
              RemoteURL: git@github.com:vmware-tanzu/carvel-kapp-controller
              SHA: 34e7f460409ba066b30162e4c4077f64e24c1243
              Tags:
              - v0.23.0
              Type: git
            URL: index.docker.io/k14s/kapp-controller@sha256:d7818225512f149b782323d02193fe5866e0e329a5fa5497e5c6870f390ddb77
      name: kapp-controller
      namespace: kapp-controller
    spec:
      replicas: 1
      revisionHistoryLimit: 0
      selector:
        matchLabels:
          app: kapp-controller
      template:
        metadata:
          labels:
            app: kapp-controller
        spec:
          containers:
          - args:
            - -packaging-global-namespace=kapp-controller-packaging-global
            env:
            - name: KAPPCTRL_MEM_TMP_DIR
              value: /etc/kappctrl-mem-tmp
            - name: KAPPCTRL_SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KAPPCTRL_API_PORT
              value: "10350"
            image: index.docker.io/k14s/kapp-controller@sha256:d7818225512f149b782323d02193fe5866e0e329a5fa5497e5c6870f390ddb77
            name: kapp-controller
            ports:
            - containerPort: 10350
              name: api
              protocol: TCP
            resources:
              requests:
                cpu: 120m
                memory: 100Mi
            securityContext:
              runAsGroup: 2000
              runAsUser: 1000
            volumeMounts:
            - mountPath: /etc/kappctrl-mem-tmp
              name: template-fs
          securityContext:
            fsGroup: 3000
          serviceAccount: kapp-controller-sa
          volumes:
          - emptyDir:
              medium: Memory
            name: template-fs
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: kapp-controller-sa
      namespace: kapp-controller
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: kapp-controller-cluster-role
    rules:
    - apiGroups:
      - ""
      resources:
      - secrets
      - configmaps
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - serviceaccounts
      verbs:
      - get
    - apiGroups:
      - kappctrl.k14s.io
      resources:
      - apps
      - apps/status
      verbs:
      - '*'
    - apiGroups:
      - packaging.carvel.dev
      resources:
      - packageinstalls
      - packageinstalls/status
      verbs:
      - '*'
    - apiGroups:
      - packaging.carvel.dev
      resources:
      - packagerepositories
      - packagerepositories/status
      verbs:
      - '*'
    - apiGroups:
      - internal.packaging.carvel.dev
      resources:
      - internalpackagemetadatas
      verbs:
      - '*'
    - apiGroups:
      - data.packaging.carvel.dev
      resources:
      - packagemetadatas
      - packagemetadatas/status
      verbs:
      - '*'
    - apiGroups:
      - internal.packaging.carvel.dev
      resources:
      - internalpackages
      verbs:
      - '*'
    - apiGroups:
      - data.packaging.carvel.dev
      resources:
      - packages
      - packages/status
      verbs:
      - '*'
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - '*'
    - apiGroups:
      - apiregistration.k8s.io
      resources:
      - apiservices
      verbs:
      - update
      - get
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - list
      - watch
      - get
      - update
    - apiGroups:
      - admissionregistration.k8s.io
      resources:
      - mutatingwebhookconfigurations
      verbs:
      - list
      - watch
    - apiGroups:
      - admissionregistration.k8s.io
      resources:
      - validatingwebhookconfigurations
      verbs:
      - list
      - watch
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: kapp-controller-cluster-role-binding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kapp-controller-cluster-role
    subjects:
    - kind: ServiceAccount
      name: kapp-controller-sa
      namespace: kapp-controller
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: pkg-apiserver:system:auth-delegator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subjects:
    - kind: ServiceAccount
      name: kapp-controller-sa
      namespace: kapp-controller
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: pkgserver-auth-reader
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: extension-apiserver-authentication-reader
    subjects:
    - kind: ServiceAccount
      name: kapp-controller-sa
      namespace: kapp-controller
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
        serving.knative.dev/controller: "true"
      name: knative-contour-core
    rules:
    - apiGroups:
      - projectcontour.io
      resources:
      - httpproxies
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - deletecollection
      - patch
      - watch
  - apiVersion: v1
    data:
      _example: |
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # timeout-policy-idle sets TimeoutPolicy.Idle in contour HTTPProxy spec
        timeout-policy-idle: "infinity"

        # timeout-policy-response sets TimeoutPolicy.Response in contour HTTPProxy spec
        timeout-policy-response: "infinity"

        # If auto-TLS is disabled fallback to the following certificate
        #
        # An operator is required to setup a TLSCertificateDelegation
        # for this secret to be used
        default-tls-secret: "some-namespace/some-secret"

        # visibility contains the configuration for how to expose services
        # of assorted visibilities.  Each entry is keyed by the visibility
        # and contains two keys:
        #  1. the "class" value to pass to the Contour class annotations,
        #  2. the namespace/name of the Contour Envoy service.
        visibility: |
          ExternalIP:
            class: contour-external
            service: contour-external/envoy
          ClusterLocal:
            class: contour-internal
            service: contour-internal/envoy
    kind: ConfigMap
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
        serving.knative.dev/release: v0.22.0
      name: config-contour
      namespace: knative-serving
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        networking.knative.dev/ingress-provider: contour
      name: contour-ingress-controller
      namespace: knative-serving
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: contour-ingress-controller
      template:
        metadata:
          labels:
            app: contour-ingress-controller
        spec:
          containers:
          - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/net-contour
            image: gcr.io/knative-releases/knative.dev/net-contour/cmd/controller@sha256:705ac18c11352a874ed35d7404eed1792d599bbd5fcdaed7b945484b1d567bd9
            name: controller
            ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            resources:
              limits:
                cpu: 400m
                memory: 400Mi
              requests:
                cpu: 40m
                memory: 40Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
              readOnlyRootFilesystem: true
              runAsNonRoot: true
          serviceAccountName: controller
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: kpack
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: builds.kpack.io
    spec:
      group: kpack.io
      names:
        categories:
        - kpack
        kind: Build
        plural: builds
        shortNames:
        - cnbbuild
        - cnbbuilds
        - bld
        - blds
        singular: build
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.latestImage
          name: Image
          type: string
        - jsonPath: .status.conditions[?(@.type=="Succeeded")].status
          name: Succeeded
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: builders.kpack.io
    spec:
      group: kpack.io
      names:
        categories:
        - kpack
        kind: Builder
        plural: builders
        shortNames:
        - bldr
        - bldrs
        singular: builder
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.latestImage
          name: LatestImage
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: clusterbuilders.kpack.io
    spec:
      group: kpack.io
      names:
        categories:
        - kpack
        kind: ClusterBuilder
        plural: clusterbuilders
        shortNames:
        - clstbldr
        - clstbldrs
        singular: clusterbuilder
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.latestImage
          name: LatestImage
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: clusterstores.kpack.io
    spec:
      group: kpack.io
      names:
        categories:
        - kpack
        kind: ClusterStore
        plural: clusterstores
        singular: clusterstore
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: v1
    data:
      image: gcr.io/cf-build-service-public/kpack/build-init@sha256:31e95adee6d59ac46f5f2ec48208cbd154db0f4f8e6c1de1b8edf0cd9418bba8
    kind: ConfigMap
    metadata:
      name: build-init-image
      namespace: kpack
  - apiVersion: v1
    data:
      image: gcr.io/cf-build-service-public/kpack/build-init-windows@sha256:20758ba22ead903aa4aacaa08a3f89dce0586f938a5d091e6c37bf5b13d632f3
    kind: ConfigMap
    metadata:
      name: build-init-windows-image
      namespace: kpack
  - apiVersion: v1
    data:
      image: gcr.io/cf-build-service-public/kpack/rebase@sha256:79ae0f103bb39d7ef498202d950391c6ef656e06f937b4be4ec2abb6a37ad40a
    kind: ConfigMap
    metadata:
      name: rebase-image
      namespace: kpack
  - apiVersion: v1
    data:
      image: gcr.io/cf-build-service-public/kpack/lifecycle@sha256:c923a81a1c3908122e29a30bae5886646d6ec26429bad4842c67103636041d93
    kind: ConfigMap
    metadata:
      name: lifecycle-image
      namespace: kpack
  - apiVersion: v1
    data:
      image: gcr.io/cf-build-service-public/kpack/completion@sha256:1c63b9c876b11b7bf5f83095136b690fc07860c80b62a167c41b4c3efd1910bd
    kind: ConfigMap
    metadata:
      name: completion-image
      namespace: kpack
  - apiVersion: v1
    data:
      image: gcr.io/cf-build-service-public/kpack/completion-windows@sha256:1f8f1d98ea439ba6a25808a29af33259ad926a7054ad8f4b1aea91abf8a8b141
    kind: ConfigMap
    metadata:
      name: completion-windows-image
      namespace: kpack
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: kpack-controller
      namespace: kpack
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: kpack-controller
      template:
        metadata:
          labels:
            app: kpack-controller
            version: 0.3.1-rc.3
        spec:
          containers:
          - env:
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: kpack.io
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: BUILD_INIT_IMAGE
              valueFrom:
                configMapKeyRef:
                  key: image
                  name: build-init-image
            - name: BUILD_INIT_WINDOWS_IMAGE
              valueFrom:
                configMapKeyRef:
                  key: image
                  name: build-init-windows-image
            - name: REBASE_IMAGE
              valueFrom:
                configMapKeyRef:
                  key: image
                  name: rebase-image
            - name: COMPLETION_IMAGE
              valueFrom:
                configMapKeyRef:
                  key: image
                  name: completion-image
            - name: COMPLETION_WINDOWS_IMAGE
              valueFrom:
                configMapKeyRef:
                  key: image
                  name: completion-windows-image
            - name: LIFECYCLE_IMAGE
              valueFrom:
                configMapKeyRef:
                  key: image
                  name: lifecycle-image
            image: gcr.io/cf-build-service-public/kpack/controller@sha256:4b3c825d6fb656f137706738058aab59051d753312e75404fc5cdaf49c352867
            name: controller
            resources:
              limits:
                cpu: 100m
                memory: 500Mi
              requests:
                cpu: 20m
                memory: 100Mi
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: controller
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: controller
      namespace: kpack
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: kpack-controller-admin
    rules:
    - apiGroups:
      - kpack.io
      resources:
      - builds
      - builds/status
      - builds/finalizers
      - images
      - images/status
      - images/finalizers
      - builders
      - builders/status
      - clusterbuilders
      - clusterbuilders/status
      - clusterstores
      - clusterstores/status
      - clusterstacks
      - clusterstacks/status
      - sourceresolvers
      - sourceresolvers/status
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - get
    - apiGroups:
      - ""
      resources:
      - serviceaccounts
      verbs:
      - get
      - list
    - apiGroups:
      - ""
      resources:
      - persistentvolumeclaims
      - pods
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - watch
    - apiGroups:
      - ""
      resources:
      - nodes
      verbs:
      - list
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: kpack-controller-admin-binding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kpack-controller-admin
    subjects:
    - kind: ServiceAccount
      name: controller
      namespace: kpack
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: kpack-controller-local-config
      namespace: kpack
    rules:
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - get
      - list
      - watch
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: kpack-controller-local-config-binding
      namespace: kpack
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: kpack-controller-local-config
    subjects:
    - kind: ServiceAccount
      name: controller
      namespace: kpack
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: images.kpack.io
    spec:
      group: kpack.io
      names:
        categories:
        - kpack
        kind: Image
        plural: images
        shortNames:
        - cnbimage
        - cnbimages
        - img
        - imgs
        singular: image
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.latestImage
          name: LatestImage
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      name: kpack-webhook
      namespace: kpack
    spec:
      ports:
      - port: 443
        targetPort: 8443
      selector:
        role: webhook
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: sourceresolvers.kpack.io
    spec:
      group: kpack.io
      names:
        categories:
        - kpack
        kind: SourceResolver
        plural: sourceresolvers
        singular: sourceresolver
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: clusterstacks.kpack.io
    spec:
      group: kpack.io
      names:
        categories:
        - kpack
        kind: ClusterStack
        plural: clusterstacks
        singular: clusterstack
      scope: Cluster
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: admissionregistration.k8s.io/v1beta1
    kind: MutatingWebhookConfiguration
    metadata:
      name: defaults.webhook.kpack.io
    webhooks:
    - admissionReviewVersions:
      - v1beta1
      clientConfig:
        service:
          name: kpack-webhook
          namespace: kpack
      failurePolicy: Fail
      name: defaults.webhook.kpack.io
      sideEffects: None
  - apiVersion: admissionregistration.k8s.io/v1beta1
    kind: ValidatingWebhookConfiguration
    metadata:
      name: validation.webhook.kpack.io
    webhooks:
    - admissionReviewVersions:
      - v1beta1
      clientConfig:
        service:
          name: kpack-webhook
          namespace: kpack
      failurePolicy: Fail
      name: validation.webhook.kpack.io
      sideEffects: None
  - apiVersion: v1
    kind: Secret
    metadata:
      name: webhook-certs
      namespace: kpack
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: kpack-webhook
      namespace: kpack
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: kpack-webhook
      template:
        metadata:
          labels:
            app: kpack-webhook
            role: webhook
            version: 0.3.1-rc.3
        spec:
          containers:
          - env:
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: kpack.io
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            image: gcr.io/cf-build-service-public/kpack/webhook@sha256:594fe3525a8bc35f99280e31ebc38a3f1f8e02e0c961c35d27b6397c2ad8fa68
            name: webhook
            ports:
            - containerPort: 8443
              name: https-webhook
            resources:
              limits:
                cpu: 100m
                memory: 200Mi
              requests:
                cpu: 10m
                memory: 50Mi
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: webhook
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: webhook
      namespace: kpack
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: kpack-webhook-certs-admin
      namespace: kpack
    rules:
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resourceNames:
      - webhook-certs
      resources:
      - secrets
      verbs:
      - update
    - apiGroups:
      - ""
      resources:
      - configmaps
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - coordination.k8s.io
      resources:
      - leases
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: kpack-webhook-certs-admin-binding
      namespace: kpack
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: kpack-webhook-certs-admin
    subjects:
    - kind: ServiceAccount
      name: webhook
      namespace: kpack
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: kpack-webhook-mutatingwebhookconfiguration-admin
    rules:
    - apiGroups:
      - admissionregistration.k8s.io
      resourceNames:
      - defaults.webhook.kpack.io
      resources:
      - mutatingwebhookconfigurations
      verbs:
      - update
    - apiGroups:
      - admissionregistration.k8s.io
      resources:
      - mutatingwebhookconfigurations
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - admissionregistration.k8s.io
      resourceNames:
      - validation.webhook.kpack.io
      resources:
      - validatingwebhookconfigurations
      verbs:
      - update
    - apiGroups:
      - admissionregistration.k8s.io
      resources:
      - validatingwebhookconfigurations
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - storage.k8s.io
      resources:
      - storageclasses
      verbs:
      - get
      - list
      - watch
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: kpack-webhook-certs-mutatingwebhookconfiguration-admin-binding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kpack-webhook-mutatingwebhookconfiguration-admin
    subjects:
    - kind: ServiceAccount
      name: webhook
      namespace: kpack
  - apiVersion: v1
    kind: Namespace
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: knative-serving
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        duck.knative.dev/addressable: "true"
        serving.knative.dev/release: v0.22.0
      name: knative-serving-addressable-resolver
    rules:
    - apiGroups:
      - serving.knative.dev
      resources:
      - routes
      - routes/status
      - services
      - services/status
      verbs:
      - get
      - list
      - watch
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
        serving.knative.dev/release: v0.22.0
      name: knative-serving-namespaced-admin
    rules:
    - apiGroups:
      - serving.knative.dev
      resources:
      - '*'
      verbs:
      - '*'
    - apiGroups:
      - networking.internal.knative.dev
      - autoscaling.internal.knative.dev
      - caching.internal.knative.dev
      resources:
      - '*'
      verbs:
      - get
      - list
      - watch
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        rbac.authorization.k8s.io/aggregate-to-edit: "true"
        serving.knative.dev/release: v0.22.0
      name: knative-serving-namespaced-edit
    rules:
    - apiGroups:
      - serving.knative.dev
      resources:
      - '*'
      verbs:
      - create
      - update
      - patch
      - delete
    - apiGroups:
      - networking.internal.knative.dev
      - autoscaling.internal.knative.dev
      - caching.internal.knative.dev
      resources:
      - '*'
      verbs:
      - get
      - list
      - watch
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
        serving.knative.dev/release: v0.22.0
      name: knative-serving-namespaced-view
    rules:
    - apiGroups:
      - serving.knative.dev
      - networking.internal.knative.dev
      - autoscaling.internal.knative.dev
      - caching.internal.knative.dev
      resources:
      - '*'
      verbs:
      - get
      - list
      - watch
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        serving.knative.dev/controller: "true"
        serving.knative.dev/release: v0.22.0
      name: knative-serving-core
    rules:
    - apiGroups:
      - ""
      resources:
      - pods
      - namespaces
      - secrets
      - configmaps
      - endpoints
      - services
      - events
      - serviceaccounts
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
    - apiGroups:
      - ""
      resources:
      - endpoints/restricted
      verbs:
      - create
    - apiGroups:
      - apps
      resources:
      - deployments
      - deployments/finalizers
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
    - apiGroups:
      - admissionregistration.k8s.io
      resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      - customresourcedefinitions/status
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
    - apiGroups:
      - autoscaling
      resources:
      - horizontalpodautoscalers
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
    - apiGroups:
      - coordination.k8s.io
      resources:
      - leases
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
    - apiGroups:
      - serving.knative.dev
      - autoscaling.internal.knative.dev
      - networking.internal.knative.dev
      resources:
      - '*'
      - '*/status'
      - '*/finalizers'
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - deletecollection
      - patch
      - watch
    - apiGroups:
      - caching.internal.knative.dev
      resources:
      - images
      verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        duck.knative.dev/podspecable: "true"
        serving.knative.dev/release: v0.22.0
      name: knative-serving-podspecable-binding
    rules:
    - apiGroups:
      - serving.knative.dev
      resources:
      - configurations
      - services
      verbs:
      - list
      - watch
      - patch
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: controller
      namespace: knative-serving
  - aggregationRule:
      clusterRoleSelectors:
      - matchLabels:
          serving.knative.dev/controller: "true"
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: knative-serving-admin
    rules: []
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: knative-serving-controller-admin
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: knative-serving-admin
    subjects:
    - kind: ServiceAccount
      name: controller
      namespace: knative-serving
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        knative.dev/crd-install: "true"
      name: images.caching.internal.knative.dev
    spec:
      group: caching.internal.knative.dev
      names:
        categories:
        - knative-internal
        - caching
        kind: Image
        plural: images
        shortNames:
        - img
        singular: image
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.image
          name: Image
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        knative.dev/crd-install: "true"
        serving.knative.dev/release: v0.22.0
      name: certificates.networking.internal.knative.dev
    spec:
      group: networking.internal.knative.dev
      names:
        categories:
        - knative-internal
        - networking
        kind: Certificate
        plural: certificates
        shortNames:
        - kcert
        singular: certificate
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Reason
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        duck.knative.dev/podspecable: "true"
        knative.dev/crd-install: "true"
        serving.knative.dev/release: v0.22.0
      name: configurations.serving.knative.dev
    spec:
      group: serving.knative.dev
      names:
        categories:
        - all
        - knative
        - serving
        kind: Configuration
        plural: configurations
        shortNames:
        - config
        - cfg
        singular: configuration
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.latestCreatedRevisionName
          name: LatestCreated
          type: string
        - jsonPath: .status.latestReadyRevisionName
          name: LatestReady
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        name: v1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        knative.dev/crd-install: "true"
        serving.knative.dev/release: v0.22.0
      name: ingresses.networking.internal.knative.dev
    spec:
      group: networking.internal.knative.dev
      names:
        categories:
        - knative-internal
        - networking
        kind: Ingress
        plural: ingresses
        shortNames:
        - kingress
        - king
        singular: ingress
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        knative.dev/crd-install: "true"
        serving.knative.dev/release: v0.22.0
      name: metrics.autoscaling.internal.knative.dev
    spec:
      group: autoscaling.internal.knative.dev
      names:
        categories:
        - knative-internal
        - autoscaling
        kind: Metric
        plural: metrics
        singular: metric
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        knative.dev/crd-install: "true"
        serving.knative.dev/release: v0.22.0
      name: podautoscalers.autoscaling.internal.knative.dev
    spec:
      group: autoscaling.internal.knative.dev
      names:
        categories:
        - knative-internal
        - autoscaling
        kind: PodAutoscaler
        plural: podautoscalers
        shortNames:
        - kpa
        - pa
        singular: podautoscaler
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.desiredScale
          name: DesiredScale
          type: integer
        - jsonPath: .status.actualScale
          name: ActualScale
          type: integer
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        knative.dev/crd-install: "true"
        serving.knative.dev/release: v0.22.0
      name: revisions.serving.knative.dev
    spec:
      group: serving.knative.dev
      names:
        categories:
        - all
        - knative
        - serving
        kind: Revision
        plural: revisions
        shortNames:
        - rev
        singular: revision
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .metadata.labels['serving\.knative\.dev/configuration']
          name: Config Name
          type: string
        - jsonPath: .status.serviceName
          name: K8s Service Name
          type: string
        - jsonPath: .metadata.labels['serving\.knative\.dev/configurationGeneration']
          name: Generation
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        name: v1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        duck.knative.dev/addressable: "true"
        knative.dev/crd-install: "true"
        serving.knative.dev/release: v0.22.0
      name: routes.serving.knative.dev
    spec:
      group: serving.knative.dev
      names:
        categories:
        - all
        - knative
        - serving
        kind: Route
        plural: routes
        shortNames:
        - rt
        singular: route
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        name: v1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        knative.dev/crd-install: "true"
        serving.knative.dev/release: v0.22.0
      name: serverlessservices.networking.internal.knative.dev
    spec:
      group: networking.internal.knative.dev
      names:
        categories:
        - knative-internal
        - networking
        kind: ServerlessService
        plural: serverlessservices
        shortNames:
        - sks
        singular: serverlessservice
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .spec.mode
          name: Mode
          type: string
        - jsonPath: .spec.numActivators
          name: Activators
          type: integer
        - jsonPath: .status.serviceName
          name: ServiceName
          type: string
        - jsonPath: .status.privateServiceName
          name: PrivateServiceName
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        name: v1alpha1
        schema:
          openAPIV3Schema:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        duck.knative.dev/addressable: "true"
        duck.knative.dev/podspecable: "true"
        knative.dev/crd-install: "true"
        serving.knative.dev/release: v0.22.0
      name: services.serving.knative.dev
    spec:
      group: serving.knative.dev
      names:
        categories:
        - all
        - knative
        - serving
        kind: Service
        plural: services
        shortNames:
        - kservice
        - ksvc
        singular: service
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - jsonPath: .status.url
          name: URL
          type: string
        - jsonPath: .status.latestCreatedRevisionName
          name: LatestCreated
          type: string
        - jsonPath: .status.latestReadyRevisionName
          name: LatestReady
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        name: v1
        schema:
          openAPIV3Schema:
            properties:
              spec:
                properties:
                  template:
                    description: |
                      A template for the current desired application state.
                      Changes to `template` will cause a new Revision to be created as
                      defined in the lifecycle section. The contents of the Service's
                      RevisionTemplateSpec is used to create a corresponding Configuration.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  traffic:
                    description: |
                      Traffic specifies how to distribute traffic over a
                      collection of Revisions belonging to the Service. If traffic is
                      empty or not provided, defaults to 100% traffic to the latest
                      `Ready` Revision. The contents of the Service's TrafficTarget is
                      used to create a corresponding Route.
                    items:
                      properties:
                        configurationName:
                          description: |
                            ConfigurationName of a configuration to whose latest revision we will send
                            this portion of traffic. When the "status.latestReadyRevisionName" of the
                            referenced configuration changes, we will automatically migrate traffic
                            from the prior "latest ready" revision to the new one.  This field is never
                            set in Route's status, only its spec.
                            This is mutually exclusive with RevisionName.
                          type: string
                        latestRevision:
                          description: |
                            `latestRevision` may be optionally provided to indicate
                            that the latest ready Revision of the Configuration should be used
                            for this traffic target. When provided latestRevision MUST be true
                            if revisionName is empty, and it MUST be false when revisionName is non-empty.
                          type: boolean
                        percent:
                          description: |
                            The percentage of requests which should be allocated
                            from the main Route domain name to the specified `revisionName` or
                            `configurationName`.
                            All `percent` values in `traffic` MUST sum to 100.
                          maximum: 100
                          minimum: 0
                          type: integer
                        revisionName:
                          description: |
                            A specific revision to which to send this portion
                            of traffic.
                            This is mutually exclusive with configurationName.
                          type: string
                        tag:
                          description: |
                            Tag is optionally used to expose a dedicated URL for
                            referencing this target exclusively. The dedicated URL MUST include
                            in it the string provided by tag.
                          type: string
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                    x-kubernetes-preserve-unknown-fields: true
                type: object
                x-kubernetes-preserve-unknown-fields: true
              status:
                type: object
                x-kubernetes-preserve-unknown-fields: true
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
        subresources:
          status: {}
  - apiVersion: v1
    data:
      _example: |
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # This block is not actually functional configuration,
        # but serves to illustrate the available configuration
        # options and document them in a way that is accessible
        # to users that `kubectl edit` this config map.
        #
        # These sample configuration options may be copied out of
        # this example block and unindented to be in the data block
        # to actually change the configuration.

        # The Revision ContainerConcurrency field specifies the maximum number
        # of requests the Container can handle at once. Container concurrency
        # target percentage is how much of that maximum to use in a stable
        # state. E.g. if a Revision specifies ContainerConcurrency of 10, then
        # the Autoscaler will try to maintain 7 concurrent connections per pod
        # on average.
        # Note: this limit will be applied to container concurrency set at every
        # level (ConfigMap, Revision Spec or Annotation).
        # For legacy and backwards compatibility reasons, this value also accepts
        # fractional values in (0, 1] interval (i.e. 0.7 ⇒ 70%).
        # Thus minimal percentage value must be greater than 1.0, or it will be
        # treated as a fraction.
        # NOTE: that this value does not affect actual number of concurrent requests
        #       the user container may receive, but only the average number of requests
        #       that the revision pods will receive.
        container-concurrency-target-percentage: "70"

        # The container concurrency target default is what the Autoscaler will
        # try to maintain when concurrency is used as the scaling metric for the
        # Revision and the Revision specifies unlimited concurrency.
        # When revision explicitly specifies container concurrency, that value
        # will be used as a scaling target for autoscaler.
        # When specifying unlimited concurrency, the autoscaler will
        # horizontally scale the application based on this target concurrency.
        # This is what we call "soft limit" in the documentation, i.e. it only
        # affects number of pods and does not affect the number of requests
        # individual pod processes.
        # The value must be a positive number such that the value multiplied
        # by container-concurrency-target-percentage is greater than 0.01.
        # NOTE: that this value will be adjusted by application of
        #       container-concurrency-target-percentage, i.e. by default
        #       the system will target on average 70 concurrent requests
        #       per revision pod.
        # NOTE: Only one metric can be used for autoscaling a Revision.
        container-concurrency-target-default: "100"

        # The requests per second (RPS) target default is what the Autoscaler will
        # try to maintain when RPS is used as the scaling metric for a Revision and
        # the Revision specifies unlimited RPS. Even when specifying unlimited RPS,
        # the autoscaler will horizontally scale the application based on this
        # target RPS.
        # Must be greater than 1.0.
        # NOTE: Only one metric can be used for autoscaling a Revision.
        requests-per-second-target-default: "200"

        # The target burst capacity specifies the size of burst in concurrent
        # requests that the system operator expects the system will receive.
        # Autoscaler will try to protect the system from queueing by introducing
        # Activator in the request path if the current spare capacity of the
        # service is less than this setting.
        # If this setting is 0, then Activator will be in the request path only
        # when the revision is scaled to 0.
        # If this setting is > 0 and container-concurrency-target-percentage is
        # 100% or 1.0, then activator will always be in the request path.
        # -1 denotes unlimited target-burst-capacity and activator will always
        # be in the request path.
        # Other negative values are invalid.
        target-burst-capacity: "200"

        # When operating in a stable mode, the autoscaler operates on the
        # average concurrency over the stable window.
        # Stable window must be in whole seconds.
        stable-window: "60s"

        # When observed average concurrency during the panic window reaches
        # panic-threshold-percentage the target concurrency, the autoscaler
        # enters panic mode. When operating in panic mode, the autoscaler
        # scales on the average concurrency over the panic window which is
        # panic-window-percentage of the stable-window.
        # Must be in the [1, 100] range.
        # When computing the panic window it will be rounded to the closest
        # whole second, at least 1s.
        panic-window-percentage: "10.0"

        # The percentage of the container concurrency target at which to
        # enter panic mode when reached within the panic window.
        panic-threshold-percentage: "200.0"

        # Max scale up rate limits the rate at which the autoscaler will
        # increase pod count. It is the maximum ratio of desired pods versus
        # observed pods.
        # Cannot be less or equal to 1.
        # I.e with value of 2.0 the number of pods can at most go N to 2N
        # over single Autoscaler period (2s), but at least N to
        # N+1, if Autoscaler needs to scale up.
        max-scale-up-rate: "1000.0"

        # Max scale down rate limits the rate at which the autoscaler will
        # decrease pod count. It is the maximum ratio of observed pods versus
        # desired pods.
        # Cannot be less or equal to 1.
        # I.e. with value of 2.0 the number of pods can at most go N to N/2
        # over single Autoscaler evaluation period (2s), but at
        # least N to N-1, if Autoscaler needs to scale down.
        max-scale-down-rate: "2.0"

        # Scale to zero feature flag.
        enable-scale-to-zero: "true"

        # Scale to zero grace period is the time an inactive revision is left
        # running before it is scaled to zero (must be positive, but recommended
        # at least a few seconds if running with mesh networking).
        # This is the upper limit and is provided not to enforce timeout after
        # the revision stopped receiving requests for stable window, but to
        # ensure network reprogramming to put activator in the path has completed.
        # If the system determines that a shorter period is satisfactory,
        # then the system will only wait that amount of time before scaling to 0.
        # NOTE: this period might actually be 0, if activator has been
        # in the request path sufficiently long.
        # If there is necessity for the last pod to linger longer use
        # scale-to-zero-pod-retention-period flag.
        scale-to-zero-grace-period: "30s"

        # Scale to zero pod retention period defines the minimum amount
        # of time the last pod will remain after Autoscaler has decided to
        # scale to zero.
        # This flag is for the situations where the pod startup is very expensive
        # and the traffic is bursty (requiring smaller windows for fast action),
        # but patchy.
        # The larger of this flag and `scale-to-zero-grace-period` will effectively
        # determine how the last pod will hang around.
        scale-to-zero-pod-retention-period: "0s"

        # pod-autoscaler-class specifies the default pod autoscaler class
        # that should be used if none is specified. If omitted, the Knative
        # Horizontal Pod Autoscaler (KPA) is used by default.
        pod-autoscaler-class: "kpa.autoscaling.knative.dev"

        # The capacity of a single activator task.
        # The `unit` is one concurrent request proxied by the activator.
        # activator-capacity must be at least 1.
        # This value is used for computation of the Activator subset size.
        # See the algorithm here: http://bit.ly/38XiCZ3.
        # TODO(vagababov): tune after actual benchmarking.
        activator-capacity: "100.0"

        # initial-scale is the cluster-wide default value for the initial target
        # scale of a revision after creation, unless overridden by the
        # "autoscaling.knative.dev/initialScale" annotation.
        # This value must be greater than 0 unless allow-zero-initial-scale is true.
        initial-scale: "1"

        # allow-zero-initial-scale controls whether either the cluster-wide initial-scale flag,
        # or the "autoscaling.knative.dev/initialScale" annotation, can be set to 0.
        allow-zero-initial-scale: "false"

        # max-scale is the cluster-wide default value for the max scale of a revision,
        # unless overridden by the "autoscaling.knative.dev/maxScale" annotation.
        # If set to 0, the revision has no maximum scale.
        max-scale: "0"

        # scale-down-delay is the amount of time that must pass at reduced
        # concurrency before a scale down decision is applied. This can be useful,
        # for example, to maintain replica count and avoid a cold start penalty if
        # more requests come in within the scale down delay period.
        # The default, 0s, imposes no delay at all.
        scale-down-delay: "0s"

        # max-scale-limit sets the maximum permitted value for the max scale of a revision.
        # When this is set to a positive value, a revision with a maxScale above that value
        # (including a maxScale of "0" = unlimited) is disallowed.
        # A value of zero (the default) allows any limit, including unlimited.
        max-scale-limit: "0"
    kind: ConfigMap
    metadata:
      annotations:
        knative.dev/example-checksum: 604cb513
      labels:
        serving.knative.dev/release: v0.22.0
      name: config-autoscaler
      namespace: knative-serving
  - apiVersion: v1
    data:
      _example: |
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # This block is not actually functional configuration,
        # but serves to illustrate the available configuration
        # options and document them in a way that is accessible
        # to users that `kubectl edit` this config map.
        #
        # These sample configuration options may be copied out of
        # this example block and unindented to be in the data block
        # to actually change the configuration.

        # revision-timeout-seconds contains the default number of
        # seconds to use for the revision's per-request timeout, if
        # none is specified.
        revision-timeout-seconds: "300"  # 5 minutes

        # max-revision-timeout-seconds contains the maximum number of
        # seconds that can be used for revision-timeout-seconds.
        # This value must be greater than or equal to revision-timeout-seconds.
        # If omitted, the system default is used (600 seconds).
        #
        # If this value is increased, the activator's terminationGraceTimeSeconds
        # should also be increased to prevent in-flight requests being disrupted.
        max-revision-timeout-seconds: "600"  # 10 minutes

        # revision-cpu-request contains the cpu allocation to assign
        # to revisions by default.  If omitted, no value is specified
        # and the system default is used.
        # Below is an example of setting revision-cpu-request.
        # By default, it is not set by Knative.
        revision-cpu-request: "400m"  # 0.4 of a CPU (aka 400 milli-CPU)

        # revision-memory-request contains the memory allocation to assign
        # to revisions by default.  If omitted, no value is specified
        # and the system default is used.
        # Below is an example of setting revision-memory-request.
        # By default, it is not set by Knative.
        revision-memory-request: "100M"  # 100 megabytes of memory

        # revision-ephemeral-storage-request contains the ephemeral storage
        # allocation to assign to revisions by default.  If omitted, no value is
        # specified and the system default is used.
        revision-ephemeral-storage-request: "500M"  # 500 megabytes of storage

        # revision-cpu-limit contains the cpu allocation to limit
        # revisions to by default.  If omitted, no value is specified
        # and the system default is used.
        # Below is an example of setting revision-cpu-limit.
        # By default, it is not set by Knative.
        revision-cpu-limit: "1000m"  # 1 CPU (aka 1000 milli-CPU)

        # revision-memory-limit contains the memory allocation to limit
        # revisions to by default.  If omitted, no value is specified
        # and the system default is used.
        # Below is an example of setting revision-memory-limit.
        # By default, it is not set by Knative.
        revision-memory-limit: "200M"  # 200 megabytes of memory

        # revision-ephemeral-storage-limit contains the ephemeral storage
        # allocation to limit revisions to by default.  If omitted, no value is
        # specified and the system default is used.
        revision-ephemeral-storage-limit: "750M"  # 750 megabytes of storage

        # container-name-template contains a template for the default
        # container name, if none is specified.  This field supports
        # Go templating and is supplied with the ObjectMeta of the
        # enclosing Service or Configuration, so values such as
        # {{.Name}} are also valid.
        container-name-template: "user-container"

        # container-concurrency specifies the maximum number
        # of requests the Container can handle at once, and requests
        # above this threshold are queued.  Setting a value of zero
        # disables this throttling and lets through as many requests as
        # the pod receives.
        container-concurrency: "0"

        # The container concurrency max limit is an operator setting ensuring that
        # the individual revisions cannot have arbitrary large concurrency
        # values, or autoscaling targets. `container-concurrency` default setting
        # must be at or below this value.
        #
        # Must be greater than 1.
        #
        # Note: even with this set, a user can choose a containerConcurrency
        # of 0 (i.e. unbounded) unless allow-container-concurrency-zero is
        # set to "false".
        container-concurrency-max-limit: "1000"

        # allow-container-concurrency-zero controls whether users can
        # specify 0 (i.e. unbounded) for containerConcurrency.
        allow-container-concurrency-zero: "true"

        # enable-service-links specifies the default value used for the
        # enableServiceLinks field of the PodSpec, when it is omitted by the user.
        # See: https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#accessing-the-service
        #
        # This is a tri-state flag with possible values of (true|false|default).
        #
        # In environments with large number of services it is suggested
        # to set this value to `false`.
        # See https://github.com/knative/serving/issues/8498.
        enable-service-links: "false"
    kind: ConfigMap
    metadata:
      annotations:
        knative.dev/example-checksum: cdabec96
      labels:
        serving.knative.dev/release: v0.22.0
      name: config-defaults
      namespace: knative-serving
  - apiVersion: v1
    data:
      _example: |
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # This block is not actually functional configuration,
        # but serves to illustrate the available configuration
        # options and document them in a way that is accessible
        # to users that `kubectl edit` this config map.
        #
        # These sample configuration options may be copied out of
        # this example block and unindented to be in the data block
        # to actually change the configuration.

        # List of repositories for which tag to digest resolving should be skipped
        registriesSkippingTagResolving: "kind.local,ko.local,dev.local"

        # digestResolutionTimeout is the maximum time allowed for an image's
        # digests to be resolved.
        digestResolutionTimeout: "10s"

        # ProgressDeadline is the duration we wait for the deployment to
        # be ready before considering it failed.
        progressDeadline: "600s"

        # queueSidecarCPURequest is the requests.cpu to set for the queue proxy sidecar container.
        # If omitted, a default value (currently "25m"), is used.
        queueSidecarCPURequest: "25m"

        # queueSidecarCPULimit is the limits.cpu to set for the queue proxy sidecar container.
        # If omitted, no value is specified and the system default is used.
        queueSidecarCPULimit: "1000m"

        # queueSidecarMemoryRequest is the requests.memory to set for the queue proxy container.
        # If omitted, no value is specified and the system default is used.
        queueSidecarMemoryRequest: "400Mi"

        # queueSidecarMemoryLimit is the limits.memory to set for the queue proxy container.
        # If omitted, no value is specified and the system default is used.
        queueSidecarMemoryLimit: "800Mi"

        # queueSidecarEphemeralStorageRequest is the requests.ephemeral-storage to
        # set for the queue proxy sidecar container.
        # If omitted, no value is specified and the system default is used.
        queueSidecarEphemeralStorageRequest: "512Mi"

        # queueSidecarEphemeralStorageLimit is the limits.ephemeral-storage to set
        # for the queue proxy sidecar container.
        # If omitted, no value is specified and the system default is used.
        queueSidecarEphemeralStorageLimit: "1024Mi"
      queueSidecarImage: gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:6cd0c234bfbf88ac75df5243c2f9213dcc9def610414c506d418f9388187b771
    kind: ConfigMap
    metadata:
      annotations:
        knative.dev/example-checksum: fa67b403
      labels:
        serving.knative.dev/release: v0.22.0
      name: config-deployment
      namespace: knative-serving
  - apiVersion: v1
    data:
      _example: |
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # This block is not actually functional configuration,
        # but serves to illustrate the available configuration
        # options and document them in a way that is accessible
        # to users that `kubectl edit` this config map.
        #
        # These sample configuration options may be copied out of
        # this example block and unindented to be in the data block
        # to actually change the configuration.

        # Default value for domain.
        # Although it will match all routes, it is the least-specific rule so it
        # will only be used if no other domain matches.
        example.com: |

        # These are example settings of domain.
        # example.org will be used for routes having app=nonprofit.
        example.org: |
          selector:
            app: nonprofit

        # Routes having the cluster domain suffix (by default 'svc.cluster.local')
        # will not be exposed through Ingress. You can define your own label
        # selector to assign that domain suffix to your Route here, or you can set
        # the label
        #    "serving.knative.dev/visibility=cluster-local"
        # to achieve the same effect.  This shows how to make routes having
        # the label app=secret only exposed to the local cluster.
        svc.cluster.local: |
          selector:
            app: secret
    kind: ConfigMap
    metadata:
      annotations:
        knative.dev/example-checksum: 74c3fc6a
      labels:
        serving.knative.dev/release: v0.22.0
      name: config-domain
      namespace: knative-serving
  - apiVersion: v1
    data:
      _example: |-
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # This block is not actually functional configuration,
        # but serves to illustrate the available configuration
        # options and document them in a way that is accessible
        # to users that `kubectl edit` this config map.
        #
        # These sample configuration options may be copied out of
        # this example block and unindented to be in the data block
        # to actually change the configuration.

        # Indicates whether multi container support is enabled
        #
        # WARNING: Cannot safely be disabled once enabled.
        # See: https://knative.dev/docs/serving/feature-flags/#multi-containers
        multi-container: "enabled"

        # Indicates whether Kubernetes affinity support is enabled
        #
        # WARNING: Cannot safely be disabled once enabled.
        # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-node-affinity
        kubernetes.podspec-affinity: "disabled"

        # Indicates whether Kubernetes hostAliases support is enabled
        #
        # WARNING: Cannot safely be disabled once enabled.
        # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-host-aliases
        kubernetes.podspec-hostaliases: "disabled"

        # Indicates whether Kubernetes nodeSelector support is enabled
        #
        # WARNING: Cannot safely be disabled once enabled.
        # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-node-selector
        kubernetes.podspec-nodeselector: "disabled"

        # Indicates whether Kubernetes tolerations support is enabled
        #
        # WARNING: Cannot safely be disabled once enabled
        # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-toleration
        kubernetes.podspec-tolerations: "disabled"

        # Indicates whether Kubernetes FieldRef support is enabled
        #
        # WARNING: Cannot safely be disabled once enabled.
        # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-fieldref
        kubernetes.podspec-fieldref: "disabled"

        # Indicates whether Kubernetes RuntimeClassName support is enabled
        #
        # WARNING: Cannot safely be disabled once enabled.
        # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-runtime-class
        kubernetes.podspec-runtimeclassname: "disabled"

        # This feature allows end-users to set a subset of fields on the Pod's SecurityContext
        # in addition to expanding the allowable fields within a Container's SecurityContext.
        #
        # When set to "enabled" or "allowed" it allows the following
        # PodSecurityContext properties:
        # - FSGroup
        # - RunAsGroup
        # - RunAsNonRoot
        # - SupplementalGroups
        # - RunAsUser
        #
        # When set to "enabled" or "allowed" it allows the following
        # Container SecurityContext properties:
        # - RunAsNonRoot
        # - RunAsGroup
        # - RunAsUser (already allowed without this flag)
        #
        # This feature flag should be used with caution as the PodSecurityContext
        # properties may have a side-effect on non-user sidecar containers that come
        # from Knative or your service mesh
        #
        # WARNING: Cannot safely be disabled once enabled.
        # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-security-context
        kubernetes.podspec-securitycontext: "disabled"

        # This feature validates PodSpecs from the validating webhook
        # against the K8s API Server.
        #
        # When "enabled", the server will always run the extra validation.
        # When "allowed", the server will not run the dry-run validation by default.
        #   However, clients may enable the behavior on an individual Service by
        #   attaching the following metadata annotation: "features.knative.dev/podspec-dryrun":"enabled".
        # See: https://knative.dev/docs/serving/feature-flags/#kubernetes-dry-run
        kubernetes.podspec-dryrun: "allowed"

        # Indicates whether new responsive garbage collection is enabled. This
        # feature labels revisions in real-time as they become referenced and
        # dereferenced by Routes. This allows us to reap revisions shortly after
        # they are no longer active.
        # See: https://knative.dev/docs/serving/feature-flags/#responsive-revision-garbage-collector
        responsive-revision-gc: "enabled"

        # Controls whether tag header based routing feature are enabled or not.
        # 1. Enabled: enabling tag header based routing
        # 2. Disabled: disabling tag header based routing
        # See: https://knative.dev/docs/serving/feature-flags/#tag-header-based-routing
        tag-header-based-routing: "disabled"

        # Controls whether http2 auto-detection should be enabled or not.
        # 1. Enabled: http2 connection will be attempted via upgrade.
        # 2. Disabled: http2 connection will only be attempted when port name is set to "h2c".
        autodetect-http2: "disabled"
    kind: ConfigMap
    metadata:
      annotations:
        knative.dev/example-checksum: 2cf73688
      labels:
        serving.knative.dev/release: v0.22.0
      name: config-features
      namespace: knative-serving
  - apiVersion: v1
    data:
      _example: |
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # This block is not actually functional configuration,
        # but serves to illustrate the available configuration
        # options and document them in a way that is accessible
        # to users that `kubectl edit` this config map.
        #
        # These sample configuration options may be copied out of
        # this example block and unindented to be in the data block
        # to actually change the configuration.


        # ---------------------------------------
        # Garbage Collector Settings
        # ---------------------------------------
        #
        # Active
        #   * Revisions which are referenced by a Route are considered active.
        #   * Individual revisions may be marked with the annotation
        #      "knative.dev/no-gc":"true" to be permanently considered active.
        #   * Active revisions are not considered for GC.
        # Retention
        #   * Revisions are retained if they are any of the following:
        #       1. Active
        #       2. Were created within "retain-since-create-time"
        #       3. Were last referenced by a route within
        #           "retain-since-last-active-time"
        #       4. There are fewer than "min-non-active-revisions"
        #     If none of these conditions are met, or if the count of revisions exceed
        #      "max-non-active-revisions", they will be deleted by GC.
        #     The special value "disabled" may be used to turn off these limits.
        #
        # Example config to immediately collect any inactive revision:
        #    min-non-active-revisions: "0"
        #    retain-since-create-time: "disabled"
        #    retain-since-last-active-time: "disabled"
        #
        # Example config to always keep around the last ten non-active revisions:
        #     retain-since-create-time: "disabled"
        #     retain-since-last-active-time: "disabled"
        #     max-non-active-revisions: "10"
        #
        # Example config to disable all GC:
        #     retain-since-create-time: "disabled"
        #     retain-since-last-active-time: "disabled"
        #     max-non-active-revisions: "disabled"
        #
        # Example config to keep recently deployed or active revisions,
        # always maintain the last two in case of rollback, and prevent
        # burst activity from exploding the count of old revisions:
        #      retain-since-create-time: "48h"
        #      retain-since-last-active-time: "15h"
        #      min-non-active-revisions: "2"
        #      max-non-active-revisions: "1000"

        # Duration since creation before considering a revision for GC or "disabled".
        retain-since-create-time: "48h"

        # Duration since active before considering a revision for GC or "disabled".
        retain-since-last-active-time: "15h"

        # Minimum number of non-active revisions to retain.
        min-non-active-revisions: "20"

        # Maximum number of non-active revisions to retain
        # or "disabled" to disable any maximum limit.
        max-non-active-revisions: "1000"
    kind: ConfigMap
    metadata:
      annotations:
        knative.dev/example-checksum: e6149382
      labels:
        serving.knative.dev/release: v0.22.0
      name: config-gc
      namespace: knative-serving
  - apiVersion: v1
    data:
      _example: |
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # This block is not actually functional configuration,
        # but serves to illustrate the available configuration
        # options and document them in a way that is accessible
        # to users that `kubectl edit` this config map.
        #
        # These sample configuration options may be copied out of
        # this example block and unindented to be in the data block
        # to actually change the configuration.

        # leaseDuration is how long non-leaders will wait to try to acquire the
        # lock; 15 seconds is the value used by core kubernetes controllers.
        leaseDuration: "15s"

        # renewDeadline is how long a leader will try to renew the lease before
        # giving up; 10 seconds is the value used by core kubernetes controllers.
        renewDeadline: "10s"

        # retryPeriod is how long the leader election client waits between tries of
        # actions; 2 seconds is the value used by core kubernetes controllers.
        retryPeriod: "2s"

        # buckets is the number of buckets used to partition key space of each
        # Reconciler. If this number is M and the replica number of the controller
        # is N, the N replicas will compete for the M buckets. The owner of a
        # bucket will take care of the reconciling for the keys partitioned into
        # that bucket.
        buckets: "1"
    kind: ConfigMap
    metadata:
      annotations:
        knative.dev/example-checksum: 96896b00
      labels:
        serving.knative.dev/release: v0.22.0
      name: config-leader-election
      namespace: knative-serving
  - apiVersion: v1
    data:
      _example: |
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # This block is not actually functional configuration,
        # but serves to illustrate the available configuration
        # options and document them in a way that is accessible
        # to users that `kubectl edit` this config map.
        #
        # These sample configuration options may be copied out of
        # this example block and unindented to be in the data block
        # to actually change the configuration.

        # Common configuration for all Knative codebase
        zap-logger-config: |
          {
            "level": "info",
            "development": false,
            "outputPaths": ["stdout"],
            "errorOutputPaths": ["stderr"],
            "encoding": "json",
            "encoderConfig": {
              "timeKey": "timestamp",
              "levelKey": "severity",
              "nameKey": "logger",
              "callerKey": "caller",
              "messageKey": "message",
              "stacktraceKey": "stacktrace",
              "lineEnding": "",
              "levelEncoder": "",
              "timeEncoder": "iso8601",
              "durationEncoder": "",
              "callerEncoder": ""
            }
          }

        # Log level overrides
        # For all components except the queue proxy,
        # changes are picked up immediately.
        # For queue proxy, changes require recreation of the pods.
        loglevel.controller: "info"
        loglevel.autoscaler: "info"
        loglevel.queueproxy: "info"
        loglevel.webhook: "info"
        loglevel.activator: "info"
        loglevel.hpaautoscaler: "info"
        loglevel.certcontroller: "info"
        loglevel.istiocontroller: "info"
        loglevel.nscontroller: "info"
    kind: ConfigMap
    metadata:
      annotations:
        knative.dev/example-checksum: d9570453
      labels:
        serving.knative.dev/release: v0.22.0
      name: config-logging
      namespace: knative-serving
  - apiVersion: v1
    data:
      _example: |
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # This block is not actually functional configuration,
        # but serves to illustrate the available configuration
        # options and document them in a way that is accessible
        # to users that `kubectl edit` this config map.
        #
        # These sample configuration options may be copied out of
        # this example block and unindented to be in the data block
        # to actually change the configuration.

        # ingress.class specifies the default ingress class
        # to use when not dictated by Route annotation.
        #
        # If not specified, will use the Istio ingress.
        #
        # Note that changing the Ingress class of an existing Route
        # will result in undefined behavior.  Therefore it is best to only
        # update this value during the setup of Knative, to avoid getting
        # undefined behavior.
        ingress.class: "istio.ingress.networking.knative.dev"

        # certificate.class specifies the default Certificate class
        # to use when not dictated by Route annotation.
        #
        # If not specified, will use the Cert-Manager Certificate.
        #
        # Note that changing the Certificate class of an existing Route
        # will result in undefined behavior.  Therefore it is best to only
        # update this value during the setup of Knative, to avoid getting
        # undefined behavior.
        certificate.class: "cert-manager.certificate.networking.knative.dev"

        # domainTemplate specifies the golang text template string to use
        # when constructing the Knative service's DNS name. The default
        # value is "{{.Name}}.{{.Namespace}}.{{.Domain}}".
        #
        # Valid variables defined in the template include Name, Namespace, Domain,
        # Labels, and Annotations. Name will be the result of the tagTemplate
        # below, if a tag is specified for the route.
        #
        # Changing this value might be necessary when the extra levels in
        # the domain name generated is problematic for wildcard certificates
        # that only support a single level of domain name added to the
        # certificate's domain. In those cases you might consider using a value
        # of "{{.Name}}-{{.Namespace}}.{{.Domain}}", or removing the Namespace
        # entirely from the template. When choosing a new value be thoughtful
        # of the potential for conflicts - for example, when users choose to use
        # characters such as `-` in their service, or namespace, names.
        # {{.Annotations}} or {{.Labels}} can be used for any customization in the
        # go template if needed.
        # We strongly recommend keeping namespace part of the template to avoid
        # domain name clashes:
        # eg. '{{.Name}}-{{.Namespace}}.{{ index .Annotations "sub"}}.{{.Domain}}'
        # and you have an annotation {"sub":"foo"}, then the generated template
        # would be {Name}-{Namespace}.foo.{Domain}
        domainTemplate: "{{.Name}}.{{.Namespace}}.{{.Domain}}"

        # tagTemplate specifies the golang text template string to use
        # when constructing the DNS name for "tags" within the traffic blocks
        # of Routes and Configuration.  This is used in conjunction with the
        # domainTemplate above to determine the full URL for the tag.
        tagTemplate: "{{.Tag}}-{{.Name}}"

        # Controls whether TLS certificates are automatically provisioned and
        # installed in the Knative ingress to terminate external TLS connection.
        # 1. Enabled: enabling auto-TLS feature.
        # 2. Disabled: disabling auto-TLS feature.
        autoTLS: "Disabled"

        # Controls the behavior of the HTTP endpoint for the Knative ingress.
        # It requires autoTLS to be enabled.
        # 1. Enabled: The Knative ingress will be able to serve HTTP connection.
        # 2. Disabled: The Knative ingress will reject HTTP traffic.
        # 3. Redirected: The Knative ingress will send a 302 redirect for all
        # http connections, asking the clients to use HTTPS.
        httpProtocol: "Enabled"

        # rolloutDuration contains the minimal duration in seconds over which the
        # Configuration traffic targets are rolled out to the newest revision.
        rolloutDuration: "0"

        # autocreateClusterDomainClaims controls whether ClusterDomainClaims should
        # be automatically created (and deleted) as needed when DomainMappings are
        # reconciled.
        #
        # If this is "false", the cluster administrator is responsible for creating
        # ClusterDomainClaims and delegating them to namespaces via their
        # spec.Namespace field. This is useful for multitenant environments
        # which need to control which namespace can use a particular domain name in
        # a domain mapping.
        autocreateClusterDomainClaims: "true"

        # If true, networking plugins can add additional information to deployed
        # applications to make their pods directly accessible via their IPs even if mesh is
        # enabled and thus direct-addressability is usually not possible.
        # Consumers like Knative Serving can use this setting to adjust their behavior
        # accordingly, i.e. to drop fallback solutions for non-pod-addressable systems.
        #
        # NOTE: This flag is in an alpha state and is mostly here to enable internal testing
        #       for now. Use with caution.
        enable-mesh-pod-addressability: "false"
      ingress.class: contour.ingress.networking.knative.dev
    kind: ConfigMap
    metadata:
      annotations:
        knative.dev/example-checksum: 15954d34
      labels:
        serving.knative.dev/release: v0.22.0
      name: config-network
      namespace: knative-serving
  - apiVersion: v1
    data:
      _example: |
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # This block is not actually functional configuration,
        # but serves to illustrate the available configuration
        # options and document them in a way that is accessible
        # to users that `kubectl edit` this config map.
        #
        # These sample configuration options may be copied out of
        # this example block and unindented to be in the data block
        # to actually change the configuration.

        # logging.enable-var-log-collection defaults to false.
        # The fluentd daemon set will be set up to collect /var/log if
        # this flag is true.
        logging.enable-var-log-collection: "false"

        # logging.revision-url-template provides a template to use for producing the
        # logging URL that is injected into the status of each Revision.
        logging.revision-url-template: "http://logging.example.com/?revisionUID=${REVISION_UID}"

        # If non-empty, this enables queue proxy writing user request logs to stdout, excluding probe
        # requests.
        # NB: after 0.18 release logging.enable-request-log must be explicitly set to true
        # in order for request logging to be enabled.
        #
        # The value determines the shape of the request logs and it must be a valid go text/template.
        # It is important to keep this as a single line. Multiple lines are parsed as separate entities
        # by most collection agents and will split the request logs into multiple records.
        #
        # The following fields and functions are available to the template:
        #
        # Request: An http.Request (see https://golang.org/pkg/net/http/#Request)
        # representing an HTTP request received by the server.
        #
        # Response:
        # struct {
        #   Code    int       // HTTP status code (see https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)
        #   Size    int       // An int representing the size of the response.
        #   Latency float64   // A float64 representing the latency of the response in seconds.
        # }
        #
        # Revision:
        # struct {
        #   Name          string  // Knative revision name
        #   Namespace     string  // Knative revision namespace
        #   Service       string  // Knative service name
        #   Configuration string  // Knative configuration name
        #   PodName       string  // Name of the pod hosting the revision
        #   PodIP         string  // IP of the pod hosting the revision
        # }
        #
        logging.request-log-template: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl": "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}", "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent": "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}", "serverIp": "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}", "latency": "{{.Response.Latency}}s", "protocol": "{{.Request.Proto}}"}, "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'

        # If true, the request logging will be enabled.
        # NB: up to and including Knative version 0.18 if logging.request-log-template is non-empty, this value
        # will be ignored.
        logging.enable-request-log: "false"

        # If true, this enables queue proxy writing request logs for probe requests to stdout.
        # It uses the same template for user requests, i.e. logging.request-log-template.
        logging.enable-probe-request-log: "false"

        # metrics.backend-destination field specifies the system metrics destination.
        # It supports either prometheus (the default) or stackdriver.
        # Note: Using stackdriver will incur additional charges
        metrics.backend-destination: prometheus

        # metrics.request-metrics-backend-destination specifies the request metrics
        # destination. It enables queue proxy to send request metrics.
        # Currently supported values: prometheus (the default), stackdriver.
        metrics.request-metrics-backend-destination: prometheus

        # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
        # field is optional. When running on GCE, application default credentials will be
        # used if this field is not provided.
        metrics.stackdriver-project-id: "<your stackdriver project id>"

        # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
        # Stackdriver using "global" resource type and custom metric type if the
        # metrics are not supported by "knative_revision" resource type. Setting this
        # flag to "true" could cause extra Stackdriver charge.
        # If metrics.backend-destination is not Stackdriver, this is ignored.
        metrics.allow-stackdriver-custom-metrics: "false"

        # profiling.enable indicates whether it is allowed to retrieve runtime profiling data from
        # the pods via an HTTP server in the format expected by the pprof visualization tool. When
        # enabled, the Knative Serving pods expose the profiling data on an alternate HTTP port 8008.
        # The HTTP context root for profiling is then /debug/pprof/.
        profiling.enable: "false"
    kind: ConfigMap
    metadata:
      annotations:
        knative.dev/example-checksum: 97c1d10b
      labels:
        serving.knative.dev/release: v0.22.0
      name: config-observability
      namespace: knative-serving
  - apiVersion: v1
    data:
      _example: |
        ################################
        #                              #
        #    EXAMPLE CONFIGURATION     #
        #                              #
        ################################

        # This block is not actually functional configuration,
        # but serves to illustrate the available configuration
        # options and document them in a way that is accessible
        # to users that `kubectl edit` this config map.
        #
        # These sample configuration options may be copied out of
        # this example block and unindented to be in the data block
        # to actually change the configuration.
        #
        # This may be "zipkin" or "stackdriver", the default is "none"
        backend: "none"

        # URL to zipkin collector where traces are sent.
        # This must be specified when backend is "zipkin"
        zipkin-endpoint: "http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans"

        # The GCP project into which stackdriver metrics will be written
        # when backend is "stackdriver".  If unspecified, the project-id
        # is read from GCP metadata when running on GCP.
        stackdriver-project-id: "my-project"

        # Enable zipkin debug mode. This allows all spans to be sent to the server
        # bypassing sampling.
        debug: "false"

        # Percentage (0-1) of requests to trace
        sample-rate: "0.1"
    kind: ConfigMap
    metadata:
      annotations:
        knative.dev/example-checksum: 4002b4c2
      labels:
        serving.knative.dev/release: v0.22.0
      name: config-tracing
      namespace: knative-serving
  - apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: activator
      namespace: knative-serving
    spec:
      maxReplicas: 20
      metrics:
      - resource:
          name: cpu
          target:
            averageUtilization: 100
            type: Utilization
        type: Resource
      minReplicas: 1
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: activator
  - apiVersion: policy/v1beta1
    kind: PodDisruptionBudget
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: activator-pdb
      namespace: knative-serving
    spec:
      minAvailable: 80%
      selector:
        matchLabels:
          app: activator
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: activator
      namespace: knative-serving
    spec:
      selector:
        matchLabels:
          app: activator
          role: activator
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
          labels:
            app: activator
            role: activator
            serving.knative.dev/release: v0.22.0
        spec:
          containers:
          - env:
            - name: GOGC
              value: "500"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
            image: gcr.io/knative-releases/knative.dev/serving/cmd/activator@sha256:91e67a579378fa39d7c941e379db183464c3add3d53b4617f65d9cbc2f0c770a
            livenessProbe:
              failureThreshold: 12
              httpGet:
                httpHeaders:
                - name: k-kubelet-probe
                  value: activator
                port: 8012
              initialDelaySeconds: 15
            name: activator
            ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8012
              name: http1
            - containerPort: 8013
              name: h2c
            readinessProbe:
              failureThreshold: 12
              httpGet:
                httpHeaders:
                - name: k-kubelet-probe
                  value: activator
                port: 8012
            resources:
              limits:
                cpu: 1000m
                memory: 600Mi
              requests:
                cpu: 300m
                memory: 60Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
              readOnlyRootFilesystem: true
              runAsNonRoot: true
          serviceAccountName: controller
          terminationGracePeriodSeconds: 600
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: activator
        serving.knative.dev/release: v0.22.0
      name: activator-service
      namespace: knative-serving
    spec:
      ports:
      - name: http-metrics
        port: 9090
        targetPort: 9090
      - name: http-profiling
        port: 8008
        targetPort: 8008
      - name: http
        port: 80
        targetPort: 8012
      - name: http2
        port: 81
        targetPort: 8013
      selector:
        app: activator
      type: ClusterIP
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: autoscaler
      namespace: knative-serving
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: autoscaler
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
          labels:
            app: autoscaler
            serving.knative.dev/release: v0.22.0
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app: autoscaler
                  topologyKey: kubernetes.io/hostname
                weight: 100
          containers:
          - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/serving
            image: gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler@sha256:761dc36210e69ebef3a64ce72ad9f54f8172e4aed6b97e8a706e3128956ec54d
            livenessProbe:
              failureThreshold: 6
              httpGet:
                httpHeaders:
                - name: k-kubelet-probe
                  value: autoscaler
                port: 8080
            name: autoscaler
            ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8080
              name: websocket
            readinessProbe:
              httpGet:
                httpHeaders:
                - name: k-kubelet-probe
                  value: autoscaler
                port: 8080
            resources:
              limits:
                cpu: 1000m
                memory: 1000Mi
              requests:
                cpu: 100m
                memory: 100Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
              readOnlyRootFilesystem: true
              runAsNonRoot: true
          serviceAccountName: controller
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: autoscaler
        serving.knative.dev/release: v0.22.0
      name: autoscaler
      namespace: knative-serving
    spec:
      ports:
      - name: http-metrics
        port: 9090
        targetPort: 9090
      - name: http-profiling
        port: 8008
        targetPort: 8008
      - name: http
        port: 8080
        targetPort: 8080
      selector:
        app: autoscaler
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: controller
      namespace: knative-serving
    spec:
      selector:
        matchLabels:
          app: controller
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          labels:
            app: controller
            serving.knative.dev/release: v0.22.0
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app: controller
                  topologyKey: kubernetes.io/hostname
                weight: 100
          containers:
          - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
            image: gcr.io/knative-releases/knative.dev/serving/cmd/controller@sha256:d772809059033e437d6e98248a334ded37b6f430c2ca23377875cc2459a3b73e
            name: controller
            ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            resources:
              limits:
                cpu: 1000m
                memory: 1000Mi
              requests:
                cpu: 100m
                memory: 100Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
              readOnlyRootFilesystem: true
              runAsNonRoot: true
          serviceAccountName: controller
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: controller
        serving.knative.dev/release: v0.22.0
      name: controller
      namespace: knative-serving
    spec:
      ports:
      - name: http-metrics
        port: 9090
        targetPort: 9090
      - name: http-profiling
        port: 8008
        targetPort: 8008
      selector:
        app: controller
  - apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: webhook
      namespace: knative-serving
    spec:
      maxReplicas: 5
      metrics:
      - resource:
          name: cpu
          target:
            averageUtilization: 100
            type: Utilization
        type: Resource
      minReplicas: 1
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: webhook
  - apiVersion: policy/v1beta1
    kind: PodDisruptionBudget
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: webhook-pdb
      namespace: knative-serving
    spec:
      minAvailable: 80%
      selector:
        matchLabels:
          app: webhook
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: webhook
      namespace: knative-serving
    spec:
      selector:
        matchLabels:
          app: webhook
          role: webhook
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
          labels:
            app: webhook
            role: webhook
            serving.knative.dev/release: v0.22.0
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app: webhook
                  topologyKey: kubernetes.io/hostname
                weight: 100
          containers:
          - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: WEBHOOK_NAME
              value: webhook
            - name: WEBHOOK_PORT
              value: "8443"
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
            image: gcr.io/knative-releases/knative.dev/serving/cmd/webhook@sha256:268bd1383b56ba7b9acf391c681f7a63780c22dcd4555c2f4a7b61ec6da81cf4
            livenessProbe:
              failureThreshold: 6
              httpGet:
                httpHeaders:
                - name: k-kubelet-probe
                  value: webhook
                port: 8443
                scheme: HTTPS
              initialDelaySeconds: 20
              periodSeconds: 1
            name: webhook
            ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8443
              name: https-webhook
            readinessProbe:
              httpGet:
                httpHeaders:
                - name: k-kubelet-probe
                  value: webhook
                port: 8443
                scheme: HTTPS
              periodSeconds: 1
            resources:
              limits:
                cpu: 500m
                memory: 500Mi
              requests:
                cpu: 100m
                memory: 100Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - all
              readOnlyRootFilesystem: true
              runAsNonRoot: true
          serviceAccountName: controller
          terminationGracePeriodSeconds: 300
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        role: webhook
        serving.knative.dev/release: v0.22.0
      name: webhook
      namespace: knative-serving
    spec:
      ports:
      - name: http-metrics
        port: 9090
        targetPort: 9090
      - name: http-profiling
        port: 8008
        targetPort: 8008
      - name: https-webhook
        port: 443
        targetPort: 8443
      selector:
        role: webhook
  - apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingWebhookConfiguration
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: config.webhook.serving.knative.dev
    webhooks:
    - admissionReviewVersions:
      - v1
      - v1beta1
      clientConfig:
        service:
          name: webhook
          namespace: knative-serving
      failurePolicy: Fail
      name: config.webhook.serving.knative.dev
      namespaceSelector:
        matchExpressions:
        - key: serving.knative.dev/release
          operator: Exists
      sideEffects: None
      timeoutSeconds: 10
  - apiVersion: admissionregistration.k8s.io/v1
    kind: MutatingWebhookConfiguration
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: webhook.serving.knative.dev
    webhooks:
    - admissionReviewVersions:
      - v1
      - v1beta1
      clientConfig:
        service:
          name: webhook
          namespace: knative-serving
      failurePolicy: Fail
      name: webhook.serving.knative.dev
      sideEffects: None
      timeoutSeconds: 10
  - apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingWebhookConfiguration
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: validation.webhook.serving.knative.dev
    webhooks:
    - admissionReviewVersions:
      - v1
      - v1beta1
      clientConfig:
        service:
          name: webhook
          namespace: knative-serving
      failurePolicy: Fail
      name: validation.webhook.serving.knative.dev
      sideEffects: None
      timeoutSeconds: 10
  - apiVersion: v1
    kind: Secret
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: webhook-certs
      namespace: knative-serving
  - apiVersion: caching.internal.knative.dev/v1alpha1
    kind: Image
    metadata:
      labels:
        serving.knative.dev/release: v0.22.0
      name: queue-proxy
      namespace: knative-serving
    spec:
      image: gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:6cd0c234bfbf88ac75df5243c2f9213dcc9def610414c506d418f9388187b771
  - apiVersion: kpack.io/v1alpha1
    kind: ClusterStack
    metadata:
      name: base
    spec:
      buildImage:
        image: paketobuildpacks/build:base-cnb
      id: io.buildpacks.stacks.bionic
      runImage:
        image: paketobuildpacks/run:base-cnb
  - apiVersion: kpack.io/v1alpha1
    kind: ClusterStore
    metadata:
      name: default
    spec:
      sources:
      - image: gcr.io/paketo-buildpacks/java
      - image: gcr.io/paketo-buildpacks/nodejs
      - image: gcr.io/paketo-buildpacks/go
status: {}

