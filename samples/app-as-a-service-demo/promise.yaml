apiVersion: platform.kratix.io/v1alpha1
kind: Promise
metadata:
  creationTimestamp: null
  name: app-as-a-service
  namespace: default
spec:
  clusterSelector:
    environment: platform
  workerClusterResources:
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: knative
      namespace: default
    spec:
      clusterSelector:
        environment: dev
      workerClusterResources:
      - apiVersion: v1
        kind: Namespace
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: knative-serving
      - aggregationRule:
          clusterRoleSelectors:
          - matchLabels:
              duck.knative.dev/addressable: "true"
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: knative-serving-aggregated-addressable-resolver
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            duck.knative.dev/addressable: "true"
          name: knative-serving-addressable-resolver
        rules:
        - apiGroups:
          - serving.knative.dev
          resources:
          - routes
          - routes/status
          - services
          - services/status
          verbs:
          - get
          - list
          - watch
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            rbac.authorization.k8s.io/aggregate-to-admin: "true"
          name: knative-serving-namespaced-admin
        rules:
        - apiGroups:
          - serving.knative.dev
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - networking.internal.knative.dev
          - autoscaling.internal.knative.dev
          - caching.internal.knative.dev
          resources:
          - '*'
          verbs:
          - get
          - list
          - watch
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            rbac.authorization.k8s.io/aggregate-to-edit: "true"
          name: knative-serving-namespaced-edit
        rules:
        - apiGroups:
          - serving.knative.dev
          resources:
          - '*'
          verbs:
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - networking.internal.knative.dev
          - autoscaling.internal.knative.dev
          - caching.internal.knative.dev
          resources:
          - '*'
          verbs:
          - get
          - list
          - watch
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            rbac.authorization.k8s.io/aggregate-to-view: "true"
          name: knative-serving-namespaced-view
        rules:
        - apiGroups:
          - serving.knative.dev
          - networking.internal.knative.dev
          - autoscaling.internal.knative.dev
          - caching.internal.knative.dev
          resources:
          - '*'
          verbs:
          - get
          - list
          - watch
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            serving.knative.dev/controller: "true"
          name: knative-serving-core
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - namespaces
          - secrets
          - configmaps
          - endpoints
          - services
          - events
          - serviceaccounts
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - ""
          resources:
          - endpoints/restricted
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - namespaces/finalizers
          verbs:
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          - deployments/finalizers
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          - customresourcedefinitions/status
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - serving.knative.dev
          - autoscaling.internal.knative.dev
          - networking.internal.knative.dev
          resources:
          - '*'
          - '*/status'
          - '*/finalizers'
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - deletecollection
          - patch
          - watch
        - apiGroups:
          - caching.internal.knative.dev
          resources:
          - images
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            duck.knative.dev/podspecable: "true"
          name: knative-serving-podspecable-binding
        rules:
        - apiGroups:
          - serving.knative.dev
          resources:
          - configurations
          - services
          verbs:
          - list
          - watch
          - patch
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: controller
          namespace: knative-serving
      - aggregationRule:
          clusterRoleSelectors:
          - matchLabels:
              serving.knative.dev/controller: "true"
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: knative-serving-admin
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: knative-serving-controller-admin
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: knative-serving-admin
        subjects:
        - kind: ServiceAccount
          name: controller
          namespace: knative-serving
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: knative-serving-controller-addressable-resolver
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: knative-serving-aggregated-addressable-resolver
        subjects:
        - kind: ServiceAccount
          name: controller
          namespace: knative-serving
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            knative.dev/crd-install: "true"
          name: images.caching.internal.knative.dev
        spec:
          group: caching.internal.knative.dev
          names:
            categories:
            - knative-internal
            - caching
            kind: Image
            plural: images
            singular: image
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .spec.image
              name: Image
              type: string
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: Image is a Knative abstraction that encapsulates the
                  interface by which Knative components express a desire to have a
                  particular image cached.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Spec holds the desired state of the Image (from the
                      client).
                    properties:
                      image:
                        description: Image is the name of the container image url
                          to cache across the cluster.
                        type: string
                      imagePullSecrets:
                        description: ImagePullSecrets contains the names of the Kubernetes
                          Secrets containing login information used by the Pods which
                          will run this container.
                        items:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      serviceAccountName:
                        description: 'ServiceAccountName is the name of the Kubernetes
                          ServiceAccount as which the Pods will run this container.  This
                          is potentially used to authenticate the image pull if the
                          service account has attached pull secrets.  For more information:
                          https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account'
                        type: string
                    required:
                    - image
                    type: object
                  status:
                    description: Status communicates the observed state of the Image
                      (from the controller).
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/component: networking
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            knative.dev/crd-install: "true"
          name: certificates.networking.internal.knative.dev
        spec:
          group: networking.internal.knative.dev
          names:
            categories:
            - knative-internal
            - networking
            kind: Certificate
            plural: certificates
            shortNames:
            - kcert
            singular: certificate
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.conditions[?(@.type=="Ready")].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=="Ready")].reason
              name: Reason
              type: string
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: Certificate is responsible for provisioning a SSL certificate
                  for the given hosts. It is a Knative abstraction for various SSL
                  certificate provisioning solutions (such as cert-manager or self-signed
                  SSL certificate).
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: 'Spec is the desired state of the Certificate. More
                      info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      dnsNames:
                        description: DNSNames is a list of DNS names the Certificate
                          could support. The wildcard format of DNSNames (e.g. *.default.example.com)
                          is supported.
                        items:
                          type: string
                        type: array
                      secretName:
                        description: SecretName is the name of the secret resource
                          to store the SSL certificate in.
                        type: string
                    required:
                    - dnsNames
                    - secretName
                    type: object
                  status:
                    description: 'Status is the current state of the Certificate.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      http01Challenges:
                        description: HTTP01Challenges is a list of HTTP01 challenges
                          that need to be fulfilled in order to get the TLS certificate..
                        items:
                          description: HTTP01Challenge defines the status of a HTTP01
                            challenge that a certificate needs to fulfill.
                          properties:
                            serviceName:
                              description: ServiceName is the name of the service
                                to serve HTTP01 challenge requests.
                              type: string
                            serviceNamespace:
                              description: ServiceNamespace is the namespace of the
                                service to serve HTTP01 challenge requests.
                              type: string
                            servicePort:
                              anyOf:
                              - type: integer
                              - type: string
                              description: ServicePort is the port of the service
                                to serve HTTP01 challenge requests.
                              x-kubernetes-int-or-string: true
                            url:
                              description: URL is the URL that the HTTP01 challenge
                                is expected to serve on.
                              type: string
                          type: object
                        type: array
                      notAfter:
                        description: The expiration time of the TLS certificate stored
                          in the secret named by this resource in spec.secretName.
                        format: date-time
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            duck.knative.dev/podspecable: "true"
            knative.dev/crd-install: "true"
          name: configurations.serving.knative.dev
        spec:
          group: serving.knative.dev
          names:
            categories:
            - all
            - knative
            - serving
            kind: Configuration
            plural: configurations
            shortNames:
            - config
            - cfg
            singular: configuration
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.latestCreatedRevisionName
              name: LatestCreated
              type: string
            - jsonPath: .status.latestReadyRevisionName
              name: LatestReady
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].reason
              name: Reason
              type: string
            name: v1
            schema:
              openAPIV3Schema:
                description: 'Configuration represents the "floating HEAD" of a linear
                  history of Revisions. Users create new Revisions by updating the
                  Configuration''s spec. The "latest created" revision''s name is
                  available under status, as is the "latest ready" revision''s name.
                  See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#configuration'
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ConfigurationSpec holds the desired state of the
                      Configuration (from the client).
                    properties:
                      template:
                        description: Template holds the latest specification for the
                          Revision to be stamped out.
                        properties:
                          metadata:
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                              finalizers:
                                items:
                                  type: string
                                type: array
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          spec:
                            description: RevisionSpec holds the desired state of the
                              Revision (from the client).
                            properties:
                              affinity:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-affinity
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              automountServiceAccountToken:
                                description: AutomountServiceAccountToken indicates
                                  whether a service account token should be automatically
                                  mounted.
                                type: boolean
                              containerConcurrency:
                                description: ContainerConcurrency specifies the maximum
                                  allowed in-flight (concurrent) requests per container
                                  of the Revision.  Defaults to `0` which means concurrency
                                  to the application is not limited, and the system
                                  decides the target concurrency for the autoscaler.
                                format: int64
                                type: integer
                              containers:
                                description: List of containers belonging to the pod.
                                  Containers cannot currently be added or removed.
                                  There must be at least one container in a Pod. Cannot
                                  be updated.
                                items:
                                  description: A single application container that
                                    you want to run within a pod.
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The
                                        container image''s CMD is used if this is
                                        not provided. Variable references $(VAR_NAME)
                                        are expanded using the container''s environment.
                                        If a variable cannot be resolved, the reference
                                        in the input string will be unchanged. Double
                                        $$ are reduced to a single $, which allows
                                        for escaping the $(VAR_NAME) syntax: i.e.
                                        "$$(VAR_NAME)" will produce the string literal
                                        "$(VAR_NAME)". Escaped references will never
                                        be expanded, regardless of whether the variable
                                        exists or not. Cannot be updated. More info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: 'Entrypoint array. Not executed
                                        within a shell. The container image''s ENTRYPOINT
                                        is used if this is not provided. Variable
                                        references $(VAR_NAME) are expanded using
                                        the container''s environment. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container. Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME)
                                              are expanded using the previously defined
                                              environment variables in the container
                                              and any service environment variables.
                                              If a variable cannot be resolved, the
                                              reference in the input string will be
                                              unchanged. Double $$ are reduced to
                                              a single $, which allows for escaping
                                              the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                              will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded,
                                              regardless of whether the variable exists
                                              or not. Defaults to "".'
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: This is accessible behind
                                                  a feature flag - kubernetes.podspec-fieldref
                                                type: object
                                                x-kubernetes-map-type: atomic
                                                x-kubernetes-preserve-unknown-fields: true
                                              resourceFieldRef:
                                                description: This is accessible behind
                                                  a feature flag - kubernetes.podspec-fieldref
                                                type: object
                                                x-kubernetes-map-type: atomic
                                                x-kubernetes-preserve-unknown-fields: true
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container. The keys defined
                                        within a source must be a C_IDENTIFIER. All
                                        invalid keys will be reported as an event
                                        when the container is starting. When a key
                                        exists in multiple sources, the value associated
                                        with the last source will take precedence.
                                        Values defined by an Env with a duplicate
                                        key will take precedence. Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                    image:
                                      description: 'Container image name. More info:
                                        https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level
                                        config management to default or override container
                                        images in workload controllers like Deployments
                                        and StatefulSets.'
                                      type: string
                                    imagePullPolicy:
                                      description: 'Image pull policy. One of Always,
                                        Never, IfNotPresent. Defaults to Always if
                                        :latest tag is specified, or IfNotPresent
                                        otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                      type: string
                                    livenessProbe:
                                      description: 'Periodic probe of container liveness.
                                        Container will be restarted if the probe fails.
                                        Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          type: object
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: Name of the container specified
                                        as a DNS_LABEL. Each container in a pod must
                                        have a unique name (DNS_LABEL). Cannot be
                                        updated.
                                      type: string
                                    ports:
                                      description: List of ports to expose from the
                                        container. Not specifying a port here DOES
                                        NOT prevent that port from being exposed.
                                        Any port which is listening on the default
                                        "0.0.0.0" address inside a container will
                                        be accessible from the network. Modifying
                                        this array with strategic merge patch may
                                        corrupt the data. For more information See
                                        https://github.com/kubernetes/kubernetes/issues/108255.
                                        Cannot be updated.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: Number of port to expose
                                              on the pod's IP address. This must be
                                              a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          name:
                                            description: If specified, this must be
                                              an IANA_SVC_NAME and unique within the
                                              pod. Each named port in a pod must have
                                              a unique name. Name for the port that
                                              can be referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: Protocol for port. Must be
                                              UDP, TCP, or SCTP. Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: 'Periodic probe of container service
                                        readiness. Container will be removed from
                                        service endpoints if the probe fails. Cannot
                                        be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          type: object
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    resources:
                                      description: 'Compute Resources required by
                                        this container. Cannot be updated. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    securityContext:
                                      description: 'SecurityContext defines the security
                                        options the container should be run with.
                                        If set, the fields of SecurityContext override
                                        the equivalent fields of PodSecurityContext.
                                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: 'AllowPrivilegeEscalation controls
                                            whether a process can gain more privileges
                                            than its parent process. This bool directly
                                            controls if the no_new_privs flag will
                                            be set on the container process. AllowPrivilegeEscalation
                                            is true always when the container is:
                                            1) run as Privileged 2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when
                                            spec.os.name is windows.'
                                          type: boolean
                                        capabilities:
                                          description: The capabilities to add/drop
                                            when running containers. Defaults to the
                                            default set of capabilities granted by
                                            the container runtime. Note that this
                                            field cannot be set when spec.os.name
                                            is windows.
                                          properties:
                                            add:
                                              description: This is accessible behind
                                                a feature flag - kubernetes.containerspec-addcapabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        readOnlyRootFilesystem:
                                          description: Whether this container has
                                            a read-only root filesystem. Default is
                                            false. Note that this field cannot be
                                            set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: The GID to run the entrypoint
                                            of the container process. Uses runtime
                                            default if unset. May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: Indicates that the container
                                            must run as a non-root user. If true,
                                            the Kubelet will validate the image at
                                            runtime to ensure that it does not run
                                            as UID 0 (root) and fail to start the
                                            container if it does. If unset or false,
                                            no such validation will be performed.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: The UID to run the entrypoint
                                            of the container process. Defaults to
                                            user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                      type: object
                                    terminationMessagePath:
                                      description: 'Optional: Path at which the file
                                        to which the container''s termination message
                                        will be written is mounted into the container''s
                                        filesystem. Message written is intended to
                                        be brief final status, such as an assertion
                                        failure message. Will be truncated by the
                                        node if greater than 4096 bytes. The total
                                        message length across all containers will
                                        be limited to 12kb. Defaults to /dev/termination-log.
                                        Cannot be updated.'
                                      type: string
                                    terminationMessagePolicy:
                                      description: Indicate how the termination message
                                        should be populated. File will use the contents
                                        of terminationMessagePath to populate the
                                        container status message on both success and
                                        failure. FallbackToLogsOnError will use the
                                        last chunk of container log output if the
                                        termination message file is empty and the
                                        container exited with an error. The log output
                                        is limited to 2048 bytes or 80 lines, whichever
                                        is smaller. Defaults to File. Cannot be updated.
                                      type: string
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's
                                        filesystem. Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: Path within the container
                                              at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: Mounted read-only if true,
                                              read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: Path within the volume from
                                              which the container's volume should
                                              be mounted. Defaults to "" (volume's
                                              root).
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                        If not specified, the container runtime's
                                        default will be used, which might be configured
                                        in the container image. Cannot be updated.
                                      type: string
                                  type: object
                                type: array
                              dnsConfig:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-dnsconfig
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              dnsPolicy:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-dnspolicy
                                type: string
                              enableServiceLinks:
                                description: 'EnableServiceLinks indicates whether
                                  information about services should be injected into
                                  pod''s environment variables, matching the syntax
                                  of Docker links. Optional: Knative defaults this
                                  to false.'
                                type: boolean
                              hostAliases:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-hostaliases
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-hostaliases
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              idleTimeoutSeconds:
                                description: IdleTimeoutSeconds is the maximum duration
                                  in seconds a request will be allowed to stay open
                                  while not receiving any bytes from the user's application.
                                  If unspecified, a system default will be provided.
                                format: int64
                                type: integer
                              imagePullSecrets:
                                description: 'ImagePullSecrets is an optional list
                                  of references to secrets in the same namespace to
                                  use for pulling any of the images used by this PodSpec.
                                  If specified, these secrets will be passed to individual
                                  puller implementations for them to use. More info:
                                  https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                              initContainers:
                                description: 'List of initialization containers belonging
                                  to the pod. Init containers are executed in order
                                  prior to containers being started. If any init container
                                  fails, the pod is considered to have failed and
                                  is handled according to its restartPolicy. The name
                                  for an init container or normal container must be
                                  unique among all containers. Init containers may
                                  not have Lifecycle actions, Readiness probes, Liveness
                                  probes, or Startup probes. The resourceRequirements
                                  of an init container are taken into account during
                                  scheduling by finding the highest request/limit
                                  for each resource type, and then using the max of
                                  of that value or the sum of the normal containers.
                                  Limits are applied to init containers in a similar
                                  fashion. Init containers cannot currently be added
                                  or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-init-containers
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              nodeSelector:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-nodeselector
                                type: object
                                x-kubernetes-map-type: atomic
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-priorityclassname
                                type: string
                                x-kubernetes-preserve-unknown-fields: true
                              responseStartTimeoutSeconds:
                                description: ResponseStartTimeoutSeconds is the maximum
                                  duration in seconds that the request routing layer
                                  will wait for a request delivered to a container
                                  to begin sending any network traffic.
                                format: int64
                                type: integer
                              runtimeClassName:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-runtimeclassname
                                type: string
                                x-kubernetes-preserve-unknown-fields: true
                              schedulerName:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-schedulername
                                type: string
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-securitycontext
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAccountName:
                                description: 'ServiceAccountName is the name of the
                                  ServiceAccount to use to run this pod. More info:
                                  https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                type: string
                              timeoutSeconds:
                                description: TimeoutSeconds is the maximum duration
                                  in seconds that the request instance is allowed
                                  to respond to a request. If unspecified, a system
                                  default will be provided.
                                format: int64
                                type: integer
                              tolerations:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-tolerations
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-tolerations
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              topologySpreadConstraints:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-topologyspreadconstraints
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-topologyspreadconstraints
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: 'List of volumes that can be mounted
                                  by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                                items:
                                  description: Volume represents a named volume in
                                    a pod that may be accessed by any container in
                                    the pod.
                                  properties:
                                    configMap:
                                      description: configMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items if unspecified, each
                                            key-value pair in the Data field of the
                                            referenced ConfigMap will be projected
                                            into the volume as a file whose name is
                                            the key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the ConfigMap,
                                            the volume setup will error unless it
                                            is marked optional. Paths must be relative
                                            and may not contain the '..' path or start
                                            with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    emptyDir:
                                      description: This is accessible behind a feature
                                        flag - kubernetes.podspec-emptydir
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    name:
                                      description: 'name of the volume. Must be a
                                        DNS_LABEL and unique within the pod. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    persistentVolumeClaim:
                                      description: This is accessible behind a feature
                                        flag - kubernetes.podspec-persistent-volume-claim
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    projected:
                                      description: projected items for all in one
                                        resources secrets, configmaps, and downward
                                        API
                                      properties:
                                        defaultMode:
                                          description: defaultMode are the mode bits
                                            used to set permissions on created files
                                            by default. Must be an octal value between
                                            0000 and 0777 or a decimal value between
                                            0 and 511. YAML accepts both octal and
                                            decimal values, JSON requires decimal
                                            values for mode bits. Directories within
                                            the path are not affected by this setting.
                                            This might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits
                                            set.
                                          format: int32
                                          type: integer
                                        sources:
                                          description: sources is the list of volume
                                            projections
                                          items:
                                            description: Projection that may be projected
                                              along with other supported volume types
                                            properties:
                                              configMap:
                                                description: configMap information
                                                  about the configMap data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced ConfigMap
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the ConfigMap, the volume
                                                      setup will error unless it is
                                                      marked optional. Paths must
                                                      be relative and may not contain
                                                      the '..' path or start with
                                                      '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: optional specify
                                                      whether the ConfigMap or its
                                                      keys must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secret:
                                                description: secret information about
                                                  the secret data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced Secret
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the Secret, the volume setup
                                                      will error unless it is marked
                                                      optional. Paths must be relative
                                                      and may not contain the '..'
                                                      path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: optional field specify
                                                      whether the Secret or its key
                                                      must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              serviceAccountToken:
                                                description: serviceAccountToken is
                                                  information about the serviceAccountToken
                                                  data to project
                                                properties:
                                                  audience:
                                                    description: audience is the intended
                                                      audience of the token. A recipient
                                                      of a token must identify itself
                                                      with an identifier specified
                                                      in the audience of the token,
                                                      and otherwise should reject
                                                      the token. The audience defaults
                                                      to the identifier of the apiserver.
                                                    type: string
                                                  expirationSeconds:
                                                    description: expirationSeconds
                                                      is the requested duration of
                                                      validity of the service account
                                                      token. As the token approaches
                                                      expiration, the kubelet volume
                                                      plugin will proactively rotate
                                                      the service account token. The
                                                      kubelet will start trying to
                                                      rotate the token if the token
                                                      is older than 80 percent of
                                                      its time to live or if the token
                                                      is older than 24 hours.Defaults
                                                      to 1 hour and must be at least
                                                      10 minutes.
                                                    format: int64
                                                    type: integer
                                                  path:
                                                    description: path is the path
                                                      relative to the mount point
                                                      of the file to project the token
                                                      into.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                            type: object
                                          type: array
                                      type: object
                                    secret:
                                      description: 'secret represents a secret that
                                        should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is Optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items If unspecified, each
                                            key-value pair in the Data field of the
                                            referenced Secret will be projected into
                                            the volume as a file whose name is the
                                            key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the Secret, the
                                            volume setup will error unless it is marked
                                            optional. Paths must be relative and may
                                            not contain the '..' path or start with
                                            '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: 'secretName is the name of
                                            the secret in the pod''s namespace to
                                            use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - containers
                            type: object
                        type: object
                    type: object
                  status:
                    description: ConfigurationStatus communicates the observed state
                      of the Configuration (from the controller).
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      latestCreatedRevisionName:
                        description: LatestCreatedRevisionName is the last revision
                          that was created from this Configuration. It might not be
                          ready yet, for that use LatestReadyRevisionName.
                        type: string
                      latestReadyRevisionName:
                        description: LatestReadyRevisionName holds the name of the
                          latest Revision stamped out from this Configuration that
                          has had its "Ready" condition become "True".
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/component: networking
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            knative.dev/crd-install: "true"
          name: clusterdomainclaims.networking.internal.knative.dev
        spec:
          group: networking.internal.knative.dev
          names:
            categories:
            - knative-internal
            - networking
            kind: ClusterDomainClaim
            plural: clusterdomainclaims
            shortNames:
            - cdc
            singular: clusterdomainclaim
          scope: Cluster
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: ClusterDomainClaim is a cluster-wide reservation for
                  a particular domain name.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: 'Spec is the desired state of the ClusterDomainClaim.
                      More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      namespace:
                        description: Namespace is the namespace which is allowed to
                          create a DomainMapping using this ClusterDomainClaim's name.
                        type: string
                    required:
                    - namespace
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            knative.dev/crd-install: "true"
          name: domainmappings.serving.knative.dev
        spec:
          group: serving.knative.dev
          names:
            categories:
            - all
            - knative
            - serving
            kind: DomainMapping
            plural: domainmappings
            shortNames:
            - dm
            singular: domainmapping
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.url
              name: URL
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].reason
              name: Reason
              type: string
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: DomainMapping is a mapping from a custom hostname to
                  an Addressable.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: 'Spec is the desired state of the DomainMapping.
                      More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      ref:
                        description: "Ref specifies the target of the Domain Mapping.
                          \n The object identified by the Ref must be an Addressable
                          with a URL of the form `{name}.{namespace}.{domain}` where
                          `{domain}` is the cluster domain, and `{name}` and `{namespace}`
                          are the name and namespace of a Kubernetes Service. \n This
                          contract is satisfied by Knative types such as Knative Services
                          and Knative Routes, and by Kubernetes Services."
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          group:
                            description: 'Group of the API, without the version of
                              the group. This can be used as an alternative to the
                              APIVersion, and then resolved using ResolveGroup. Note:
                              This API is EXPERIMENTAL and might break anytime. For
                              more details: https://github.com/knative/eventing/issues/5086'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              This is optional field, it gets defaulted to the object
                              holding it if left out.'
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      tls:
                        description: TLS allows the DomainMapping to terminate TLS
                          traffic with an existing secret.
                        properties:
                          secretName:
                            description: SecretName is the name of the existing secret
                              used to terminate TLS traffic.
                            type: string
                        required:
                        - secretName
                        type: object
                    required:
                    - ref
                    type: object
                  status:
                    description: 'Status is the current state of the DomainMapping.
                      More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      address:
                        description: Address holds the information needed for a DomainMapping
                          to be the target of an event.
                        properties:
                          url:
                            type: string
                        type: object
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                      url:
                        description: URL is the URL of this DomainMapping.
                        type: string
                    type: object
                type: object
            served: true
            storage: false
            subresources:
              status: {}
          - additionalPrinterColumns:
            - jsonPath: .status.url
              name: URL
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].reason
              name: Reason
              type: string
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: DomainMapping is a mapping from a custom hostname to
                  an Addressable.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: 'Spec is the desired state of the DomainMapping.
                      More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      ref:
                        description: "Ref specifies the target of the Domain Mapping.
                          \n The object identified by the Ref must be an Addressable
                          with a URL of the form `{name}.{namespace}.{domain}` where
                          `{domain}` is the cluster domain, and `{name}` and `{namespace}`
                          are the name and namespace of a Kubernetes Service. \n This
                          contract is satisfied by Knative types such as Knative Services
                          and Knative Routes, and by Kubernetes Services."
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          group:
                            description: 'Group of the API, without the version of
                              the group. This can be used as an alternative to the
                              APIVersion, and then resolved using ResolveGroup. Note:
                              This API is EXPERIMENTAL and might break anytime. For
                              more details: https://github.com/knative/eventing/issues/5086'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              This is optional field, it gets defaulted to the object
                              holding it if left out.'
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      tls:
                        description: TLS allows the DomainMapping to terminate TLS
                          traffic with an existing secret.
                        properties:
                          secretName:
                            description: SecretName is the name of the existing secret
                              used to terminate TLS traffic.
                            type: string
                        required:
                        - secretName
                        type: object
                    required:
                    - ref
                    type: object
                  status:
                    description: 'Status is the current state of the DomainMapping.
                      More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      address:
                        description: Address holds the information needed for a DomainMapping
                          to be the target of an event.
                        properties:
                          url:
                            type: string
                        type: object
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                      url:
                        description: URL is the URL of this DomainMapping.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/component: networking
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            knative.dev/crd-install: "true"
          name: ingresses.networking.internal.knative.dev
        spec:
          group: networking.internal.knative.dev
          names:
            categories:
            - knative-internal
            - networking
            kind: Ingress
            plural: ingresses
            shortNames:
            - kingress
            - king
            singular: ingress
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.conditions[?(@.type=='Ready')].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].reason
              name: Reason
              type: string
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: "Ingress is a collection of rules that allow inbound
                  connections to reach the endpoints defined by a backend. An Ingress
                  can be configured to give services externally-reachable URLs, load
                  balance traffic, offer name based virtual hosting, etc. \n This
                  is heavily based on K8s Ingress https://godoc.org/k8s.io/api/networking/v1beta1#Ingress
                  which some highlighted modifications."
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: 'Spec is the desired state of the Ingress. More info:
                      https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      httpOption:
                        description: 'HTTPOption is the option of HTTP. It has the
                          following two values: `HTTPOptionEnabled`, `HTTPOptionRedirected`'
                        type: string
                      rules:
                        description: A list of host rules used to configure the Ingress.
                        items:
                          description: IngressRule represents the rules mapping the
                            paths under a specified host to the related backend services.
                            Incoming requests are first evaluated for a host match,
                            then routed to the backend associated with the matching
                            IngressRuleValue.
                          properties:
                            hosts:
                              description: 'Host is the fully qualified domain name
                                of a network host, as defined by RFC 3986. Note the
                                following deviations from the "host" part of the URI
                                as defined in the RFC: 1. IPs are not allowed. Currently
                                a rule value can only apply to the IP in the Spec
                                of the parent . 2. The `:` delimiter is not respected
                                because ports are not allowed. Currently the port
                                of an Ingress is implicitly :80 for http and :443
                                for https. Both these may change in the future. If
                                the host is unspecified, the Ingress routes all traffic
                                based on the specified IngressRuleValue. If multiple
                                matching Hosts were provided, the first rule will
                                take precedent.'
                              items:
                                type: string
                              type: array
                            http:
                              description: HTTP represents a rule to apply against
                                incoming requests. If the rule is satisfied, the request
                                is routed to the specified backend.
                              properties:
                                paths:
                                  description: "A collection of paths that map requests
                                    to backends. \n If they are multiple matching
                                    paths, the first match takes precedence."
                                  items:
                                    description: HTTPIngressPath associates a path
                                      regex with a backend. Incoming URLs matching
                                      the path are forwarded to the backend.
                                    properties:
                                      appendHeaders:
                                        additionalProperties:
                                          type: string
                                        description: "AppendHeaders allow specifying
                                          additional HTTP headers to add before forwarding
                                          a request to the destination service. \n
                                          NOTE: This differs from K8s Ingress which
                                          doesn't allow header appending."
                                        type: object
                                      headers:
                                        additionalProperties:
                                          description: HeaderMatch represents a matching
                                            value of Headers in HTTPIngressPath. Currently,
                                            only the exact matching is supported.
                                          properties:
                                            exact:
                                              type: string
                                          required:
                                          - exact
                                          type: object
                                        description: Headers defines header matching
                                          rules which is a map from a header name
                                          to HeaderMatch which specify a matching
                                          condition. When a request matched with all
                                          the header matching rules, the request is
                                          routed by the corresponding ingress rule.
                                          If it is empty, the headers are not used
                                          for matching
                                        type: object
                                      path:
                                        description: Path represents a literal prefix
                                          to which this rule should apply. Currently
                                          it can contain characters disallowed from
                                          the conventional "path" part of a URL as
                                          defined by RFC 3986. Paths must begin with
                                          a '/'. If unspecified, the path defaults
                                          to a catch all sending traffic to the backend.
                                        type: string
                                      rewriteHost:
                                        description: "RewriteHost rewrites the incoming
                                          request's host header. \n This field is
                                          currently experimental and not supported
                                          by all Ingress implementations."
                                        type: string
                                      splits:
                                        description: Splits defines the referenced
                                          service endpoints to which the traffic will
                                          be forwarded to.
                                        items:
                                          description: IngressBackendSplit describes
                                            all endpoints for a given service and
                                            port.
                                          properties:
                                            appendHeaders:
                                              additionalProperties:
                                                type: string
                                              description: "AppendHeaders allow specifying
                                                additional HTTP headers to add before
                                                forwarding a request to the destination
                                                service. \n NOTE: This differs from
                                                K8s Ingress which doesn't allow header
                                                appending."
                                              type: object
                                            percent:
                                              description: "Specifies the split percentage,
                                                a number between 0 and 100.  If only
                                                one split is specified, we default
                                                to 100. \n NOTE: This differs from
                                                K8s Ingress to allow percentage split."
                                              type: integer
                                            serviceName:
                                              description: Specifies the name of the
                                                referenced service.
                                              type: string
                                            serviceNamespace:
                                              description: "Specifies the namespace
                                                of the referenced service. \n NOTE:
                                                This differs from K8s Ingress to allow
                                                routing to different namespaces."
                                              type: string
                                            servicePort:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the port of the
                                                referenced service.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - serviceName
                                          - serviceNamespace
                                          - servicePort
                                          type: object
                                        type: array
                                    required:
                                    - splits
                                    type: object
                                  type: array
                              required:
                              - paths
                              type: object
                            visibility:
                              description: Visibility signifies whether this rule
                                should `ClusterLocal`. If it's not specified then
                                it defaults to `ExternalIP`.
                              type: string
                          type: object
                        type: array
                      tls:
                        description: 'TLS configuration. Currently Ingress only supports
                          a single TLS port: 443. If multiple members of this list
                          specify different hosts, they will be multiplexed on the
                          same port according to the hostname specified through the
                          SNI TLS extension, if the ingress controller fulfilling
                          the ingress supports SNI.'
                        items:
                          description: IngressTLS describes the transport layer security
                            associated with an Ingress.
                          properties:
                            hosts:
                              description: Hosts is a list of hosts included in the
                                TLS certificate. The values in this list must match
                                the name/s used in the tlsSecret. Defaults to the
                                wildcard host setting for the loadbalancer controller
                                fulfilling this Ingress, if left unspecified.
                              items:
                                type: string
                              type: array
                            secretName:
                              description: SecretName is the name of the secret used
                                to terminate SSL traffic.
                              type: string
                            secretNamespace:
                              description: SecretNamespace is the namespace of the
                                secret used to terminate SSL traffic. If not set the
                                namespace should be assumed to be the same as the
                                Ingress. If set the secret should have the same namespace
                                as the Ingress otherwise the behaviour is undefined
                                and not supported.
                              type: string
                          type: object
                        type: array
                    type: object
                  status:
                    description: 'Status is the current state of the Ingress. More
                      info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                      privateLoadBalancer:
                        description: PrivateLoadBalancer contains the current status
                          of the load-balancer.
                        properties:
                          ingress:
                            description: Ingress is a list containing ingress points
                              for the load-balancer. Traffic intended for the service
                              should be sent to these ingress points.
                            items:
                              description: 'LoadBalancerIngressStatus represents the
                                status of a load-balancer ingress point: traffic intended
                                for the service should be sent to an ingress point.'
                              properties:
                                domain:
                                  description: Domain is set for load-balancer ingress
                                    points that are DNS based (typically AWS load-balancers)
                                  type: string
                                domainInternal:
                                  description: "DomainInternal is set if there is
                                    a cluster-local DNS name to access the Ingress.
                                    \n NOTE: This differs from K8s Ingress, since
                                    we also desire to have a cluster-local DNS name
                                    to allow routing in case of not having a mesh."
                                  type: string
                                ip:
                                  description: IP is set for load-balancer ingress
                                    points that are IP based (typically GCE or OpenStack
                                    load-balancers)
                                  type: string
                                meshOnly:
                                  description: MeshOnly is set if the Ingress is only
                                    load-balanced through a Service mesh.
                                  type: boolean
                              type: object
                            type: array
                        type: object
                      publicLoadBalancer:
                        description: PublicLoadBalancer contains the current status
                          of the load-balancer.
                        properties:
                          ingress:
                            description: Ingress is a list containing ingress points
                              for the load-balancer. Traffic intended for the service
                              should be sent to these ingress points.
                            items:
                              description: 'LoadBalancerIngressStatus represents the
                                status of a load-balancer ingress point: traffic intended
                                for the service should be sent to an ingress point.'
                              properties:
                                domain:
                                  description: Domain is set for load-balancer ingress
                                    points that are DNS based (typically AWS load-balancers)
                                  type: string
                                domainInternal:
                                  description: "DomainInternal is set if there is
                                    a cluster-local DNS name to access the Ingress.
                                    \n NOTE: This differs from K8s Ingress, since
                                    we also desire to have a cluster-local DNS name
                                    to allow routing in case of not having a mesh."
                                  type: string
                                ip:
                                  description: IP is set for load-balancer ingress
                                    points that are IP based (typically GCE or OpenStack
                                    load-balancers)
                                  type: string
                                meshOnly:
                                  description: MeshOnly is set if the Ingress is only
                                    load-balanced through a Service mesh.
                                  type: boolean
                              type: object
                            type: array
                        type: object
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            knative.dev/crd-install: "true"
          name: metrics.autoscaling.internal.knative.dev
        spec:
          group: autoscaling.internal.knative.dev
          names:
            categories:
            - knative-internal
            - autoscaling
            kind: Metric
            plural: metrics
            singular: metric
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.conditions[?(@.type=='Ready')].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].reason
              name: Reason
              type: string
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: Metric represents a resource to configure the metric
                  collector with.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Spec holds the desired state of the Metric (from
                      the client).
                    properties:
                      panicWindow:
                        description: PanicWindow is the aggregation window for metrics
                          where quick reactions are needed.
                        format: int64
                        type: integer
                      scrapeTarget:
                        description: ScrapeTarget is the K8s service that publishes
                          the metric endpoint.
                        type: string
                      stableWindow:
                        description: StableWindow is the aggregation window for metrics
                          in a stable state.
                        format: int64
                        type: integer
                    required:
                    - panicWindow
                    - scrapeTarget
                    - stableWindow
                    type: object
                  status:
                    description: Status communicates the observed state of the Metric
                      (from the controller).
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            knative.dev/crd-install: "true"
          name: podautoscalers.autoscaling.internal.knative.dev
        spec:
          group: autoscaling.internal.knative.dev
          names:
            categories:
            - knative-internal
            - autoscaling
            kind: PodAutoscaler
            plural: podautoscalers
            shortNames:
            - kpa
            - pa
            singular: podautoscaler
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.desiredScale
              name: DesiredScale
              type: integer
            - jsonPath: .status.actualScale
              name: ActualScale
              type: integer
            - jsonPath: .status.conditions[?(@.type=='Ready')].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].reason
              name: Reason
              type: string
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: 'PodAutoscaler is a Knative abstraction that encapsulates
                  the interface by which Knative components instantiate autoscalers.  This
                  definition is an abstraction that may be backed by multiple definitions.  For
                  more information, see the Knative Pluggability presentation: https://docs.google.com/presentation/d/19vW9HFZ6Puxt31biNZF3uLRejDmu82rxJIk1cWmxF7w/edit'
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Spec holds the desired state of the PodAutoscaler
                      (from the client).
                    properties:
                      containerConcurrency:
                        description: ContainerConcurrency specifies the maximum allowed
                          in-flight (concurrent) requests per container of the Revision.
                          Defaults to `0` which means unlimited concurrency.
                        format: int64
                        type: integer
                      protocolType:
                        description: The application-layer protocol. Matches `ProtocolType`
                          inferred from the revision spec.
                        type: string
                      reachability:
                        description: Reachability specifies whether or not the `ScaleTargetRef`
                          can be reached (ie. has a route). Defaults to `ReachabilityUnknown`
                        type: string
                      scaleTargetRef:
                        description: ScaleTargetRef defines the /scale-able resource
                          that this PodAutoscaler is responsible for quickly right-sizing.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - protocolType
                    - scaleTargetRef
                    type: object
                  status:
                    description: Status communicates the observed state of the PodAutoscaler
                      (from the controller).
                    properties:
                      actualScale:
                        description: ActualScale shows the actual number of replicas
                          for the revision.
                        format: int32
                        type: integer
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      desiredScale:
                        description: DesiredScale shows the current desired number
                          of replicas for the revision.
                        format: int32
                        type: integer
                      metricsServiceName:
                        description: MetricsServiceName is the K8s Service name that
                          provides revision metrics. The service is managed by the
                          PA object.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                      serviceName:
                        description: ServiceName is the K8s Service name that serves
                          the revision, scaled by this PA. The service is created
                          and owned by the ServerlessService object owned by this
                          PA.
                        type: string
                    required:
                    - metricsServiceName
                    - serviceName
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            knative.dev/crd-install: "true"
          name: revisions.serving.knative.dev
        spec:
          group: serving.knative.dev
          names:
            categories:
            - all
            - knative
            - serving
            kind: Revision
            plural: revisions
            shortNames:
            - rev
            singular: revision
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .metadata.labels['serving\.knative\.dev/configuration']
              name: Config Name
              type: string
            - jsonPath: .status.serviceName
              name: K8s Service Name
              type: string
            - jsonPath: .metadata.labels['serving\.knative\.dev/configurationGeneration']
              name: Generation
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].reason
              name: Reason
              type: string
            - jsonPath: .status.actualReplicas
              name: Actual Replicas
              type: integer
            - jsonPath: .status.desiredReplicas
              name: Desired Replicas
              type: integer
            name: v1
            schema:
              openAPIV3Schema:
                description: "Revision is an immutable snapshot of code and configuration.
                  \ A revision references a container image. Revisions are created
                  by updates to a Configuration. \n See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#revision"
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: RevisionSpec holds the desired state of the Revision
                      (from the client).
                    properties:
                      affinity:
                        description: This is accessible behind a feature flag - kubernetes.podspec-affinity
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      automountServiceAccountToken:
                        description: AutomountServiceAccountToken indicates whether
                          a service account token should be automatically mounted.
                        type: boolean
                      containerConcurrency:
                        description: ContainerConcurrency specifies the maximum allowed
                          in-flight (concurrent) requests per container of the Revision.  Defaults
                          to `0` which means concurrency to the application is not
                          limited, and the system decides the target concurrency for
                          the autoscaler.
                        format: int64
                        type: integer
                      containers:
                        description: List of containers belonging to the pod. Containers
                          cannot currently be added or removed. There must be at least
                          one container in a Pod. Cannot be updated.
                        items:
                          description: A single application container that you want
                            to run within a pod.
                          properties:
                            args:
                              description: 'Arguments to the entrypoint. The container
                                image''s CMD is used if this is not provided. Variable
                                references $(VAR_NAME) are expanded using the container''s
                                environment. If a variable cannot be resolved, the
                                reference in the input string will be unchanged. Double
                                $$ are reduced to a single $, which allows for escaping
                                the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                the string literal "$(VAR_NAME)". Escaped references
                                will never be expanded, regardless of whether the
                                variable exists or not. Cannot be updated. More info:
                                https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                              items:
                                type: string
                              type: array
                            command:
                              description: 'Entrypoint array. Not executed within
                                a shell. The container image''s ENTRYPOINT is used
                                if this is not provided. Variable references $(VAR_NAME)
                                are expanded using the container''s environment. If
                                a variable cannot be resolved, the reference in the
                                input string will be unchanged. Double $$ are reduced
                                to a single $, which allows for escaping the $(VAR_NAME)
                                syntax: i.e. "$$(VAR_NAME)" will produce the string
                                literal "$(VAR_NAME)". Escaped references will never
                                be expanded, regardless of whether the variable exists
                                or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                              items:
                                type: string
                              type: array
                            env:
                              description: List of environment variables to set in
                                the container. Cannot be updated.
                              items:
                                description: EnvVar represents an environment variable
                                  present in a Container.
                                properties:
                                  name:
                                    description: Name of the environment variable.
                                      Must be a C_IDENTIFIER.
                                    type: string
                                  value:
                                    description: 'Variable references $(VAR_NAME)
                                      are expanded using the previously defined environment
                                      variables in the container and any service environment
                                      variables. If a variable cannot be resolved,
                                      the reference in the input string will be unchanged.
                                      Double $$ are reduced to a single $, which allows
                                      for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                      will produce the string literal "$(VAR_NAME)".
                                      Escaped references will never be expanded, regardless
                                      of whether the variable exists or not. Defaults
                                      to "".'
                                    type: string
                                  valueFrom:
                                    description: Source for the environment variable's
                                      value. Cannot be used if value is not empty.
                                    properties:
                                      configMapKeyRef:
                                        description: Selects a key of a ConfigMap.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      fieldRef:
                                        description: This is accessible behind a feature
                                          flag - kubernetes.podspec-fieldref
                                        type: object
                                        x-kubernetes-map-type: atomic
                                        x-kubernetes-preserve-unknown-fields: true
                                      resourceFieldRef:
                                        description: This is accessible behind a feature
                                          flag - kubernetes.podspec-fieldref
                                        type: object
                                        x-kubernetes-map-type: atomic
                                        x-kubernetes-preserve-unknown-fields: true
                                      secretKeyRef:
                                        description: Selects a key of a secret in
                                          the pod's namespace
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                required:
                                - name
                                type: object
                              type: array
                            envFrom:
                              description: List of sources to populate environment
                                variables in the container. The keys defined within
                                a source must be a C_IDENTIFIER. All invalid keys
                                will be reported as an event when the container is
                                starting. When a key exists in multiple sources, the
                                value associated with the last source will take precedence.
                                Values defined by an Env with a duplicate key will
                                take precedence. Cannot be updated.
                              items:
                                description: EnvFromSource represents the source of
                                  a set of ConfigMaps
                                properties:
                                  configMapRef:
                                    description: The ConfigMap to select from
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          must be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  prefix:
                                    description: An optional identifier to prepend
                                      to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                    type: string
                                  secretRef:
                                    description: The Secret to select from
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret must
                                          be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              type: array
                            image:
                              description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
                                This field is optional to allow higher level config
                                management to default or override container images
                                in workload controllers like Deployments and StatefulSets.'
                              type: string
                            imagePullPolicy:
                              description: 'Image pull policy. One of Always, Never,
                                IfNotPresent. Defaults to Always if :latest tag is
                                specified, or IfNotPresent otherwise. Cannot be updated.
                                More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                              type: string
                            livenessProbe:
                              description: 'Periodic probe of container liveness.
                                Container will be restarted if the probe fails. Cannot
                                be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                failureThreshold:
                                  description: Minimum consecutive failures for the
                                    probe to be considered failed after having succeeded.
                                    Defaults to 3. Minimum value is 1.
                                  format: int32
                                  type: integer
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  type: object
                                initialDelaySeconds:
                                  description: 'Number of seconds after the container
                                    has started before liveness probes are initiated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  format: int32
                                  type: integer
                                periodSeconds:
                                  description: How often (in seconds) to perform the
                                    probe.
                                  format: int32
                                  type: integer
                                successThreshold:
                                  description: Minimum consecutive successes for the
                                    probe to be considered successful after having
                                    failed. Defaults to 1. Must be 1 for liveness
                                    and startup. Minimum value is 1.
                                  format: int32
                                  type: integer
                                tcpSocket:
                                  description: TCPSocket specifies an action involving
                                    a TCP port.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  type: object
                                timeoutSeconds:
                                  description: 'Number of seconds after which the
                                    probe times out. Defaults to 1 second. Minimum
                                    value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  format: int32
                                  type: integer
                              type: object
                            name:
                              description: Name of the container specified as a DNS_LABEL.
                                Each container in a pod must have a unique name (DNS_LABEL).
                                Cannot be updated.
                              type: string
                            ports:
                              description: List of ports to expose from the container.
                                Not specifying a port here DOES NOT prevent that port
                                from being exposed. Any port which is listening on
                                the default "0.0.0.0" address inside a container will
                                be accessible from the network. Modifying this array
                                with strategic merge patch may corrupt the data. For
                                more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                Cannot be updated.
                              items:
                                description: ContainerPort represents a network port
                                  in a single container.
                                properties:
                                  containerPort:
                                    description: Number of port to expose on the pod's
                                      IP address. This must be a valid port number,
                                      0 < x < 65536.
                                    format: int32
                                    type: integer
                                  name:
                                    description: If specified, this must be an IANA_SVC_NAME
                                      and unique within the pod. Each named port in
                                      a pod must have a unique name. Name for the
                                      port that can be referred to by services.
                                    type: string
                                  protocol:
                                    default: TCP
                                    description: Protocol for port. Must be UDP, TCP,
                                      or SCTP. Defaults to "TCP".
                                    type: string
                                required:
                                - containerPort
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - containerPort
                              - protocol
                              x-kubernetes-list-type: map
                            readinessProbe:
                              description: 'Periodic probe of container service readiness.
                                Container will be removed from service endpoints if
                                the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to
                                        execute inside the container, the working
                                        directory for the command  is root ('/') in
                                        the container's filesystem. The command is
                                        simply exec'd, it is not run inside a shell,
                                        so traditional shell instructions ('|', etc)
                                        won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is
                                        treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                failureThreshold:
                                  description: Minimum consecutive failures for the
                                    probe to be considered failed after having succeeded.
                                    Defaults to 3. Minimum value is 1.
                                  format: int32
                                  type: integer
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to
                                        the host. Defaults to HTTP.
                                      type: string
                                  type: object
                                initialDelaySeconds:
                                  description: 'Number of seconds after the container
                                    has started before liveness probes are initiated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  format: int32
                                  type: integer
                                periodSeconds:
                                  description: How often (in seconds) to perform the
                                    probe.
                                  format: int32
                                  type: integer
                                successThreshold:
                                  description: Minimum consecutive successes for the
                                    probe to be considered successful after having
                                    failed. Defaults to 1. Must be 1 for liveness
                                    and startup. Minimum value is 1.
                                  format: int32
                                  type: integer
                                tcpSocket:
                                  description: TCPSocket specifies an action involving
                                    a TCP port.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  type: object
                                timeoutSeconds:
                                  description: 'Number of seconds after which the
                                    probe times out. Defaults to 1 second. Minimum
                                    value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  format: int32
                                  type: integer
                              type: object
                            resources:
                              description: 'Compute Resources required by this container.
                                Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            securityContext:
                              description: 'SecurityContext defines the security options
                                the container should be run with. If set, the fields
                                of SecurityContext override the equivalent fields
                                of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                              properties:
                                allowPrivilegeEscalation:
                                  description: 'AllowPrivilegeEscalation controls
                                    whether a process can gain more privileges than
                                    its parent process. This bool directly controls
                                    if the no_new_privs flag will be set on the container
                                    process. AllowPrivilegeEscalation is true always
                                    when the container is: 1) run as Privileged 2)
                                    has CAP_SYS_ADMIN Note that this field cannot
                                    be set when spec.os.name is windows.'
                                  type: boolean
                                capabilities:
                                  description: The capabilities to add/drop when running
                                    containers. Defaults to the default set of capabilities
                                    granted by the container runtime. Note that this
                                    field cannot be set when spec.os.name is windows.
                                  properties:
                                    add:
                                      description: This is accessible behind a feature
                                        flag - kubernetes.containerspec-addcapabilities
                                      items:
                                        description: Capability represent POSIX capabilities
                                          type
                                        type: string
                                      type: array
                                    drop:
                                      description: Removed capabilities
                                      items:
                                        description: Capability represent POSIX capabilities
                                          type
                                        type: string
                                      type: array
                                  type: object
                                readOnlyRootFilesystem:
                                  description: Whether this container has a read-only
                                    root filesystem. Default is false. Note that this
                                    field cannot be set when spec.os.name is windows.
                                  type: boolean
                                runAsGroup:
                                  description: The GID to run the entrypoint of the
                                    container process. Uses runtime default if unset.
                                    May also be set in PodSecurityContext.  If set
                                    in both SecurityContext and PodSecurityContext,
                                    the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name
                                    is windows.
                                  format: int64
                                  type: integer
                                runAsNonRoot:
                                  description: Indicates that the container must run
                                    as a non-root user. If true, the Kubelet will
                                    validate the image at runtime to ensure that it
                                    does not run as UID 0 (root) and fail to start
                                    the container if it does. If unset or false, no
                                    such validation will be performed. May also be
                                    set in PodSecurityContext.  If set in both SecurityContext
                                    and PodSecurityContext, the value specified in
                                    SecurityContext takes precedence.
                                  type: boolean
                                runAsUser:
                                  description: The UID to run the entrypoint of the
                                    container process. Defaults to user specified
                                    in image metadata if unspecified. May also be
                                    set in PodSecurityContext.  If set in both SecurityContext
                                    and PodSecurityContext, the value specified in
                                    SecurityContext takes precedence. Note that this
                                    field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                              type: object
                            terminationMessagePath:
                              description: 'Optional: Path at which the file to which
                                the container''s termination message will be written
                                is mounted into the container''s filesystem. Message
                                written is intended to be brief final status, such
                                as an assertion failure message. Will be truncated
                                by the node if greater than 4096 bytes. The total
                                message length across all containers will be limited
                                to 12kb. Defaults to /dev/termination-log. Cannot
                                be updated.'
                              type: string
                            terminationMessagePolicy:
                              description: Indicate how the termination message should
                                be populated. File will use the contents of terminationMessagePath
                                to populate the container status message on both success
                                and failure. FallbackToLogsOnError will use the last
                                chunk of container log output if the termination message
                                file is empty and the container exited with an error.
                                The log output is limited to 2048 bytes or 80 lines,
                                whichever is smaller. Defaults to File. Cannot be
                                updated.
                              type: string
                            volumeMounts:
                              description: Pod volumes to mount into the container's
                                filesystem. Cannot be updated.
                              items:
                                description: VolumeMount describes a mounting of a
                                  Volume within a container.
                                properties:
                                  mountPath:
                                    description: Path within the container at which
                                      the volume should be mounted.  Must not contain
                                      ':'.
                                    type: string
                                  name:
                                    description: This must match the Name of a Volume.
                                    type: string
                                  readOnly:
                                    description: Mounted read-only if true, read-write
                                      otherwise (false or unspecified). Defaults to
                                      false.
                                    type: boolean
                                  subPath:
                                    description: Path within the volume from which
                                      the container's volume should be mounted. Defaults
                                      to "" (volume's root).
                                    type: string
                                required:
                                - mountPath
                                - name
                                type: object
                              type: array
                            workingDir:
                              description: Container's working directory. If not specified,
                                the container runtime's default will be used, which
                                might be configured in the container image. Cannot
                                be updated.
                              type: string
                          type: object
                        type: array
                      dnsConfig:
                        description: This is accessible behind a feature flag - kubernetes.podspec-dnsconfig
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      dnsPolicy:
                        description: This is accessible behind a feature flag - kubernetes.podspec-dnspolicy
                        type: string
                      enableServiceLinks:
                        description: 'EnableServiceLinks indicates whether information
                          about services should be injected into pod''s environment
                          variables, matching the syntax of Docker links. Optional:
                          Knative defaults this to false.'
                        type: boolean
                      hostAliases:
                        description: This is accessible behind a feature flag - kubernetes.podspec-hostaliases
                        items:
                          description: This is accessible behind a feature flag -
                            kubernetes.podspec-hostaliases
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      idleTimeoutSeconds:
                        description: IdleTimeoutSeconds is the maximum duration in
                          seconds a request will be allowed to stay open while not
                          receiving any bytes from the user's application. If unspecified,
                          a system default will be provided.
                        format: int64
                        type: integer
                      imagePullSecrets:
                        description: 'ImagePullSecrets is an optional list of references
                          to secrets in the same namespace to use for pulling any
                          of the images used by this PodSpec. If specified, these
                          secrets will be passed to individual puller implementations
                          for them to use. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                        items:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      initContainers:
                        description: 'List of initialization containers belonging
                          to the pod. Init containers are executed in order prior
                          to containers being started. If any init container fails,
                          the pod is considered to have failed and is handled according
                          to its restartPolicy. The name for an init container or
                          normal container must be unique among all containers. Init
                          containers may not have Lifecycle actions, Readiness probes,
                          Liveness probes, or Startup probes. The resourceRequirements
                          of an init container are taken into account during scheduling
                          by finding the highest request/limit for each resource type,
                          and then using the max of of that value or the sum of the
                          normal containers. Limits are applied to init containers
                          in a similar fashion. Init containers cannot currently be
                          added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                        items:
                          description: This is accessible behind a feature flag -
                            kubernetes.podspec-init-containers
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      nodeSelector:
                        description: This is accessible behind a feature flag - kubernetes.podspec-nodeselector
                        type: object
                        x-kubernetes-map-type: atomic
                        x-kubernetes-preserve-unknown-fields: true
                      priorityClassName:
                        description: This is accessible behind a feature flag - kubernetes.podspec-priorityclassname
                        type: string
                        x-kubernetes-preserve-unknown-fields: true
                      responseStartTimeoutSeconds:
                        description: ResponseStartTimeoutSeconds is the maximum duration
                          in seconds that the request routing layer will wait for
                          a request delivered to a container to begin sending any
                          network traffic.
                        format: int64
                        type: integer
                      runtimeClassName:
                        description: This is accessible behind a feature flag - kubernetes.podspec-runtimeclassname
                        type: string
                        x-kubernetes-preserve-unknown-fields: true
                      schedulerName:
                        description: This is accessible behind a feature flag - kubernetes.podspec-schedulername
                        type: string
                        x-kubernetes-preserve-unknown-fields: true
                      securityContext:
                        description: This is accessible behind a feature flag - kubernetes.podspec-securitycontext
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      serviceAccountName:
                        description: 'ServiceAccountName is the name of the ServiceAccount
                          to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                        type: string
                      timeoutSeconds:
                        description: TimeoutSeconds is the maximum duration in seconds
                          that the request instance is allowed to respond to a request.
                          If unspecified, a system default will be provided.
                        format: int64
                        type: integer
                      tolerations:
                        description: This is accessible behind a feature flag - kubernetes.podspec-tolerations
                        items:
                          description: This is accessible behind a feature flag -
                            kubernetes.podspec-tolerations
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      topologySpreadConstraints:
                        description: This is accessible behind a feature flag - kubernetes.podspec-topologyspreadconstraints
                        items:
                          description: This is accessible behind a feature flag -
                            kubernetes.podspec-topologyspreadconstraints
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      volumes:
                        description: 'List of volumes that can be mounted by containers
                          belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                        items:
                          description: Volume represents a named volume in a pod that
                            may be accessed by any container in the pod.
                          properties:
                            configMap:
                              description: configMap represents a configMap that should
                                populate this volume
                              properties:
                                defaultMode:
                                  description: 'defaultMode is optional: mode bits
                                    used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or
                                    a decimal value between 0 and 511. YAML accepts
                                    both octal and decimal values, JSON requires decimal
                                    values for mode bits. Defaults to 0644. Directories
                                    within the path are not affected by this setting.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                items:
                                  description: items if unspecified, each key-value
                                    pair in the Data field of the referenced ConfigMap
                                    will be projected into the volume as a file whose
                                    name is the key and content is the value. If specified,
                                    the listed keys will be projected into the specified
                                    paths, and unlisted keys will not be present.
                                    If a key is specified which is not present in
                                    the ConfigMap, the volume setup will error unless
                                    it is marked optional. Paths must be relative
                                    and may not contain the '..' path or start with
                                    '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: key is the key to project.
                                        type: string
                                      mode:
                                        description: 'mode is Optional: mode bits
                                          used to set permissions on this file. Must
                                          be an octal value between 0000 and 0777
                                          or a decimal value between 0 and 511. YAML
                                          accepts both octal and decimal values, JSON
                                          requires decimal values for mode bits. If
                                          not specified, the volume defaultMode will
                                          be used. This might be in conflict with
                                          other options that affect the file mode,
                                          like fsGroup, and the result can be other
                                          mode bits set.'
                                        format: int32
                                        type: integer
                                      path:
                                        description: path is the relative path of
                                          the file to map the key to. May not be an
                                          absolute path. May not contain the path
                                          element '..'. May not start with the string
                                          '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: optional specify whether the ConfigMap
                                    or its keys must be defined
                                  type: boolean
                              type: object
                              x-kubernetes-map-type: atomic
                            emptyDir:
                              description: This is accessible behind a feature flag
                                - kubernetes.podspec-emptydir
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            name:
                              description: 'name of the volume. Must be a DNS_LABEL
                                and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            persistentVolumeClaim:
                              description: This is accessible behind a feature flag
                                - kubernetes.podspec-persistent-volume-claim
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            projected:
                              description: projected items for all in one resources
                                secrets, configmaps, and downward API
                              properties:
                                defaultMode:
                                  description: defaultMode are the mode bits used
                                    to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or
                                    a decimal value between 0 and 511. YAML accepts
                                    both octal and decimal values, JSON requires decimal
                                    values for mode bits. Directories within the path
                                    are not affected by this setting. This might be
                                    in conflict with other options that affect the
                                    file mode, like fsGroup, and the result can be
                                    other mode bits set.
                                  format: int32
                                  type: integer
                                sources:
                                  description: sources is the list of volume projections
                                  items:
                                    description: Projection that may be projected
                                      along with other supported volume types
                                    properties:
                                      configMap:
                                        description: configMap information about the
                                          configMap data to project
                                        properties:
                                          items:
                                            description: items if unspecified, each
                                              key-value pair in the Data field of
                                              the referenced ConfigMap will be projected
                                              into the volume as a file whose name
                                              is the key and content is the value.
                                              If specified, the listed keys will be
                                              projected into the specified paths,
                                              and unlisted keys will not be present.
                                              If a key is specified which is not present
                                              in the ConfigMap, the volume setup will
                                              error unless it is marked optional.
                                              Paths must be relative and may not contain
                                              the '..' path or start with '..'.
                                            items:
                                              description: Maps a string key to a
                                                path within a volume.
                                              properties:
                                                key:
                                                  description: key is the key to project.
                                                  type: string
                                                mode:
                                                  description: 'mode is Optional:
                                                    mode bits used to set permissions
                                                    on this file. Must be an octal
                                                    value between 0000 and 0777 or
                                                    a decimal value between 0 and
                                                    511. YAML accepts both octal and
                                                    decimal values, JSON requires
                                                    decimal values for mode bits.
                                                    If not specified, the volume defaultMode
                                                    will be used. This might be in
                                                    conflict with other options that
                                                    affect the file mode, like fsGroup,
                                                    and the result can be other mode
                                                    bits set.'
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: path is the relative
                                                    path of the file to map the key
                                                    to. May not be an absolute path.
                                                    May not contain the path element
                                                    '..'. May not start with the string
                                                    '..'.
                                                  type: string
                                              required:
                                              - key
                                              - path
                                              type: object
                                            type: array
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: optional specify whether
                                              the ConfigMap or its keys must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: secret information about the
                                          secret data to project
                                        properties:
                                          items:
                                            description: items if unspecified, each
                                              key-value pair in the Data field of
                                              the referenced Secret will be projected
                                              into the volume as a file whose name
                                              is the key and content is the value.
                                              If specified, the listed keys will be
                                              projected into the specified paths,
                                              and unlisted keys will not be present.
                                              If a key is specified which is not present
                                              in the Secret, the volume setup will
                                              error unless it is marked optional.
                                              Paths must be relative and may not contain
                                              the '..' path or start with '..'.
                                            items:
                                              description: Maps a string key to a
                                                path within a volume.
                                              properties:
                                                key:
                                                  description: key is the key to project.
                                                  type: string
                                                mode:
                                                  description: 'mode is Optional:
                                                    mode bits used to set permissions
                                                    on this file. Must be an octal
                                                    value between 0000 and 0777 or
                                                    a decimal value between 0 and
                                                    511. YAML accepts both octal and
                                                    decimal values, JSON requires
                                                    decimal values for mode bits.
                                                    If not specified, the volume defaultMode
                                                    will be used. This might be in
                                                    conflict with other options that
                                                    affect the file mode, like fsGroup,
                                                    and the result can be other mode
                                                    bits set.'
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: path is the relative
                                                    path of the file to map the key
                                                    to. May not be an absolute path.
                                                    May not contain the path element
                                                    '..'. May not start with the string
                                                    '..'.
                                                  type: string
                                              required:
                                              - key
                                              - path
                                              type: object
                                            type: array
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: optional field specify whether
                                              the Secret or its key must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      serviceAccountToken:
                                        description: serviceAccountToken is information
                                          about the serviceAccountToken data to project
                                        properties:
                                          audience:
                                            description: audience is the intended
                                              audience of the token. A recipient of
                                              a token must identify itself with an
                                              identifier specified in the audience
                                              of the token, and otherwise should reject
                                              the token. The audience defaults to
                                              the identifier of the apiserver.
                                            type: string
                                          expirationSeconds:
                                            description: expirationSeconds is the
                                              requested duration of validity of the
                                              service account token. As the token
                                              approaches expiration, the kubelet volume
                                              plugin will proactively rotate the service
                                              account token. The kubelet will start
                                              trying to rotate the token if the token
                                              is older than 80 percent of its time
                                              to live or if the token is older than
                                              24 hours.Defaults to 1 hour and must
                                              be at least 10 minutes.
                                            format: int64
                                            type: integer
                                          path:
                                            description: path is the path relative
                                              to the mount point of the file to project
                                              the token into.
                                            type: string
                                        required:
                                        - path
                                        type: object
                                    type: object
                                  type: array
                              type: object
                            secret:
                              description: 'secret represents a secret that should
                                populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                              properties:
                                defaultMode:
                                  description: 'defaultMode is Optional: mode bits
                                    used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or
                                    a decimal value between 0 and 511. YAML accepts
                                    both octal and decimal values, JSON requires decimal
                                    values for mode bits. Defaults to 0644. Directories
                                    within the path are not affected by this setting.
                                    This might be in conflict with other options that
                                    affect the file mode, like fsGroup, and the result
                                    can be other mode bits set.'
                                  format: int32
                                  type: integer
                                items:
                                  description: items If unspecified, each key-value
                                    pair in the Data field of the referenced Secret
                                    will be projected into the volume as a file whose
                                    name is the key and content is the value. If specified,
                                    the listed keys will be projected into the specified
                                    paths, and unlisted keys will not be present.
                                    If a key is specified which is not present in
                                    the Secret, the volume setup will error unless
                                    it is marked optional. Paths must be relative
                                    and may not contain the '..' path or start with
                                    '..'.
                                  items:
                                    description: Maps a string key to a path within
                                      a volume.
                                    properties:
                                      key:
                                        description: key is the key to project.
                                        type: string
                                      mode:
                                        description: 'mode is Optional: mode bits
                                          used to set permissions on this file. Must
                                          be an octal value between 0000 and 0777
                                          or a decimal value between 0 and 511. YAML
                                          accepts both octal and decimal values, JSON
                                          requires decimal values for mode bits. If
                                          not specified, the volume defaultMode will
                                          be used. This might be in conflict with
                                          other options that affect the file mode,
                                          like fsGroup, and the result can be other
                                          mode bits set.'
                                        format: int32
                                        type: integer
                                      path:
                                        description: path is the relative path of
                                          the file to map the key to. May not be an
                                          absolute path. May not contain the path
                                          element '..'. May not start with the string
                                          '..'.
                                        type: string
                                    required:
                                    - key
                                    - path
                                    type: object
                                  type: array
                                optional:
                                  description: optional field specify whether the
                                    Secret or its keys must be defined
                                  type: boolean
                                secretName:
                                  description: 'secretName is the name of the secret
                                    in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                    required:
                    - containers
                    type: object
                  status:
                    description: RevisionStatus communicates the observed state of
                      the Revision (from the controller).
                    properties:
                      actualReplicas:
                        description: ActualReplicas reflects the amount of ready pods
                          running this revision.
                        format: int32
                        type: integer
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      containerStatuses:
                        description: 'ContainerStatuses is a slice of images present
                          in .Spec.Container[*].Image to their respective digests
                          and their container name. The digests are resolved during
                          the creation of Revision. ContainerStatuses holds the container
                          name and image digests for both serving and non serving
                          containers. ref: http://bit.ly/image-digests'
                        items:
                          description: ContainerStatus holds the information of container
                            name and image digest value
                          properties:
                            imageDigest:
                              type: string
                            name:
                              type: string
                          type: object
                        type: array
                      desiredReplicas:
                        description: DesiredReplicas reflects the desired amount of
                          pods running this revision.
                        format: int32
                        type: integer
                      initContainerStatuses:
                        description: 'InitContainerStatuses is a slice of images present
                          in .Spec.InitContainer[*].Image to their respective digests
                          and their container name. The digests are resolved during
                          the creation of Revision. ContainerStatuses holds the container
                          name and image digests for both serving and non serving
                          containers. ref: http://bit.ly/image-digests'
                        items:
                          description: ContainerStatus holds the information of container
                            name and image digest value
                          properties:
                            imageDigest:
                              type: string
                            name:
                              type: string
                          type: object
                        type: array
                      logUrl:
                        description: LogURL specifies the generated logging url for
                          this particular revision based on the revision url template
                          specified in the controller's config.
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            duck.knative.dev/addressable: "true"
            knative.dev/crd-install: "true"
          name: routes.serving.knative.dev
        spec:
          group: serving.knative.dev
          names:
            categories:
            - all
            - knative
            - serving
            kind: Route
            plural: routes
            shortNames:
            - rt
            singular: route
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.url
              name: URL
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].reason
              name: Reason
              type: string
            name: v1
            schema:
              openAPIV3Schema:
                description: 'Route is responsible for configuring ingress over a
                  collection of Revisions. Some of the Revisions a Route distributes
                  traffic over may be specified by referencing the Configuration responsible
                  for creating them; in these cases the Route is additionally responsible
                  for monitoring the Configuration for "latest ready revision" changes,
                  and smoothly rolling out latest revisions. See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#route'
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: Spec holds the desired state of the Route (from the
                      client).
                    properties:
                      traffic:
                        description: Traffic specifies how to distribute traffic over
                          a collection of revisions and configurations.
                        items:
                          description: TrafficTarget holds a single entry of the routing
                            table for a Route.
                          properties:
                            configurationName:
                              description: ConfigurationName of a configuration to
                                whose latest revision we will send this portion of
                                traffic. When the "status.latestReadyRevisionName"
                                of the referenced configuration changes, we will automatically
                                migrate traffic from the prior "latest ready" revision
                                to the new one.  This field is never set in Route's
                                status, only its spec.  This is mutually exclusive
                                with RevisionName.
                              type: string
                            latestRevision:
                              description: LatestRevision may be optionally provided
                                to indicate that the latest ready Revision of the
                                Configuration should be used for this traffic target.  When
                                provided LatestRevision must be true if RevisionName
                                is empty; it must be false when RevisionName is non-empty.
                              type: boolean
                            percent:
                              description: 'Percent indicates that percentage based
                                routing should be used and the value indicates the
                                percent of traffic that is be routed to this Revision
                                or Configuration. `0` (zero) mean no traffic, `100`
                                means all traffic. When percentage based routing is
                                being used the follow rules apply: - the sum of all
                                percent values must equal 100 - when not specified,
                                the implied value for `percent` is zero for that particular
                                Revision or Configuration'
                              format: int64
                              type: integer
                            revisionName:
                              description: RevisionName of a specific revision to
                                which to send this portion of traffic.  This is mutually
                                exclusive with ConfigurationName.
                              type: string
                            tag:
                              description: Tag is optionally used to expose a dedicated
                                url for referencing this target exclusively.
                              type: string
                            url:
                              description: URL displays the URL for accessing named
                                traffic targets. URL is displayed in status, and is
                                disallowed on spec. URL must contain a scheme (e.g.
                                http://) and a hostname, but may not contain anything
                                else (e.g. basic auth, url path, etc.)
                              type: string
                          type: object
                        type: array
                    type: object
                  status:
                    description: Status communicates the observed state of the Route
                      (from the controller).
                    properties:
                      address:
                        description: Address holds the information needed for a Route
                          to be the target of an event.
                        properties:
                          url:
                            type: string
                        type: object
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                      traffic:
                        description: Traffic holds the configured traffic distribution.
                          These entries will always contain RevisionName references.
                          When ConfigurationName appears in the spec, this will hold
                          the LatestReadyRevisionName that we last observed.
                        items:
                          description: TrafficTarget holds a single entry of the routing
                            table for a Route.
                          properties:
                            configurationName:
                              description: ConfigurationName of a configuration to
                                whose latest revision we will send this portion of
                                traffic. When the "status.latestReadyRevisionName"
                                of the referenced configuration changes, we will automatically
                                migrate traffic from the prior "latest ready" revision
                                to the new one.  This field is never set in Route's
                                status, only its spec.  This is mutually exclusive
                                with RevisionName.
                              type: string
                            latestRevision:
                              description: LatestRevision may be optionally provided
                                to indicate that the latest ready Revision of the
                                Configuration should be used for this traffic target.  When
                                provided LatestRevision must be true if RevisionName
                                is empty; it must be false when RevisionName is non-empty.
                              type: boolean
                            percent:
                              description: 'Percent indicates that percentage based
                                routing should be used and the value indicates the
                                percent of traffic that is be routed to this Revision
                                or Configuration. `0` (zero) mean no traffic, `100`
                                means all traffic. When percentage based routing is
                                being used the follow rules apply: - the sum of all
                                percent values must equal 100 - when not specified,
                                the implied value for `percent` is zero for that particular
                                Revision or Configuration'
                              format: int64
                              type: integer
                            revisionName:
                              description: RevisionName of a specific revision to
                                which to send this portion of traffic.  This is mutually
                                exclusive with ConfigurationName.
                              type: string
                            tag:
                              description: Tag is optionally used to expose a dedicated
                                url for referencing this target exclusively.
                              type: string
                            url:
                              description: URL displays the URL for accessing named
                                traffic targets. URL is displayed in status, and is
                                disallowed on spec. URL must contain a scheme (e.g.
                                http://) and a hostname, but may not contain anything
                                else (e.g. basic auth, url path, etc.)
                              type: string
                          type: object
                        type: array
                      url:
                        description: URL holds the url that will distribute traffic
                          over the provided traffic targets. It generally has the
                          form http[s]://{route-name}.{route-namespace}.{cluster-level-suffix}
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/component: networking
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            knative.dev/crd-install: "true"
          name: serverlessservices.networking.internal.knative.dev
        spec:
          group: networking.internal.knative.dev
          names:
            categories:
            - knative-internal
            - networking
            kind: ServerlessService
            plural: serverlessservices
            shortNames:
            - sks
            singular: serverlessservice
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .spec.mode
              name: Mode
              type: string
            - jsonPath: .spec.numActivators
              name: Activators
              type: integer
            - jsonPath: .status.serviceName
              name: ServiceName
              type: string
            - jsonPath: .status.privateServiceName
              name: PrivateServiceName
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].reason
              name: Reason
              type: string
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: 'ServerlessService is a proxy for the K8s service objects
                  containing the endpoints for the revision, whether those are endpoints
                  of the activator or revision pods. See: https://knative.page.link/naxz
                  for details.'
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: 'Spec is the desired state of the ServerlessService.
                      More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      mode:
                        description: Mode describes the mode of operation of the ServerlessService.
                        type: string
                      numActivators:
                        description: NumActivators contains number of Activators that
                          this revision should be assigned. O means — assign all.
                        format: int32
                        type: integer
                      objectRef:
                        description: ObjectRef defines the resource that this ServerlessService
                          is responsible for making "serverless".
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      protocolType:
                        description: The application-layer protocol. Matches `RevisionProtocolType`
                          set on the owning pa/revision. serving imports networking,
                          so just use string.
                        type: string
                    required:
                    - objectRef
                    - protocolType
                    type: object
                  status:
                    description: 'Status is the current state of the ServerlessService.
                      More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                      privateServiceName:
                        description: PrivateServiceName holds the name of a core K8s
                          Service resource that load balances over the user service
                          pods backing this Revision.
                        type: string
                      serviceName:
                        description: ServiceName holds the name of a core K8s Service
                          resource that load balances over the pods backing this Revision
                          (activator or revision).
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          labels:
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            duck.knative.dev/addressable: "true"
            duck.knative.dev/podspecable: "true"
            knative.dev/crd-install: "true"
          name: services.serving.knative.dev
        spec:
          group: serving.knative.dev
          names:
            categories:
            - all
            - knative
            - serving
            kind: Service
            plural: services
            shortNames:
            - kservice
            - ksvc
            singular: service
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .status.url
              name: URL
              type: string
            - jsonPath: .status.latestCreatedRevisionName
              name: LatestCreated
              type: string
            - jsonPath: .status.latestReadyRevisionName
              name: LatestReady
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].status
              name: Ready
              type: string
            - jsonPath: .status.conditions[?(@.type=='Ready')].reason
              name: Reason
              type: string
            name: v1
            schema:
              openAPIV3Schema:
                description: "Service acts as a top-level container that manages a
                  Route and Configuration which implement a network service. Service
                  exists to provide a singular abstraction which can be access controlled,
                  reasoned about, and which encapsulates software lifecycle decisions
                  such as rollout policy and team resource ownership. Service acts
                  only as an orchestrator of the underlying Routes and Configurations
                  (much as a kubernetes Deployment orchestrates ReplicaSets), and
                  its usage is optional but recommended. \n The Service's controller
                  will track the statuses of its owned Configuration and Route, reflecting
                  their statuses and conditions as its own. \n See also: https://github.com/knative/serving/blob/main/docs/spec/overview.md#service"
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ServiceSpec represents the configuration for the
                      Service object. A Service's specification is the union of the
                      specifications for a Route and Configuration.  The Service restricts
                      what can be expressed in these fields, e.g. the Route must reference
                      the provided Configuration; however, these limitations also
                      enable friendlier defaulting, e.g. Route never needs a Configuration
                      name, and may be defaulted to the appropriate "run latest" spec.
                    properties:
                      template:
                        description: Template holds the latest specification for the
                          Revision to be stamped out.
                        properties:
                          metadata:
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                              finalizers:
                                items:
                                  type: string
                                type: array
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          spec:
                            description: RevisionSpec holds the desired state of the
                              Revision (from the client).
                            properties:
                              affinity:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-affinity
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              automountServiceAccountToken:
                                description: AutomountServiceAccountToken indicates
                                  whether a service account token should be automatically
                                  mounted.
                                type: boolean
                              containerConcurrency:
                                description: ContainerConcurrency specifies the maximum
                                  allowed in-flight (concurrent) requests per container
                                  of the Revision.  Defaults to `0` which means concurrency
                                  to the application is not limited, and the system
                                  decides the target concurrency for the autoscaler.
                                format: int64
                                type: integer
                              containers:
                                description: List of containers belonging to the pod.
                                  Containers cannot currently be added or removed.
                                  There must be at least one container in a Pod. Cannot
                                  be updated.
                                items:
                                  description: A single application container that
                                    you want to run within a pod.
                                  properties:
                                    args:
                                      description: 'Arguments to the entrypoint. The
                                        container image''s CMD is used if this is
                                        not provided. Variable references $(VAR_NAME)
                                        are expanded using the container''s environment.
                                        If a variable cannot be resolved, the reference
                                        in the input string will be unchanged. Double
                                        $$ are reduced to a single $, which allows
                                        for escaping the $(VAR_NAME) syntax: i.e.
                                        "$$(VAR_NAME)" will produce the string literal
                                        "$(VAR_NAME)". Escaped references will never
                                        be expanded, regardless of whether the variable
                                        exists or not. Cannot be updated. More info:
                                        https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    command:
                                      description: 'Entrypoint array. Not executed
                                        within a shell. The container image''s ENTRYPOINT
                                        is used if this is not provided. Variable
                                        references $(VAR_NAME) are expanded using
                                        the container''s environment. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                      items:
                                        type: string
                                      type: array
                                    env:
                                      description: List of environment variables to
                                        set in the container. Cannot be updated.
                                      items:
                                        description: EnvVar represents an environment
                                          variable present in a Container.
                                        properties:
                                          name:
                                            description: Name of the environment variable.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: 'Variable references $(VAR_NAME)
                                              are expanded using the previously defined
                                              environment variables in the container
                                              and any service environment variables.
                                              If a variable cannot be resolved, the
                                              reference in the input string will be
                                              unchanged. Double $$ are reduced to
                                              a single $, which allows for escaping
                                              the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                              will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded,
                                              regardless of whether the variable exists
                                              or not. Defaults to "".'
                                            type: string
                                          valueFrom:
                                            description: Source for the environment
                                              variable's value. Cannot be used if
                                              value is not empty.
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      ConfigMap or its key must be
                                                      defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: This is accessible behind
                                                  a feature flag - kubernetes.podspec-fieldref
                                                type: object
                                                x-kubernetes-map-type: atomic
                                                x-kubernetes-preserve-unknown-fields: true
                                              resourceFieldRef:
                                                description: This is accessible behind
                                                  a feature flag - kubernetes.podspec-fieldref
                                                type: object
                                                x-kubernetes-map-type: atomic
                                                x-kubernetes-preserve-unknown-fields: true
                                              secretKeyRef:
                                                description: Selects a key of a secret
                                                  in the pod's namespace
                                                properties:
                                                  key:
                                                    description: The key of the secret
                                                      to select from.  Must be a valid
                                                      secret key.
                                                    type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: Specify whether the
                                                      Secret or its key must be defined
                                                    type: boolean
                                                required:
                                                - key
                                                type: object
                                                x-kubernetes-map-type: atomic
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    envFrom:
                                      description: List of sources to populate environment
                                        variables in the container. The keys defined
                                        within a source must be a C_IDENTIFIER. All
                                        invalid keys will be reported as an event
                                        when the container is starting. When a key
                                        exists in multiple sources, the value associated
                                        with the last source will take precedence.
                                        Values defined by an Env with a duplicate
                                        key will take precedence. Cannot be updated.
                                      items:
                                        description: EnvFromSource represents the
                                          source of a set of ConfigMaps
                                        properties:
                                          configMapRef:
                                            description: The ConfigMap to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          prefix:
                                            description: An optional identifier to
                                              prepend to each key in the ConfigMap.
                                              Must be a C_IDENTIFIER.
                                            type: string
                                          secretRef:
                                            description: The Secret to select from
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  must be defined
                                                type: boolean
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                      type: array
                                    image:
                                      description: 'Container image name. More info:
                                        https://kubernetes.io/docs/concepts/containers/images
                                        This field is optional to allow higher level
                                        config management to default or override container
                                        images in workload controllers like Deployments
                                        and StatefulSets.'
                                      type: string
                                    imagePullPolicy:
                                      description: 'Image pull policy. One of Always,
                                        Never, IfNotPresent. Defaults to Always if
                                        :latest tag is specified, or IfNotPresent
                                        otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                      type: string
                                    livenessProbe:
                                      description: 'Periodic probe of container liveness.
                                        Container will be restarted if the probe fails.
                                        Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          type: object
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    name:
                                      description: Name of the container specified
                                        as a DNS_LABEL. Each container in a pod must
                                        have a unique name (DNS_LABEL). Cannot be
                                        updated.
                                      type: string
                                    ports:
                                      description: List of ports to expose from the
                                        container. Not specifying a port here DOES
                                        NOT prevent that port from being exposed.
                                        Any port which is listening on the default
                                        "0.0.0.0" address inside a container will
                                        be accessible from the network. Modifying
                                        this array with strategic merge patch may
                                        corrupt the data. For more information See
                                        https://github.com/kubernetes/kubernetes/issues/108255.
                                        Cannot be updated.
                                      items:
                                        description: ContainerPort represents a network
                                          port in a single container.
                                        properties:
                                          containerPort:
                                            description: Number of port to expose
                                              on the pod's IP address. This must be
                                              a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          name:
                                            description: If specified, this must be
                                              an IANA_SVC_NAME and unique within the
                                              pod. Each named port in a pod must have
                                              a unique name. Name for the port that
                                              can be referred to by services.
                                            type: string
                                          protocol:
                                            default: TCP
                                            description: Protocol for port. Must be
                                              UDP, TCP, or SCTP. Defaults to "TCP".
                                            type: string
                                        required:
                                        - containerPort
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - containerPort
                                      - protocol
                                      x-kubernetes-list-type: map
                                    readinessProbe:
                                      description: 'Periodic probe of container service
                                        readiness. Container will be removed from
                                        service endpoints if the probe fails. Cannot
                                        be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        failureThreshold:
                                          description: Minimum consecutive failures
                                            for the probe to be considered failed
                                            after having succeeded. Defaults to 3.
                                            Minimum value is 1.
                                          format: int32
                                          type: integer
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          type: object
                                        initialDelaySeconds:
                                          description: 'Number of seconds after the
                                            container has started before liveness
                                            probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                        periodSeconds:
                                          description: How often (in seconds) to perform
                                            the probe.
                                          format: int32
                                          type: integer
                                        successThreshold:
                                          description: Minimum consecutive successes
                                            for the probe to be considered successful
                                            after having failed. Defaults to 1. Must
                                            be 1 for liveness and startup. Minimum
                                            value is 1.
                                          format: int32
                                          type: integer
                                        tcpSocket:
                                          description: TCPSocket specifies an action
                                            involving a TCP port.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          type: object
                                        timeoutSeconds:
                                          description: 'Number of seconds after which
                                            the probe times out. Defaults to 1 second.
                                            Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                          format: int32
                                          type: integer
                                      type: object
                                    resources:
                                      description: 'Compute Resources required by
                                        this container. Cannot be updated. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                    securityContext:
                                      description: 'SecurityContext defines the security
                                        options the container should be run with.
                                        If set, the fields of SecurityContext override
                                        the equivalent fields of PodSecurityContext.
                                        More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                      properties:
                                        allowPrivilegeEscalation:
                                          description: 'AllowPrivilegeEscalation controls
                                            whether a process can gain more privileges
                                            than its parent process. This bool directly
                                            controls if the no_new_privs flag will
                                            be set on the container process. AllowPrivilegeEscalation
                                            is true always when the container is:
                                            1) run as Privileged 2) has CAP_SYS_ADMIN
                                            Note that this field cannot be set when
                                            spec.os.name is windows.'
                                          type: boolean
                                        capabilities:
                                          description: The capabilities to add/drop
                                            when running containers. Defaults to the
                                            default set of capabilities granted by
                                            the container runtime. Note that this
                                            field cannot be set when spec.os.name
                                            is windows.
                                          properties:
                                            add:
                                              description: This is accessible behind
                                                a feature flag - kubernetes.containerspec-addcapabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                            drop:
                                              description: Removed capabilities
                                              items:
                                                description: Capability represent
                                                  POSIX capabilities type
                                                type: string
                                              type: array
                                          type: object
                                        readOnlyRootFilesystem:
                                          description: Whether this container has
                                            a read-only root filesystem. Default is
                                            false. Note that this field cannot be
                                            set when spec.os.name is windows.
                                          type: boolean
                                        runAsGroup:
                                          description: The GID to run the entrypoint
                                            of the container process. Uses runtime
                                            default if unset. May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: Indicates that the container
                                            must run as a non-root user. If true,
                                            the Kubelet will validate the image at
                                            runtime to ensure that it does not run
                                            as UID 0 (root) and fail to start the
                                            container if it does. If unset or false,
                                            no such validation will be performed.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: The UID to run the entrypoint
                                            of the container process. Defaults to
                                            user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext.  If
                                            set in both SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence. Note that this field
                                            cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                      type: object
                                    terminationMessagePath:
                                      description: 'Optional: Path at which the file
                                        to which the container''s termination message
                                        will be written is mounted into the container''s
                                        filesystem. Message written is intended to
                                        be brief final status, such as an assertion
                                        failure message. Will be truncated by the
                                        node if greater than 4096 bytes. The total
                                        message length across all containers will
                                        be limited to 12kb. Defaults to /dev/termination-log.
                                        Cannot be updated.'
                                      type: string
                                    terminationMessagePolicy:
                                      description: Indicate how the termination message
                                        should be populated. File will use the contents
                                        of terminationMessagePath to populate the
                                        container status message on both success and
                                        failure. FallbackToLogsOnError will use the
                                        last chunk of container log output if the
                                        termination message file is empty and the
                                        container exited with an error. The log output
                                        is limited to 2048 bytes or 80 lines, whichever
                                        is smaller. Defaults to File. Cannot be updated.
                                      type: string
                                    volumeMounts:
                                      description: Pod volumes to mount into the container's
                                        filesystem. Cannot be updated.
                                      items:
                                        description: VolumeMount describes a mounting
                                          of a Volume within a container.
                                        properties:
                                          mountPath:
                                            description: Path within the container
                                              at which the volume should be mounted.  Must
                                              not contain ':'.
                                            type: string
                                          name:
                                            description: This must match the Name
                                              of a Volume.
                                            type: string
                                          readOnly:
                                            description: Mounted read-only if true,
                                              read-write otherwise (false or unspecified).
                                              Defaults to false.
                                            type: boolean
                                          subPath:
                                            description: Path within the volume from
                                              which the container's volume should
                                              be mounted. Defaults to "" (volume's
                                              root).
                                            type: string
                                        required:
                                        - mountPath
                                        - name
                                        type: object
                                      type: array
                                    workingDir:
                                      description: Container's working directory.
                                        If not specified, the container runtime's
                                        default will be used, which might be configured
                                        in the container image. Cannot be updated.
                                      type: string
                                  type: object
                                type: array
                              dnsConfig:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-dnsconfig
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              dnsPolicy:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-dnspolicy
                                type: string
                              enableServiceLinks:
                                description: 'EnableServiceLinks indicates whether
                                  information about services should be injected into
                                  pod''s environment variables, matching the syntax
                                  of Docker links. Optional: Knative defaults this
                                  to false.'
                                type: boolean
                              hostAliases:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-hostaliases
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-hostaliases
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              idleTimeoutSeconds:
                                description: IdleTimeoutSeconds is the maximum duration
                                  in seconds a request will be allowed to stay open
                                  while not receiving any bytes from the user's application.
                                  If unspecified, a system default will be provided.
                                format: int64
                                type: integer
                              imagePullSecrets:
                                description: 'ImagePullSecrets is an optional list
                                  of references to secrets in the same namespace to
                                  use for pulling any of the images used by this PodSpec.
                                  If specified, these secrets will be passed to individual
                                  puller implementations for them to use. More info:
                                  https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                items:
                                  description: LocalObjectReference contains enough
                                    information to let you locate the referenced object
                                    inside the same namespace.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                              initContainers:
                                description: 'List of initialization containers belonging
                                  to the pod. Init containers are executed in order
                                  prior to containers being started. If any init container
                                  fails, the pod is considered to have failed and
                                  is handled according to its restartPolicy. The name
                                  for an init container or normal container must be
                                  unique among all containers. Init containers may
                                  not have Lifecycle actions, Readiness probes, Liveness
                                  probes, or Startup probes. The resourceRequirements
                                  of an init container are taken into account during
                                  scheduling by finding the highest request/limit
                                  for each resource type, and then using the max of
                                  of that value or the sum of the normal containers.
                                  Limits are applied to init containers in a similar
                                  fashion. Init containers cannot currently be added
                                  or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-init-containers
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              nodeSelector:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-nodeselector
                                type: object
                                x-kubernetes-map-type: atomic
                                x-kubernetes-preserve-unknown-fields: true
                              priorityClassName:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-priorityclassname
                                type: string
                                x-kubernetes-preserve-unknown-fields: true
                              responseStartTimeoutSeconds:
                                description: ResponseStartTimeoutSeconds is the maximum
                                  duration in seconds that the request routing layer
                                  will wait for a request delivered to a container
                                  to begin sending any network traffic.
                                format: int64
                                type: integer
                              runtimeClassName:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-runtimeclassname
                                type: string
                                x-kubernetes-preserve-unknown-fields: true
                              schedulerName:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-schedulername
                                type: string
                                x-kubernetes-preserve-unknown-fields: true
                              securityContext:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-securitycontext
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              serviceAccountName:
                                description: 'ServiceAccountName is the name of the
                                  ServiceAccount to use to run this pod. More info:
                                  https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                type: string
                              timeoutSeconds:
                                description: TimeoutSeconds is the maximum duration
                                  in seconds that the request instance is allowed
                                  to respond to a request. If unspecified, a system
                                  default will be provided.
                                format: int64
                                type: integer
                              tolerations:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-tolerations
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-tolerations
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              topologySpreadConstraints:
                                description: This is accessible behind a feature flag
                                  - kubernetes.podspec-topologyspreadconstraints
                                items:
                                  description: This is accessible behind a feature
                                    flag - kubernetes.podspec-topologyspreadconstraints
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                type: array
                              volumes:
                                description: 'List of volumes that can be mounted
                                  by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                                items:
                                  description: Volume represents a named volume in
                                    a pod that may be accessed by any container in
                                    the pod.
                                  properties:
                                    configMap:
                                      description: configMap represents a configMap
                                        that should populate this volume
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items if unspecified, each
                                            key-value pair in the Data field of the
                                            referenced ConfigMap will be projected
                                            into the volume as a file whose name is
                                            the key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the ConfigMap,
                                            the volume setup will error unless it
                                            is marked optional. Paths must be relative
                                            and may not contain the '..' path or start
                                            with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: optional specify whether the
                                            ConfigMap or its keys must be defined
                                          type: boolean
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    emptyDir:
                                      description: This is accessible behind a feature
                                        flag - kubernetes.podspec-emptydir
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    name:
                                      description: 'name of the volume. Must be a
                                        DNS_LABEL and unique within the pod. More
                                        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                    persistentVolumeClaim:
                                      description: This is accessible behind a feature
                                        flag - kubernetes.podspec-persistent-volume-claim
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    projected:
                                      description: projected items for all in one
                                        resources secrets, configmaps, and downward
                                        API
                                      properties:
                                        defaultMode:
                                          description: defaultMode are the mode bits
                                            used to set permissions on created files
                                            by default. Must be an octal value between
                                            0000 and 0777 or a decimal value between
                                            0 and 511. YAML accepts both octal and
                                            decimal values, JSON requires decimal
                                            values for mode bits. Directories within
                                            the path are not affected by this setting.
                                            This might be in conflict with other options
                                            that affect the file mode, like fsGroup,
                                            and the result can be other mode bits
                                            set.
                                          format: int32
                                          type: integer
                                        sources:
                                          description: sources is the list of volume
                                            projections
                                          items:
                                            description: Projection that may be projected
                                              along with other supported volume types
                                            properties:
                                              configMap:
                                                description: configMap information
                                                  about the configMap data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced ConfigMap
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the ConfigMap, the volume
                                                      setup will error unless it is
                                                      marked optional. Paths must
                                                      be relative and may not contain
                                                      the '..' path or start with
                                                      '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: optional specify
                                                      whether the ConfigMap or its
                                                      keys must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              secret:
                                                description: secret information about
                                                  the secret data to project
                                                properties:
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced Secret
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the Secret, the volume setup
                                                      will error unless it is marked
                                                      optional. Paths must be relative
                                                      and may not contain the '..'
                                                      path or start with '..'.
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                      required:
                                                      - key
                                                      - path
                                                      type: object
                                                    type: array
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: optional field specify
                                                      whether the Secret or its key
                                                      must be defined
                                                    type: boolean
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              serviceAccountToken:
                                                description: serviceAccountToken is
                                                  information about the serviceAccountToken
                                                  data to project
                                                properties:
                                                  audience:
                                                    description: audience is the intended
                                                      audience of the token. A recipient
                                                      of a token must identify itself
                                                      with an identifier specified
                                                      in the audience of the token,
                                                      and otherwise should reject
                                                      the token. The audience defaults
                                                      to the identifier of the apiserver.
                                                    type: string
                                                  expirationSeconds:
                                                    description: expirationSeconds
                                                      is the requested duration of
                                                      validity of the service account
                                                      token. As the token approaches
                                                      expiration, the kubelet volume
                                                      plugin will proactively rotate
                                                      the service account token. The
                                                      kubelet will start trying to
                                                      rotate the token if the token
                                                      is older than 80 percent of
                                                      its time to live or if the token
                                                      is older than 24 hours.Defaults
                                                      to 1 hour and must be at least
                                                      10 minutes.
                                                    format: int64
                                                    type: integer
                                                  path:
                                                    description: path is the path
                                                      relative to the mount point
                                                      of the file to project the token
                                                      into.
                                                    type: string
                                                required:
                                                - path
                                                type: object
                                            type: object
                                          type: array
                                      type: object
                                    secret:
                                      description: 'secret represents a secret that
                                        should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      properties:
                                        defaultMode:
                                          description: 'defaultMode is Optional: mode
                                            bits used to set permissions on created
                                            files by default. Must be an octal value
                                            between 0000 and 0777 or a decimal value
                                            between 0 and 511. YAML accepts both octal
                                            and decimal values, JSON requires decimal
                                            values for mode bits. Defaults to 0644.
                                            Directories within the path are not affected
                                            by this setting. This might be in conflict
                                            with other options that affect the file
                                            mode, like fsGroup, and the result can
                                            be other mode bits set.'
                                          format: int32
                                          type: integer
                                        items:
                                          description: items If unspecified, each
                                            key-value pair in the Data field of the
                                            referenced Secret will be projected into
                                            the volume as a file whose name is the
                                            key and content is the value. If specified,
                                            the listed keys will be projected into
                                            the specified paths, and unlisted keys
                                            will not be present. If a key is specified
                                            which is not present in the Secret, the
                                            volume setup will error unless it is marked
                                            optional. Paths must be relative and may
                                            not contain the '..' path or start with
                                            '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: key is the key to project.
                                                type: string
                                              mode:
                                                description: 'mode is Optional: mode
                                                  bits used to set permissions on
                                                  this file. Must be an octal value
                                                  between 0000 and 0777 or a decimal
                                                  value between 0 and 511. YAML accepts
                                                  both octal and decimal values, JSON
                                                  requires decimal values for mode
                                                  bits. If not specified, the volume
                                                  defaultMode will be used. This might
                                                  be in conflict with other options
                                                  that affect the file mode, like
                                                  fsGroup, and the result can be other
                                                  mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: path is the relative
                                                  path of the file to map the key
                                                  to. May not be an absolute path.
                                                  May not contain the path element
                                                  '..'. May not start with the string
                                                  '..'.
                                                type: string
                                            required:
                                            - key
                                            - path
                                            type: object
                                          type: array
                                        optional:
                                          description: optional field specify whether
                                            the Secret or its keys must be defined
                                          type: boolean
                                        secretName:
                                          description: 'secretName is the name of
                                            the secret in the pod''s namespace to
                                            use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                            required:
                            - containers
                            type: object
                        type: object
                      traffic:
                        description: Traffic specifies how to distribute traffic over
                          a collection of revisions and configurations.
                        items:
                          description: TrafficTarget holds a single entry of the routing
                            table for a Route.
                          properties:
                            configurationName:
                              description: ConfigurationName of a configuration to
                                whose latest revision we will send this portion of
                                traffic. When the "status.latestReadyRevisionName"
                                of the referenced configuration changes, we will automatically
                                migrate traffic from the prior "latest ready" revision
                                to the new one.  This field is never set in Route's
                                status, only its spec.  This is mutually exclusive
                                with RevisionName.
                              type: string
                            latestRevision:
                              description: LatestRevision may be optionally provided
                                to indicate that the latest ready Revision of the
                                Configuration should be used for this traffic target.  When
                                provided LatestRevision must be true if RevisionName
                                is empty; it must be false when RevisionName is non-empty.
                              type: boolean
                            percent:
                              description: 'Percent indicates that percentage based
                                routing should be used and the value indicates the
                                percent of traffic that is be routed to this Revision
                                or Configuration. `0` (zero) mean no traffic, `100`
                                means all traffic. When percentage based routing is
                                being used the follow rules apply: - the sum of all
                                percent values must equal 100 - when not specified,
                                the implied value for `percent` is zero for that particular
                                Revision or Configuration'
                              format: int64
                              type: integer
                            revisionName:
                              description: RevisionName of a specific revision to
                                which to send this portion of traffic.  This is mutually
                                exclusive with ConfigurationName.
                              type: string
                            tag:
                              description: Tag is optionally used to expose a dedicated
                                url for referencing this target exclusively.
                              type: string
                            url:
                              description: URL displays the URL for accessing named
                                traffic targets. URL is displayed in status, and is
                                disallowed on spec. URL must contain a scheme (e.g.
                                http://) and a hostname, but may not contain anything
                                else (e.g. basic auth, url path, etc.)
                              type: string
                          type: object
                        type: array
                    type: object
                  status:
                    description: ServiceStatus represents the Status stanza of the
                      Service resource.
                    properties:
                      address:
                        description: Address holds the information needed for a Route
                          to be the target of an event.
                        properties:
                          url:
                            type: string
                        type: object
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations is additional Status fields for the
                          Resource to save some additional State as well as convey
                          more information to the user. This is roughly akin to Annotations
                          on any k8s resource, just the reconciler conveying richer
                          information outwards.
                        type: object
                      conditions:
                        description: Conditions the latest available observations
                          of a resource's current state.
                        items:
                          description: 'Condition defines a readiness condition for
                            a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                We use VolatileTime in place of metav1.Time to exclude
                                this from creating equality.Semantic differences (all
                                other things held constant).
                              type: string
                            message:
                              description: A human readable message indicating details
                                about the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            severity:
                              description: Severity with which to treat failures of
                                this type of condition. When this is not specified,
                                it defaults to Error.
                              type: string
                            status:
                              description: Status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: Type of condition.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      latestCreatedRevisionName:
                        description: LatestCreatedRevisionName is the last revision
                          that was created from this Configuration. It might not be
                          ready yet, for that use LatestReadyRevisionName.
                        type: string
                      latestReadyRevisionName:
                        description: LatestReadyRevisionName holds the name of the
                          latest Revision stamped out from this Configuration that
                          has had its "Ready" condition become "True".
                        type: string
                      observedGeneration:
                        description: ObservedGeneration is the 'Generation' of the
                          Service that was last processed by the controller.
                        format: int64
                        type: integer
                      traffic:
                        description: Traffic holds the configured traffic distribution.
                          These entries will always contain RevisionName references.
                          When ConfigurationName appears in the spec, this will hold
                          the LatestReadyRevisionName that we last observed.
                        items:
                          description: TrafficTarget holds a single entry of the routing
                            table for a Route.
                          properties:
                            configurationName:
                              description: ConfigurationName of a configuration to
                                whose latest revision we will send this portion of
                                traffic. When the "status.latestReadyRevisionName"
                                of the referenced configuration changes, we will automatically
                                migrate traffic from the prior "latest ready" revision
                                to the new one.  This field is never set in Route's
                                status, only its spec.  This is mutually exclusive
                                with RevisionName.
                              type: string
                            latestRevision:
                              description: LatestRevision may be optionally provided
                                to indicate that the latest ready Revision of the
                                Configuration should be used for this traffic target.  When
                                provided LatestRevision must be true if RevisionName
                                is empty; it must be false when RevisionName is non-empty.
                              type: boolean
                            percent:
                              description: 'Percent indicates that percentage based
                                routing should be used and the value indicates the
                                percent of traffic that is be routed to this Revision
                                or Configuration. `0` (zero) mean no traffic, `100`
                                means all traffic. When percentage based routing is
                                being used the follow rules apply: - the sum of all
                                percent values must equal 100 - when not specified,
                                the implied value for `percent` is zero for that particular
                                Revision or Configuration'
                              format: int64
                              type: integer
                            revisionName:
                              description: RevisionName of a specific revision to
                                which to send this portion of traffic.  This is mutually
                                exclusive with ConfigurationName.
                              type: string
                            tag:
                              description: Tag is optionally used to expose a dedicated
                                url for referencing this target exclusively.
                              type: string
                            url:
                              description: URL displays the URL for accessing named
                                traffic targets. URL is displayed in status, and is
                                disallowed on spec. URL must contain a scheme (e.g.
                                http://) and a hostname, but may not contain anything
                                else (e.g. basic auth, url path, etc.)
                              type: string
                          type: object
                        type: array
                      url:
                        description: URL holds the url that will distribute traffic
                          over the provided traffic targets. It generally has the
                          form http[s]://{route-name}.{route-namespace}.{cluster-level-suffix}
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: v1
        kind: Secret
        metadata:
          name: serving-certs-ctrl-ca
          namespace: knative-serving
      - apiVersion: v1
        kind: Secret
        metadata:
          labels:
            networking.internal.knative.dev/certificate-uid: serving-certs
            serving-certs-ctrl: data-plane
          name: knative-serving-certs
          namespace: knative-serving
      - apiVersion: caching.internal.knative.dev/v1alpha1
        kind: Image
        metadata:
          labels:
            app.kubernetes.io/component: queue-proxy
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: queue-proxy
          namespace: knative-serving
        spec:
          image: gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:f78383554ed81895ff230217f3e0ce9bf9ff2048d4303cc9fb36342ac3f470b3
      - apiVersion: v1
        data: {}
        kind: ConfigMap
        metadata:
          annotations:
            knative.dev/example-checksum: 47c2487f
          labels:
            app.kubernetes.io/component: autoscaler
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config-autoscaler
          namespace: knative-serving
      - apiVersion: v1
        data: {}
        kind: ConfigMap
        metadata:
          annotations:
            knative.dev/example-checksum: e7973912
          labels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config-defaults
          namespace: knative-serving
      - apiVersion: v1
        data:
          queue-sidecar-image: gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:f78383554ed81895ff230217f3e0ce9bf9ff2048d4303cc9fb36342ac3f470b3
        kind: ConfigMap
        metadata:
          annotations:
            knative.dev/example-checksum: dd7ee769
          labels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config-deployment
          namespace: knative-serving
      - apiVersion: v1
        data:
          local.gd: ""
        kind: ConfigMap
        metadata:
          annotations:
            knative.dev/example-checksum: 26c09de5
          labels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config-domain
          namespace: knative-serving
      - apiVersion: v1
        data: {}
        kind: ConfigMap
        metadata:
          annotations:
            knative.dev/example-checksum: 691a192e
          labels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config-features
          namespace: knative-serving
      - apiVersion: v1
        data: {}
        kind: ConfigMap
        metadata:
          annotations:
            knative.dev/example-checksum: aa3813a8
          labels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config-gc
          namespace: knative-serving
      - apiVersion: v1
        data: {}
        kind: ConfigMap
        metadata:
          annotations:
            knative.dev/example-checksum: f4b71f57
          labels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config-leader-election
          namespace: knative-serving
      - apiVersion: v1
        data: {}
        kind: ConfigMap
        metadata:
          annotations:
            knative.dev/example-checksum: b0f3c6f2
          labels:
            app.kubernetes.io/component: logging
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config-logging
          namespace: knative-serving
      - apiVersion: v1
        data:
          ingress-class: kourier.ingress.networking.knative.dev
        kind: ConfigMap
        metadata:
          annotations:
            knative.dev/example-checksum: 73d96d1b
          labels:
            app.kubernetes.io/component: networking
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config-network
          namespace: knative-serving
      - apiVersion: v1
        data: {}
        kind: ConfigMap
        metadata:
          annotations:
            knative.dev/example-checksum: fed4756e
          labels:
            app.kubernetes.io/component: observability
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config-observability
          namespace: knative-serving
      - apiVersion: v1
        data: {}
        kind: ConfigMap
        metadata:
          annotations:
            knative.dev/example-checksum: "26614636"
          labels:
            app.kubernetes.io/component: tracing
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config-tracing
          namespace: knative-serving
      - apiVersion: autoscaling/v2
        kind: HorizontalPodAutoscaler
        metadata:
          labels:
            app.kubernetes.io/component: activator
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: activator
          namespace: knative-serving
        spec:
          maxReplicas: 20
          metrics:
          - resource:
              name: cpu
              target:
                averageUtilization: 100
                type: Utilization
            type: Resource
          minReplicas: 1
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: activator
      - apiVersion: policy/v1
        kind: PodDisruptionBudget
        metadata:
          labels:
            app.kubernetes.io/component: activator
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: activator-pdb
          namespace: knative-serving
        spec:
          minAvailable: 80%
          selector:
            matchLabels:
              app: activator
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/component: activator
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: activator
          namespace: knative-serving
        spec:
          selector:
            matchLabels:
              app: activator
              role: activator
          template:
            metadata:
              annotations:
                cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
              labels:
                app: activator
                app.kubernetes.io/component: activator
                app.kubernetes.io/name: knative-serving
                app.kubernetes.io/version: 1.8.3
                role: activator
            spec:
              containers:
              - env:
                - name: GOGC
                  value: "500"
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CONFIG_LOGGING_NAME
                  value: config-logging
                - name: CONFIG_OBSERVABILITY_NAME
                  value: config-observability
                - name: METRICS_DOMAIN
                  value: knative.dev/internal/serving
                image: gcr.io/knative-releases/knative.dev/serving/cmd/activator@sha256:24c6c8de9a6872ca796a13d1e8324a4dd250aacc5094975b60ce235122abb97f
                livenessProbe:
                  failureThreshold: 12
                  httpGet:
                    httpHeaders:
                    - name: k-kubelet-probe
                      value: activator
                    port: 8012
                  initialDelaySeconds: 15
                  periodSeconds: 10
                name: activator
                ports:
                - containerPort: 9090
                  name: metrics
                - containerPort: 8008
                  name: profiling
                - containerPort: 8012
                  name: http1
                - containerPort: 8013
                  name: h2c
                readinessProbe:
                  failureThreshold: 5
                  httpGet:
                    httpHeaders:
                    - name: k-kubelet-probe
                      value: activator
                    port: 8012
                  periodSeconds: 5
                resources:
                  limits:
                    cpu: 1000m
                    memory: 600Mi
                  requests:
                    cpu: 300m
                    memory: 60Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  seccompProfile:
                    type: RuntimeDefault
              serviceAccountName: controller
              terminationGracePeriodSeconds: 600
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app: activator
            app.kubernetes.io/component: activator
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: activator-service
          namespace: knative-serving
        spec:
          ports:
          - name: http-metrics
            port: 9090
            targetPort: 9090
          - name: http-profiling
            port: 8008
            targetPort: 8008
          - name: http
            port: 80
            targetPort: 8012
          - name: http2
            port: 81
            targetPort: 8013
          - name: https
            port: 443
            targetPort: 8112
          selector:
            app: activator
          type: ClusterIP
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/component: autoscaler
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: autoscaler
          namespace: knative-serving
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: autoscaler
          strategy:
            rollingUpdate:
              maxUnavailable: 0
            type: RollingUpdate
          template:
            metadata:
              annotations:
                cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
              labels:
                app: autoscaler
                app.kubernetes.io/component: autoscaler
                app.kubernetes.io/name: knative-serving
                app.kubernetes.io/version: 1.8.3
            spec:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app: autoscaler
                      topologyKey: kubernetes.io/hostname
                    weight: 100
              containers:
              - env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CONFIG_LOGGING_NAME
                  value: config-logging
                - name: CONFIG_OBSERVABILITY_NAME
                  value: config-observability
                - name: METRICS_DOMAIN
                  value: knative.dev/serving
                image: gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler@sha256:f26a8b516112413cbba4244b36202354d1c98ed209301b255c55958213708a78
                livenessProbe:
                  failureThreshold: 6
                  httpGet:
                    httpHeaders:
                    - name: k-kubelet-probe
                      value: autoscaler
                    port: 8080
                name: autoscaler
                ports:
                - containerPort: 9090
                  name: metrics
                - containerPort: 8008
                  name: profiling
                - containerPort: 8080
                  name: websocket
                readinessProbe:
                  httpGet:
                    httpHeaders:
                    - name: k-kubelet-probe
                      value: autoscaler
                    port: 8080
                resources:
                  limits:
                    cpu: 1000m
                    memory: 1000Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  seccompProfile:
                    type: RuntimeDefault
              serviceAccountName: controller
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app: autoscaler
            app.kubernetes.io/component: autoscaler
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: autoscaler
          namespace: knative-serving
        spec:
          ports:
          - name: http-metrics
            port: 9090
            targetPort: 9090
          - name: http-profiling
            port: 8008
            targetPort: 8008
          - name: http
            port: 8080
            targetPort: 8080
          selector:
            app: autoscaler
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: controller
          namespace: knative-serving
        spec:
          selector:
            matchLabels:
              app: controller
          template:
            metadata:
              annotations:
                cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
              labels:
                app: controller
                app.kubernetes.io/component: controller
                app.kubernetes.io/name: knative-serving
                app.kubernetes.io/version: 1.8.3
            spec:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app: controller
                      topologyKey: kubernetes.io/hostname
                    weight: 100
              containers:
              - env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CONFIG_LOGGING_NAME
                  value: config-logging
                - name: CONFIG_OBSERVABILITY_NAME
                  value: config-observability
                - name: METRICS_DOMAIN
                  value: knative.dev/internal/serving
                image: gcr.io/knative-releases/knative.dev/serving/cmd/controller@sha256:ea48ea2f2433cc7e5c25940e79465ca7226750260faaa1724b95dd8cfac92034
                name: controller
                ports:
                - containerPort: 9090
                  name: metrics
                - containerPort: 8008
                  name: profiling
                resources:
                  limits:
                    cpu: 1000m
                    memory: 1000Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  seccompProfile:
                    type: RuntimeDefault
              serviceAccountName: controller
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app: controller
            app.kubernetes.io/component: controller
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: controller
          namespace: knative-serving
        spec:
          ports:
          - name: http-metrics
            port: 9090
            targetPort: 9090
          - name: http-profiling
            port: 8008
            targetPort: 8008
          selector:
            app: controller
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/component: domain-mapping
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: domain-mapping
          namespace: knative-serving
        spec:
          selector:
            matchLabels:
              app: domain-mapping
          template:
            metadata:
              annotations:
                cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
              labels:
                app: domain-mapping
                app.kubernetes.io/component: domain-mapping
                app.kubernetes.io/name: knative-serving
                app.kubernetes.io/version: 1.8.3
            spec:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app: domain-mapping
                      topologyKey: kubernetes.io/hostname
                    weight: 100
              containers:
              - env:
                - name: SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CONFIG_LOGGING_NAME
                  value: config-logging
                - name: CONFIG_OBSERVABILITY_NAME
                  value: config-observability
                - name: METRICS_DOMAIN
                  value: knative.dev/serving
                image: gcr.io/knative-releases/knative.dev/serving/cmd/domain-mapping@sha256:9197c51406208c8f3cc98c2b1f69ed2ba8b88e11cf765616700abecc5dd18350
                name: domain-mapping
                ports:
                - containerPort: 9090
                  name: metrics
                - containerPort: 8008
                  name: profiling
                resources:
                  limits:
                    cpu: 300m
                    memory: 400Mi
                  requests:
                    cpu: 30m
                    memory: 40Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  seccompProfile:
                    type: RuntimeDefault
              serviceAccountName: controller
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/component: domain-mapping
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: domainmapping-webhook
          namespace: knative-serving
        spec:
          selector:
            matchLabels:
              app: domainmapping-webhook
              role: domainmapping-webhook
          template:
            metadata:
              annotations:
                cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
              labels:
                app: domainmapping-webhook
                app.kubernetes.io/component: domain-mapping
                app.kubernetes.io/name: knative-serving
                app.kubernetes.io/version: 1.8.3
                role: domainmapping-webhook
            spec:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app: domainmapping-webhook
                      topologyKey: kubernetes.io/hostname
                    weight: 100
              containers:
              - env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CONFIG_LOGGING_NAME
                  value: config-logging
                - name: CONFIG_OBSERVABILITY_NAME
                  value: config-observability
                - name: WEBHOOK_PORT
                  value: "8443"
                - name: METRICS_DOMAIN
                  value: knative.dev/serving
                image: gcr.io/knative-releases/knative.dev/serving/cmd/domain-mapping-webhook@sha256:1b6e7f382c878f8ac168ce36a92f1af4dbdac0f61aae9e73fe899486786a4bbf
                livenessProbe:
                  failureThreshold: 6
                  httpGet:
                    httpHeaders:
                    - name: k-kubelet-probe
                      value: webhook
                    port: 8443
                    scheme: HTTPS
                  initialDelaySeconds: 20
                  periodSeconds: 1
                name: domainmapping-webhook
                ports:
                - containerPort: 9090
                  name: metrics
                - containerPort: 8008
                  name: profiling
                - containerPort: 8443
                  name: https-webhook
                readinessProbe:
                  httpGet:
                    httpHeaders:
                    - name: k-kubelet-probe
                      value: webhook
                    port: 8443
                    scheme: HTTPS
                  periodSeconds: 1
                resources:
                  limits:
                    cpu: 500m
                    memory: 500Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  seccompProfile:
                    type: RuntimeDefault
              serviceAccountName: controller
              terminationGracePeriodSeconds: 300
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/component: domain-mapping
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            role: domainmapping-webhook
          name: domainmapping-webhook
          namespace: knative-serving
        spec:
          ports:
          - name: http-metrics
            port: 9090
            targetPort: 9090
          - name: http-profiling
            port: 8008
            targetPort: 8008
          - name: https-webhook
            port: 443
            targetPort: 8443
          selector:
            role: domainmapping-webhook
      - apiVersion: autoscaling/v2
        kind: HorizontalPodAutoscaler
        metadata:
          labels:
            app.kubernetes.io/component: webhook
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: webhook
          namespace: knative-serving
        spec:
          maxReplicas: 5
          metrics:
          - resource:
              name: cpu
              target:
                averageUtilization: 100
                type: Utilization
            type: Resource
          minReplicas: 1
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: webhook
      - apiVersion: policy/v1
        kind: PodDisruptionBudget
        metadata:
          labels:
            app.kubernetes.io/component: webhook
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: webhook-pdb
          namespace: knative-serving
        spec:
          minAvailable: 80%
          selector:
            matchLabels:
              app: webhook
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/component: webhook
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: webhook
          namespace: knative-serving
        spec:
          selector:
            matchLabels:
              app: webhook
              role: webhook
          template:
            metadata:
              annotations:
                cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
              labels:
                app: webhook
                app.kubernetes.io/name: knative-serving
                app.kubernetes.io/version: 1.8.3
                role: webhook
            spec:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app: webhook
                      topologyKey: kubernetes.io/hostname
                    weight: 100
              containers:
              - env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: SYSTEM_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CONFIG_LOGGING_NAME
                  value: config-logging
                - name: CONFIG_OBSERVABILITY_NAME
                  value: config-observability
                - name: WEBHOOK_NAME
                  value: webhook
                - name: WEBHOOK_PORT
                  value: "8443"
                - name: METRICS_DOMAIN
                  value: knative.dev/internal/serving
                image: gcr.io/knative-releases/knative.dev/serving/cmd/webhook@sha256:e271d46b5168e25e9742f6f33a461cfcdc17b2460d4355fff7fe0c71fc1e4378
                livenessProbe:
                  failureThreshold: 6
                  httpGet:
                    httpHeaders:
                    - name: k-kubelet-probe
                      value: webhook
                    port: 8443
                    scheme: HTTPS
                  initialDelaySeconds: 20
                  periodSeconds: 1
                name: webhook
                ports:
                - containerPort: 9090
                  name: metrics
                - containerPort: 8008
                  name: profiling
                - containerPort: 8443
                  name: https-webhook
                readinessProbe:
                  httpGet:
                    httpHeaders:
                    - name: k-kubelet-probe
                      value: webhook
                    port: 8443
                    scheme: HTTPS
                  periodSeconds: 1
                resources:
                  limits:
                    cpu: 500m
                    memory: 500Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  seccompProfile:
                    type: RuntimeDefault
              serviceAccountName: controller
              terminationGracePeriodSeconds: 300
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/component: webhook
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
            role: webhook
          name: webhook
          namespace: knative-serving
        spec:
          ports:
          - name: http-metrics
            port: 9090
            targetPort: 9090
          - name: http-profiling
            port: 8008
            targetPort: 8008
          - name: https-webhook
            port: 443
            targetPort: 8443
          selector:
            role: webhook
      - apiVersion: admissionregistration.k8s.io/v1
        kind: ValidatingWebhookConfiguration
        metadata:
          labels:
            app.kubernetes.io/component: webhook
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: config.webhook.serving.knative.dev
        webhooks:
        - admissionReviewVersions:
          - v1
          - v1beta1
          clientConfig:
            service:
              name: webhook
              namespace: knative-serving
          failurePolicy: Fail
          name: config.webhook.serving.knative.dev
          objectSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - knative-serving
            - key: app.kubernetes.io/component
              operator: In
              values:
              - autoscaler
              - controller
              - logging
              - networking
              - observability
              - tracing
          sideEffects: None
          timeoutSeconds: 10
      - apiVersion: admissionregistration.k8s.io/v1
        kind: MutatingWebhookConfiguration
        metadata:
          labels:
            app.kubernetes.io/component: webhook
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: webhook.serving.knative.dev
        webhooks:
        - admissionReviewVersions:
          - v1
          - v1beta1
          clientConfig:
            service:
              name: webhook
              namespace: knative-serving
          failurePolicy: Fail
          name: webhook.serving.knative.dev
          rules:
          - apiGroups:
            - autoscaling.internal.knative.dev
            - networking.internal.knative.dev
            - serving.knative.dev
            apiVersions:
            - '*'
            operations:
            - CREATE
            - UPDATE
            resources:
            - metrics
            - podautoscalers
            - certificates
            - ingresses
            - serverlessservices
            - configurations
            - revisions
            - routes
            - services
            scope: '*'
          sideEffects: None
          timeoutSeconds: 10
      - apiVersion: admissionregistration.k8s.io/v1
        kind: MutatingWebhookConfiguration
        metadata:
          labels:
            app.kubernetes.io/component: domain-mapping
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: webhook.domainmapping.serving.knative.dev
        webhooks:
        - admissionReviewVersions:
          - v1
          - v1beta1
          clientConfig:
            service:
              name: domainmapping-webhook
              namespace: knative-serving
          failurePolicy: Fail
          name: webhook.domainmapping.serving.knative.dev
          rules:
          - apiGroups:
            - serving.knative.dev
            apiVersions:
            - '*'
            operations:
            - CREATE
            - UPDATE
            resources:
            - domainmappings
            - domainmappings/status
            scope: '*'
          sideEffects: None
          timeoutSeconds: 10
      - apiVersion: v1
        kind: Secret
        metadata:
          labels:
            app.kubernetes.io/component: domain-mapping
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: domainmapping-webhook-certs
          namespace: knative-serving
      - apiVersion: admissionregistration.k8s.io/v1
        kind: ValidatingWebhookConfiguration
        metadata:
          labels:
            app.kubernetes.io/component: domain-mapping
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: validation.webhook.domainmapping.serving.knative.dev
        webhooks:
        - admissionReviewVersions:
          - v1
          - v1beta1
          clientConfig:
            service:
              name: domainmapping-webhook
              namespace: knative-serving
          failurePolicy: Fail
          name: validation.webhook.domainmapping.serving.knative.dev
          rules:
          - apiGroups:
            - serving.knative.dev
            apiVersions:
            - '*'
            operations:
            - CREATE
            - UPDATE
            - DELETE
            resources:
            - domainmappings
            - domainmappings/status
            scope: '*'
          sideEffects: None
          timeoutSeconds: 10
      - apiVersion: admissionregistration.k8s.io/v1
        kind: ValidatingWebhookConfiguration
        metadata:
          labels:
            app.kubernetes.io/component: webhook
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: validation.webhook.serving.knative.dev
        webhooks:
        - admissionReviewVersions:
          - v1
          - v1beta1
          clientConfig:
            service:
              name: webhook
              namespace: knative-serving
          failurePolicy: Fail
          name: validation.webhook.serving.knative.dev
          rules:
          - apiGroups:
            - autoscaling.internal.knative.dev
            - networking.internal.knative.dev
            - serving.knative.dev
            apiVersions:
            - '*'
            operations:
            - CREATE
            - UPDATE
            - DELETE
            resources:
            - metrics
            - podautoscalers
            - certificates
            - ingresses
            - serverlessservices
            - configurations
            - revisions
            - routes
            - services
            scope: '*'
          sideEffects: None
          timeoutSeconds: 10
      - apiVersion: v1
        kind: Secret
        metadata:
          labels:
            app.kubernetes.io/component: webhook
            app.kubernetes.io/name: knative-serving
            app.kubernetes.io/version: 1.8.3
          name: webhook-certs
          namespace: knative-serving
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: knatives.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: knative
            plural: knatives
            singular: knative
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      env:
                        default: dev
                        description: |
                          Configures and deploys this Knative with environment specific configuration.
                          Prod Knative enables application autoscaling using HPA.
                        pattern: ^(dev|prod)$
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - ghcr.io/syntasso/kratix-marketplace/knative-request-pipeline:v0.1.0
    status: {}
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      name: knative-service
      namespace: default
    spec:
      clusterSelector:
        environment: dev
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: knservices.example.promise.syntasso.io
        spec:
          group: example.promise.syntasso.io
          names:
            kind: knservice
            plural: knservices
            singular: knservice
          scope: Namespaced
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      database:
                        properties:
                          host:
                            type: string
                          name:
                            type: string
                          secretKeyRef:
                            type: string
                          user:
                            type: string
                        type: object
                      image:
                        type: string
                      name:
                        type: string
                      port:
                        default: 8080
                        type: number
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - syntasso/kn-service-request-pipeline:v0.1.0
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: postgresql
      namespace: default
    spec:
      clusterSelector:
        environment: dev
      workerClusterResources:
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-pod
        rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
        rules:
        - apiGroups:
          - acid.zalan.do
          resources:
          - postgresqls
          - postgresqls/status
          - operatorconfigurations
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - acid.zalan.do
          resources:
          - postgresteams
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - create
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - update
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/exec
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - statefulsets
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
        - apiGroups:
          - batch
          resources:
          - cronjobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - get
          - create
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - get
          - create
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: postgres-operator
        subjects:
        - kind: ServiceAccount
          name: postgres-operator
          namespace: default
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
        spec:
          ports:
          - port: 8080
            protocol: TCP
            targetPort: 8080
          selector:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/name: postgres-operator
          type: ClusterIP
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: postgres-operator
              app.kubernetes.io/name: postgres-operator
          template:
            metadata:
              annotations:
                checksum/config: 5e43e52b4f2db120d38d4727aadf7071bc5a3249e01f3ca89ed2c65b1fe4e227
              labels:
                app.kubernetes.io/instance: postgres-operator
                app.kubernetes.io/name: postgres-operator
            spec:
              affinity: {}
              containers:
              - env:
                - name: POSTGRES_OPERATOR_CONFIGURATION_OBJECT
                  value: postgres-operator
                image: registry.opensource.zalan.do/acid/postgres-operator:v1.8.2-43-g3e148ea5
                imagePullPolicy: IfNotPresent
                name: postgres-operator
                resources:
                  limits:
                    cpu: 500m
                    memory: 500Mi
                  requests:
                    cpu: 100m
                    memory: 250Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  runAsUser: 1000
              nodeSelector: {}
              serviceAccountName: postgres-operator
              tolerations: []
      - apiVersion: acid.zalan.do/v1
        configuration:
          aws_or_gcp:
            aws_region: eu-central-1
            enable_ebs_gp3_migration: false
          connection_pooler:
            connection_pooler_default_cpu_limit: "1"
            connection_pooler_default_cpu_request: 500m
            connection_pooler_default_memory_limit: 100Mi
            connection_pooler_default_memory_request: 100Mi
            connection_pooler_image: registry.opensource.zalan.do/acid/pgbouncer:master-22
            connection_pooler_max_db_connections: 60
            connection_pooler_mode: transaction
            connection_pooler_number_of_instances: 2
            connection_pooler_schema: pooler
            connection_pooler_user: pooler
          crd_categories:
          - all
          debug:
            debug_logging: true
            enable_database_access: true
          docker_image: registry.opensource.zalan.do/acid/spilo-14:2.1-p6
          enable_crd_registration: true
          enable_lazy_spilo_upgrade: false
          enable_pgversion_env_var: true
          enable_shm_volume: true
          enable_spilo_wal_path_compat: false
          etcd_host: ""
          kubernetes:
            cluster_domain: cluster.local
            cluster_labels:
              application: spilo
            cluster_name_label: cluster-name
            enable_cross_namespace_secret: false
            enable_init_containers: true
            enable_pod_antiaffinity: false
            enable_pod_disruption_budget: true
            enable_sidecars: true
            oauth_token_secret_name: postgres-operator
            pdb_name_format: postgres-{cluster}-pdb
            pod_antiaffinity_topology_key: kubernetes.io/hostname
            pod_management_policy: ordered_ready
            pod_role_label: spilo-role
            pod_service_account_name: postgres-pod
            pod_terminate_grace_period: 5m
            secret_name_template: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
            spilo_allow_privilege_escalation: true
            spilo_privileged: false
            storage_resize_mode: pvc
            watched_namespace: '*'
          load_balancer:
            db_hosted_zone: db.example.com
            enable_master_load_balancer: false
            enable_master_pooler_load_balancer: false
            enable_replica_load_balancer: false
            enable_replica_pooler_load_balancer: false
            external_traffic_policy: Cluster
            master_dns_name_format: '{cluster}.{team}.{hostedzone}'
            replica_dns_name_format: '{cluster}-repl.{team}.{hostedzone}'
          logging_rest_api:
            api_port: 8080
            cluster_history_entries: 1000
            ring_log_lines: 100
          logical_backup:
            logical_backup_docker_image: registry.opensource.zalan.do/acid/logical-backup:v1.8.0
            logical_backup_job_prefix: logical-backup-
            logical_backup_provider: s3
            logical_backup_s3_access_key_id: ""
            logical_backup_s3_bucket: my-bucket-url
            logical_backup_s3_endpoint: ""
            logical_backup_s3_region: ""
            logical_backup_s3_retention_time: ""
            logical_backup_s3_secret_access_key: ""
            logical_backup_s3_sse: AES256
            logical_backup_schedule: 30 00 * * *
          major_version_upgrade:
            major_version_upgrade_mode: "off"
            minimal_major_version: "9.6"
            target_major_version: "14"
          max_instances: -1
          min_instances: -1
          postgres_pod_resources:
            default_cpu_limit: "1"
            default_cpu_request: 100m
            default_memory_limit: 500Mi
            default_memory_request: 100Mi
            min_cpu_limit: 250m
            min_memory_limit: 250Mi
          repair_period: 5m
          resync_period: 30m
          teams_api:
            enable_admin_role_for_users: true
            enable_postgres_team_crd: false
            enable_postgres_team_crd_superusers: false
            enable_team_member_deprecation: false
            enable_team_superuser: false
            enable_teams_api: false
            pam_role_name: zalandos
            postgres_superuser_teams:
            - postgres_superusers
            protected_role_names:
            - admin
            - cron_admin
            role_deletion_suffix: _deleted
            team_admin_role: admin
            team_api_role_configuration:
              log_statement: all
          timeouts:
            patroni_api_check_interval: 1s
            patroni_api_check_timeout: 5s
            pod_deletion_wait_timeout: 10m
            pod_label_wait_timeout: 10m
            ready_wait_interval: 3s
            ready_wait_timeout: 30s
            resource_check_interval: 3s
            resource_check_timeout: 10m
          users:
            enable_password_rotation: false
            password_rotation_interval: 90
            password_rotation_user_retention: 180
            replication_username: standby
            super_username: postgres
          workers: 8
        kind: OperatorConfiguration
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: operatorconfigurations.acid.zalan.do
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: OperatorConfiguration
            listKind: OperatorConfigurationList
            plural: operatorconfigurations
            shortNames:
            - opconfig
            singular: operatorconfiguration
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Spilo image to be used for Pods
              jsonPath: .configuration.docker_image
              name: Image
              type: string
            - description: Label for K8s resources created by operator
              jsonPath: .configuration.kubernetes.cluster_name_label
              name: Cluster-Label
              type: string
            - description: Name of service account to be used
              jsonPath: .configuration.kubernetes.pod_service_account_name
              name: Service-Account
              type: string
            - description: Minimum number of instances per Postgres cluster
              jsonPath: .configuration.min_instances
              name: Min-Instances
              type: integer
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  configuration:
                    properties:
                      aws_or_gcp:
                        properties:
                          additional_secret_mount:
                            type: string
                          additional_secret_mount_path:
                            default: /meta/credentials
                            type: string
                          aws_region:
                            default: eu-central-1
                            type: string
                          enable_ebs_gp3_migration:
                            default: false
                            type: boolean
                          enable_ebs_gp3_migration_max_size:
                            default: 1000
                            type: integer
                          gcp_credentials:
                            type: string
                          kube_iam_role:
                            type: string
                          log_s3_bucket:
                            type: string
                          wal_az_storage_account:
                            type: string
                          wal_gs_bucket:
                            type: string
                          wal_s3_bucket:
                            type: string
                        type: object
                      connection_pooler:
                        properties:
                          connection_pooler_default_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          connection_pooler_default_cpu_request:
                            default: 500m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          connection_pooler_default_memory_limit:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          connection_pooler_default_memory_request:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          connection_pooler_image:
                            default: registry.opensource.zalan.do/acid/pgbouncer:master-24
                            type: string
                          connection_pooler_max_db_connections:
                            default: 60
                            type: integer
                          connection_pooler_mode:
                            default: transaction
                            enum:
                            - session
                            - transaction
                            type: string
                          connection_pooler_number_of_instances:
                            default: 2
                            minimum: 1
                            type: integer
                          connection_pooler_schema:
                            default: pooler
                            type: string
                          connection_pooler_user:
                            default: pooler
                            type: string
                        type: object
                      crd_categories:
                        items:
                          type: string
                        nullable: true
                        type: array
                      debug:
                        properties:
                          debug_logging:
                            default: true
                            type: boolean
                          enable_database_access:
                            default: true
                            type: boolean
                        type: object
                      docker_image:
                        default: registry.opensource.zalan.do/acid/spilo-14:2.1-p7
                        type: string
                      enable_crd_registration:
                        default: true
                        type: boolean
                      enable_crd_validation:
                        default: true
                        description: deprecated
                        type: boolean
                      enable_lazy_spilo_upgrade:
                        default: false
                        type: boolean
                      enable_pgversion_env_var:
                        default: true
                        type: boolean
                      enable_shm_volume:
                        default: true
                        type: boolean
                      enable_spilo_wal_path_compat:
                        default: false
                        type: boolean
                      enable_team_id_clustername_prefix:
                        default: false
                        type: boolean
                      etcd_host:
                        default: ""
                        type: string
                      ignore_instance_limits_annotation_key:
                        type: string
                      kubernetes:
                        properties:
                          additional_pod_capabilities:
                            items:
                              type: string
                            type: array
                          cluster_domain:
                            default: cluster.local
                            type: string
                          cluster_labels:
                            additionalProperties:
                              type: string
                            default:
                              application: spilo
                            type: object
                          cluster_name_label:
                            default: cluster-name
                            type: string
                          custom_pod_annotations:
                            additionalProperties:
                              type: string
                            type: object
                          delete_annotation_date_key:
                            type: string
                          delete_annotation_name_key:
                            type: string
                          downscaler_annotations:
                            items:
                              type: string
                            type: array
                          enable_cross_namespace_secret:
                            default: false
                            type: boolean
                          enable_init_containers:
                            default: true
                            type: boolean
                          enable_pod_antiaffinity:
                            default: false
                            type: boolean
                          enable_pod_disruption_budget:
                            default: true
                            type: boolean
                          enable_readiness_probe:
                            default: false
                            type: boolean
                          enable_sidecars:
                            default: true
                            type: boolean
                          ignored_annotations:
                            items:
                              type: string
                            type: array
                          infrastructure_roles_secret_name:
                            type: string
                          infrastructure_roles_secrets:
                            items:
                              properties:
                                defaultrolevalue:
                                  type: string
                                defaultuservalue:
                                  type: string
                                details:
                                  type: string
                                passwordkey:
                                  type: string
                                rolekey:
                                  type: string
                                secretname:
                                  type: string
                                template:
                                  type: boolean
                                userkey:
                                  type: string
                              required:
                              - secretname
                              - userkey
                              - passwordkey
                              type: object
                            nullable: true
                            type: array
                          inherited_annotations:
                            items:
                              type: string
                            type: array
                          inherited_labels:
                            items:
                              type: string
                            type: array
                          master_pod_move_timeout:
                            default: 20m
                            type: string
                          node_readiness_label:
                            additionalProperties:
                              type: string
                            type: object
                          node_readiness_label_merge:
                            enum:
                            - AND
                            - OR
                            type: string
                          oauth_token_secret_name:
                            default: postgresql-operator
                            type: string
                          pdb_name_format:
                            default: postgres-{cluster}-pdb
                            type: string
                          pod_antiaffinity_topology_key:
                            default: kubernetes.io/hostname
                            type: string
                          pod_environment_configmap:
                            type: string
                          pod_environment_secret:
                            type: string
                          pod_management_policy:
                            default: ordered_ready
                            enum:
                            - ordered_ready
                            - parallel
                            type: string
                          pod_priority_class_name:
                            type: string
                          pod_role_label:
                            default: spilo-role
                            type: string
                          pod_service_account_definition:
                            default: ""
                            type: string
                          pod_service_account_name:
                            default: postgres-pod
                            type: string
                          pod_service_account_role_binding_definition:
                            default: ""
                            type: string
                          pod_terminate_grace_period:
                            default: 5m
                            type: string
                          secret_name_template:
                            default: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
                            type: string
                          spilo_allow_privilege_escalation:
                            default: true
                            type: boolean
                          spilo_fsgroup:
                            type: integer
                          spilo_privileged:
                            default: false
                            type: boolean
                          spilo_runasgroup:
                            type: integer
                          spilo_runasuser:
                            type: integer
                          storage_resize_mode:
                            default: pvc
                            enum:
                            - ebs
                            - mixed
                            - pvc
                            - "off"
                            type: string
                          toleration:
                            additionalProperties:
                              type: string
                            type: object
                          watched_namespace:
                            type: string
                        type: object
                      kubernetes_use_configmaps:
                        default: false
                        type: boolean
                      load_balancer:
                        properties:
                          custom_service_annotations:
                            additionalProperties:
                              type: string
                            type: object
                          db_hosted_zone:
                            default: db.example.com
                            type: string
                          enable_master_load_balancer:
                            default: true
                            type: boolean
                          enable_master_pooler_load_balancer:
                            default: false
                            type: boolean
                          enable_replica_load_balancer:
                            default: false
                            type: boolean
                          enable_replica_pooler_load_balancer:
                            default: false
                            type: boolean
                          external_traffic_policy:
                            default: Cluster
                            enum:
                            - Cluster
                            - Local
                            type: string
                          master_dns_name_format:
                            default: '{cluster}.{namespace}.{hostedzone}'
                            type: string
                          replica_dns_name_format:
                            default: '{cluster}-repl.{namespace}.{hostedzone}'
                            type: string
                        type: object
                      logging_rest_api:
                        properties:
                          api_port:
                            default: 8080
                            type: integer
                          cluster_history_entries:
                            default: 1000
                            type: integer
                          ring_log_lines:
                            default: 100
                            type: integer
                        type: object
                      logical_backup:
                        properties:
                          logical_backup_docker_image:
                            default: registry.opensource.zalan.do/acid/logical-backup:v1.8.2
                            type: string
                          logical_backup_google_application_credentials:
                            type: string
                          logical_backup_job_prefix:
                            default: logical-backup-
                            type: string
                          logical_backup_provider:
                            default: s3
                            type: string
                          logical_backup_s3_access_key_id:
                            type: string
                          logical_backup_s3_bucket:
                            type: string
                          logical_backup_s3_endpoint:
                            type: string
                          logical_backup_s3_region:
                            type: string
                          logical_backup_s3_retention_time:
                            type: string
                          logical_backup_s3_secret_access_key:
                            type: string
                          logical_backup_s3_sse:
                            type: string
                          logical_backup_schedule:
                            default: 30 00 * * *
                            pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                            type: string
                        type: object
                      major_version_upgrade:
                        properties:
                          major_version_upgrade_mode:
                            default: "off"
                            type: string
                          major_version_upgrade_team_allow_list:
                            items:
                              type: string
                            type: array
                          minimal_major_version:
                            default: "11"
                            type: string
                          target_major_version:
                            default: "14"
                            type: string
                        type: object
                      max_instances:
                        default: -1
                        description: -1 = disabled
                        minimum: -1
                        type: integer
                      min_instances:
                        default: -1
                        description: -1 = disabled
                        minimum: -1
                        type: integer
                      patroni:
                        properties:
                          failsafe_mode:
                            default: false
                            type: boolean
                        type: object
                      postgres_pod_resources:
                        properties:
                          default_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          default_cpu_request:
                            default: 100m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          default_memory_limit:
                            default: 500Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          default_memory_request:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          max_cpu_request:
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          max_memory_request:
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          min_cpu_limit:
                            default: 250m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          min_memory_limit:
                            default: 250Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                        type: object
                      repair_period:
                        default: 5m
                        type: string
                      resync_period:
                        default: 30m
                        type: string
                      scalyr:
                        properties:
                          scalyr_api_key:
                            type: string
                          scalyr_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          scalyr_cpu_request:
                            default: 100m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          scalyr_image:
                            type: string
                          scalyr_memory_limit:
                            default: 500Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          scalyr_memory_request:
                            default: 50Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          scalyr_server_url:
                            default: https://upload.eu.scalyr.com
                            type: string
                        type: object
                      set_memory_request_to_limit:
                        default: false
                        type: boolean
                      sidecar_docker_images:
                        additionalProperties:
                          type: string
                        type: object
                      sidecars:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      teams_api:
                        properties:
                          enable_admin_role_for_users:
                            default: true
                            type: boolean
                          enable_postgres_team_crd:
                            default: true
                            type: boolean
                          enable_postgres_team_crd_superusers:
                            default: false
                            type: boolean
                          enable_team_member_deprecation:
                            default: false
                            type: boolean
                          enable_team_superuser:
                            default: false
                            type: boolean
                          enable_teams_api:
                            default: true
                            type: boolean
                          pam_configuration:
                            default: https://info.example.com/oauth2/tokeninfo?access_token=
                              uid realm=/employees
                            type: string
                          pam_role_name:
                            default: zalandos
                            type: string
                          postgres_superuser_teams:
                            items:
                              type: string
                            type: array
                          protected_role_names:
                            default:
                            - admin
                            - cron_admin
                            items:
                              type: string
                            type: array
                          role_deletion_suffix:
                            default: _deleted
                            type: string
                          team_admin_role:
                            default: admin
                            type: string
                          team_api_role_configuration:
                            additionalProperties:
                              type: string
                            default:
                              log_statement: all
                            type: object
                          teams_api_url:
                            default: https://teams.example.com/api/
                            type: string
                        type: object
                      timeouts:
                        properties:
                          patroni_api_check_interval:
                            default: 1s
                            type: string
                          patroni_api_check_timeout:
                            default: 5s
                            type: string
                          pod_deletion_wait_timeout:
                            default: 10m
                            type: string
                          pod_label_wait_timeout:
                            default: 10m
                            type: string
                          ready_wait_interval:
                            default: 4s
                            type: string
                          ready_wait_timeout:
                            default: 30s
                            type: string
                          resource_check_interval:
                            default: 3s
                            type: string
                          resource_check_timeout:
                            default: 10m
                            type: string
                        type: object
                      users:
                        properties:
                          additional_owner_roles:
                            items:
                              type: string
                            nullable: true
                            type: array
                          enable_password_rotation:
                            default: false
                            type: boolean
                          password_rotation_interval:
                            default: 90
                            type: integer
                          password_rotation_user_retention:
                            default: 180
                            type: integer
                          replication_username:
                            default: standby
                            type: string
                          super_username:
                            default: postgres
                            type: string
                        type: object
                      workers:
                        default: 8
                        minimum: 1
                        type: integer
                    type: object
                  kind:
                    enum:
                    - OperatorConfiguration
                    type: string
                  status:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - kind
                - apiVersion
                - configuration
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresqls.acid.zalan.do
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: postgresql
            listKind: postgresqlList
            plural: postgresqls
            shortNames:
            - pg
            singular: postgresql
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Team responsible for Postgres cluster
              jsonPath: .spec.teamId
              name: Team
              type: string
            - description: PostgreSQL version
              jsonPath: .spec.postgresql.version
              name: Version
              type: string
            - description: Number of Pods per Postgres cluster
              jsonPath: .spec.numberOfInstances
              name: Pods
              type: integer
            - description: Size of the bound volume
              jsonPath: .spec.volume.size
              name: Volume
              type: string
            - description: Requested CPU for Postgres containers
              jsonPath: .spec.resources.requests.cpu
              name: CPU-Request
              type: string
            - description: Requested memory for Postgres containers
              jsonPath: .spec.resources.requests.memory
              name: Memory-Request
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            - description: Current sync status of postgresql resource
              jsonPath: .status.PostgresClusterStatus
              name: Status
              type: string
            name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  kind:
                    enum:
                    - postgresql
                    type: string
                  spec:
                    properties:
                      additionalVolumes:
                        items:
                          properties:
                            mountPath:
                              type: string
                            name:
                              type: string
                            subPath:
                              type: string
                            targetContainers:
                              items:
                                type: string
                              nullable: true
                              type: array
                            volumeSource:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - name
                          - mountPath
                          - volumeSource
                          type: object
                        type: array
                      allowedSourceRanges:
                        items:
                          pattern: ^(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\/(\d|[1-2]\d|3[0-2])$
                          type: string
                        nullable: true
                        type: array
                      clone:
                        properties:
                          cluster:
                            type: string
                          s3_access_key_id:
                            type: string
                          s3_endpoint:
                            type: string
                          s3_force_path_style:
                            type: boolean
                          s3_secret_access_key:
                            type: string
                          s3_wal_path:
                            type: string
                          timestamp:
                            pattern: ^([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(([+-]([01][0-9]|2[0-3]):[0-5][0-9]))$
                            type: string
                          uid:
                            format: uuid
                            type: string
                        required:
                        - cluster
                        type: object
                      connectionPooler:
                        properties:
                          dockerImage:
                            type: string
                          maxDBConnections:
                            type: integer
                          mode:
                            enum:
                            - session
                            - transaction
                            type: string
                          numberOfInstances:
                            minimum: 1
                            type: integer
                          resources:
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                    type: string
                                  memory:
                                    pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                    type: string
                                  memory:
                                    pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                    type: string
                                type: object
                            type: object
                          schema:
                            type: string
                          user:
                            type: string
                        type: object
                      databases:
                        additionalProperties:
                          type: string
                        type: object
                      dockerImage:
                        type: string
                      enableConnectionPooler:
                        type: boolean
                      enableLogicalBackup:
                        type: boolean
                      enableMasterLoadBalancer:
                        type: boolean
                      enableMasterPoolerLoadBalancer:
                        type: boolean
                      enableReplicaConnectionPooler:
                        type: boolean
                      enableReplicaLoadBalancer:
                        type: boolean
                      enableReplicaPoolerLoadBalancer:
                        type: boolean
                      enableShmVolume:
                        type: boolean
                      env:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      init_containers:
                        description: deprecated
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      initContainers:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      logicalBackupSchedule:
                        pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                        type: string
                      maintenanceWindows:
                        items:
                          pattern: ^\ *((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\d):([0-5]?\d)|(2[0-3]|[01]?\d):([0-5]?\d))-((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\d):([0-5]?\d)|(2[0-3]|[01]?\d):([0-5]?\d))\
                            *$
                          type: string
                        type: array
                      nodeAffinity:
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            items:
                              properties:
                                preference:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            properties:
                              nodeSelectorTerms:
                                items:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      numberOfInstances:
                        minimum: 0
                        type: integer
                      patroni:
                        properties:
                          failsafe_mode:
                            type: boolean
                          initdb:
                            additionalProperties:
                              type: string
                            type: object
                          loop_wait:
                            type: integer
                          maximum_lag_on_failover:
                            type: integer
                          pg_hba:
                            items:
                              type: string
                            type: array
                          retry_timeout:
                            type: integer
                          slots:
                            additionalProperties:
                              additionalProperties:
                                type: string
                              type: object
                            type: object
                          synchronous_mode:
                            type: boolean
                          synchronous_mode_strict:
                            type: boolean
                          synchronous_node_count:
                            type: integer
                          ttl:
                            type: integer
                        type: object
                      pod_priority_class_name:
                        description: deprecated
                        type: string
                      podAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      podPriorityClassName:
                        type: string
                      postgresql:
                        properties:
                          parameters:
                            additionalProperties:
                              type: string
                            type: object
                          version:
                            enum:
                            - "10"
                            - "11"
                            - "12"
                            - "13"
                            - "14"
                            - "15"
                            type: string
                        required:
                        - version
                        type: object
                      preparedDatabases:
                        additionalProperties:
                          properties:
                            defaultUsers:
                              type: boolean
                            extensions:
                              additionalProperties:
                                type: string
                              type: object
                            schemas:
                              additionalProperties:
                                properties:
                                  defaultRoles:
                                    type: boolean
                                  defaultUsers:
                                    type: boolean
                                type: object
                              type: object
                            secretNamespace:
                              type: string
                          type: object
                        type: object
                      replicaLoadBalancer:
                        description: deprecated
                        type: boolean
                      resources:
                        properties:
                          limits:
                            properties:
                              cpu:
                                pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                type: string
                              memory:
                                pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                type: string
                            type: object
                          requests:
                            properties:
                              cpu:
                                pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                type: string
                              memory:
                                pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                type: string
                            type: object
                        type: object
                      schedulerName:
                        type: string
                      serviceAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      sidecars:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      spiloFSGroup:
                        type: integer
                      spiloRunAsGroup:
                        type: integer
                      spiloRunAsUser:
                        type: integer
                      standby:
                        oneOf:
                        - required:
                          - s3_wal_path
                        - required:
                          - gs_wal_path
                        - required:
                          - standby_host
                        properties:
                          gs_wal_path:
                            type: string
                          s3_wal_path:
                            type: string
                          standby_host:
                            type: string
                          standby_port:
                            type: string
                        type: object
                      streams:
                        items:
                          properties:
                            applicationId:
                              type: string
                            batchSize:
                              type: integer
                            database:
                              type: string
                            filter:
                              additionalProperties:
                                type: string
                              type: object
                            tables:
                              additionalProperties:
                                properties:
                                  eventType:
                                    type: string
                                  idColumn:
                                    type: string
                                  payloadColumn:
                                    type: string
                                required:
                                - eventType
                                type: object
                              type: object
                          required:
                          - applicationId
                          - database
                          - tables
                          type: object
                        type: array
                      teamId:
                        type: string
                      tls:
                        properties:
                          caFile:
                            type: string
                          caSecretName:
                            type: string
                          certificateFile:
                            type: string
                          privateKeyFile:
                            type: string
                          secretName:
                            type: string
                        required:
                        - secretName
                        type: object
                      tolerations:
                        items:
                          properties:
                            effect:
                              enum:
                              - NoExecute
                              - NoSchedule
                              - PreferNoSchedule
                              type: string
                            key:
                              type: string
                            operator:
                              enum:
                              - Equal
                              - Exists
                              type: string
                            tolerationSeconds:
                              type: integer
                            value:
                              type: string
                          type: object
                        type: array
                      useLoadBalancer:
                        description: deprecated
                        type: boolean
                      users:
                        additionalProperties:
                          items:
                            enum:
                            - bypassrls
                            - BYPASSRLS
                            - nobypassrls
                            - NOBYPASSRLS
                            - createdb
                            - CREATEDB
                            - nocreatedb
                            - NOCREATEDB
                            - createrole
                            - CREATEROLE
                            - nocreaterole
                            - NOCREATEROLE
                            - inherit
                            - INHERIT
                            - noinherit
                            - NOINHERIT
                            - login
                            - LOGIN
                            - nologin
                            - NOLOGIN
                            - replication
                            - REPLICATION
                            - noreplication
                            - NOREPLICATION
                            - superuser
                            - SUPERUSER
                            - nosuperuser
                            - NOSUPERUSER
                            type: string
                          nullable: true
                          type: array
                        type: object
                      usersWithInPlaceSecretRotation:
                        items:
                          type: string
                        nullable: true
                        type: array
                      usersWithSecretRotation:
                        items:
                          type: string
                        nullable: true
                        type: array
                      volume:
                        properties:
                          iops:
                            type: integer
                          selector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      enum:
                                      - DoesNotExist
                                      - Exists
                                      - In
                                      - NotIn
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          size:
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          storageClass:
                            type: string
                          subPath:
                            type: string
                          throughput:
                            type: integer
                        required:
                        - size
                        type: object
                    required:
                    - numberOfInstances
                    - teamId
                    - postgresql
                    - volume
                    type: object
                  status:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - kind
                - apiVersion
                - spec
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresteams.acid.zalan.do
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: PostgresTeam
            listKind: PostgresTeamList
            plural: postgresteams
            shortNames:
            - pgteam
            singular: postgresteam
          scope: Namespaced
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  kind:
                    enum:
                    - PostgresTeam
                    type: string
                  spec:
                    properties:
                      additionalMembers:
                        additionalProperties:
                          description: List of users who will also be added to the
                            Postgres cluster
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional users
                        type: object
                      additionalSuperuserTeams:
                        additionalProperties:
                          description: List of teams to become Postgres superusers
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional superuser
                          teams
                        type: object
                      additionalTeams:
                        additionalProperties:
                          description: List of teams whose members will also be added
                            to the Postgres cluster
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional teams
                        type: object
                    type: object
                required:
                - kind
                - apiVersion
                - spec
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresqls.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: postgresql
            plural: postgresqls
            singular: postgresql
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      dbName:
                        default: postgres
                        description: |
                          Database name. A database will be created with this name. The owner of the database will be the teamId.
                        type: string
                      env:
                        default: dev
                        description: |
                          Configures and deploys this PostgreSQL with environment specific configuration. Prod PostgreSQL are configured with backups and more resources.
                        pattern: ^(dev|prod)$
                        type: string
                      teamId:
                        default: acid
                        description: |
                          Team ID. A superuser role will be created with this name.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - ghcr.io/syntasso/kratix-marketplace/postgresql-request-pipeline:v0.1.0
    status: {}
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      name: slack
      namespace: default
    spec:
      clusterSelector:
        environment: dev
      xaasCrd:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: slacks.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: slack
            plural: slacks
            singular: slack
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      message:
                        description: |
                          The message to be sent
                        type: string
                    required:
                    - message
                    type: object
                type: object
            served: true
            storage: true
      xaasRequestPipeline:
      - ghcr.io/syntasso/kratix-marketplace/slack-request-pipeline:v0.1.0
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: slack-default-promise-pipeline-credentials
    rules:
    - apiGroups:
      - ""
      resourceNames:
      - slack-channel-hook
      resources:
      - secrets
      verbs:
      - get
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: slack-default-promise-pipeline-credentials
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: slack-default-promise-pipeline-credentials
    subjects:
    - kind: ServiceAccount
      name: slack-default-promise-pipeline
      namespace: default
  xaasCrd:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: apps.example.promise.syntasso.io
    spec:
      group: example.promise.syntasso.io
      names:
        kind: app
        plural: apps
        singular: app
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            properties:
              spec:
                properties:
                  dbDriver:
                    default: none
                    description: database deployed with application
                    enum:
                    - postgres
                    - none
                    type: string
                  image:
                    description: container image for application that will be deployed
                    example: gcr.io/syntasso/great-app
                    type: string
                  name:
                    type: string
                  region:
                    default: eu
                    description: region where application will be running
                    enum:
                    - eu
                    - us
                    type: string
                required:
                - name
                - image
                type: object
            type: object
        served: true
        storage: true
  xaasRequestPipeline:
  - syntasso/app-request-pipeline:v0
status: {}
