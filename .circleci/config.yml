version: 2.1

orbs:
  k8s: circleci/kubernetes@1.3.1
  golang: circleci/go@1.7.2

executors:
  machine-medium:
    machine: true
    working_directory: ~/repo
    resource_class: medium
  machine-large:
    machine: true
    working_directory: ~/repo
    resource_class: large

commands:
  docker_login:
    steps:
      - run:
          # https://circleci.com/docs/building-docker-images/#run-docker-commands-using-the-machine-executor
          name: Docker Auth
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
  install_software:
    steps:
      - k8s/install
      - golang/install:
          cache: true
          version: 1.19.5
      - run:
          name: Install Kind
          command: |
            if [ ! -f ~/bin/kind ]; then
              curl -L https://github.com/kubernetes-sigs/kind/releases/download/v0.14.0/kind-linux-amd64 -o ~/bin/kind
              chmod +x ~/bin/kind
            fi
      - run:
          name: Install Flux
          command: |
            curl -L https://github.com/fluxcd/flux2/releases/download/v0.41.2/flux_0.41.2_linux_amd64.tar.gz -o flux.tar.gz
            tar -xvf flux.tar.gz
            mv flux ~/bin/flux
            chmod +x ~/bin/flux
      - attach_workspace:
          at: .
      - run:
          name: Install Dependencies
          command: |
            go mod download
  setup_git:
    steps:
      - run:
          # see https://circleci.com/docs/github-integration#establish-the-authenticity-of-an-ssh-host
          name: setup git
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com > ~/.ssh/known_hosts

            git config --global user.name "syntassodev"
            git config --global user.email "kratix@syntasso.io"

jobs:
  git-clone:
    executor: machine-medium
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .
  unit-tests:
    executor: machine-medium
    steps:
      - install_software
      - run:
          name: Run tests
          command: |
            make test
            make -C work-creator test

  system-tests:
    executor: machine-large
    steps:
      - install_software
      - run:
          name: System tests
          command: |
            DOCKER_BUILDKIT=1 ACK_GINKGO_RC=true make --jobs=4 system-test

  e2e-demo-test:
    executor: machine-large
    steps:
      - install_software
      - run:
          name: Run quick-start script
          command: |
            make distribution
            DOCKER_BUILDKIT=1 make quick-start
      - run:
          name: Verify Jenkins
          command: |
            ./scripts/install-jenkins.sh

  git-merge:
    executor: machine-large
    steps:
      - install_software
      - setup_git
      - run:
          name: Merge dev to main
          command: |
            ./scripts/merge-dev.sh
      - persist_to_workspace:
          root: .
          paths:
            - .

  generate-demo-image-list:
    executor: machine-large
    steps:
      - attach_workspace:
          at: .
      - install_software
      - run:
          name: Generate demo image list
          command: |
            cd ./demo/
            ./scripts/generate-demo-image-list.sh
      - persist_to_workspace:
          root: .
          paths:
            - .

  build-and-push-images:
    executor: machine-large
    parameters:
      image:
        type: string
    steps:
      - attach_workspace:
          at: .
      - docker_login
      - run:
          name: Build and push sample images
          command: |
            ./scripts/build-images << parameters.image >>

  git-push:
    executor: machine-large
    steps:
    - attach_workspace:
        at: .
    - add_ssh_keys:
        # Add github deploy key
        # https://circleci.com/docs/github-integration#create-a-github-deploy-key
        fingerprints:
          - "5e:1e:ea:52:8b:1b:ad:a2:66:1a:40:98:a3:f5:96:f5"
    - setup_git
    - run:
        name: Push main
        command: |
          git add -f config/
          git add -f demo/demo-image-list
          git add -f distribution/kratix.yaml
          git add -f distribution/single-cluster/

          git commit --amend --no-edit
          git push origin main

workflows:
  run-tests:
    jobs:
      - git-clone
      - unit-tests:
          requires: [git-clone]
      - system-tests:
          requires: [git-clone]
      - e2e-demo-test:
          requires: [git-clone]
      - git-merge:
          requires:
            - unit-tests
            - system-tests
            - e2e-demo-test
          filters:
            branches:
              only: dev
      - build-and-push-images:
          requires:
            - git-merge
          matrix:
            parameters:
              image: [kratix, work-creator, samples]
      # - generate-demo-image-list:
      #     requires:
      #       - git-merge
      #       - build-and-push-images
      - git-push:
          requires:
            - build-and-push-images
            # - generate-demo-image-list
