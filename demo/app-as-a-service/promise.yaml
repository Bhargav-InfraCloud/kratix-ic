apiVersion: platform.kratix.io/v1alpha1
kind: Promise
metadata:
  creationTimestamp: null
  name: app-as-a-service
  namespace: default
spec:
  api:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: apps.example.promise.syntasso.io
    spec:
      group: example.promise.syntasso.io
      names:
        kind: app
        plural: apps
        singular: app
      scope: Namespaced
      versions:
      - name: v1
        schema:
          openAPIV3Schema:
            properties:
              spec:
                properties:
                  containsCreditCardData:
                    default: false
                    description: presence of customer credit card information
                    type: boolean
                  dbDriver:
                    default: none
                    description: database deployed with application
                    enum:
                    - postgres
                    - none
                    type: string
                  image:
                    description: container image for application that will be deployed
                    example: gcr.io/syntasso/great-app
                    type: string
                  name:
                    type: string
                required:
                - name
                - image
                type: object
            type: object
        served: true
        storage: true
  dependencies:
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      name: deployment
      namespace: default
    spec:
      api:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: deployments.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: deployment
            plural: deployments
            singular: deployment
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      clusterSelectors:
                        description: |
                          List of key:value pairs to use as cluster selectors when scheduling
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      containsCreditCardData:
                        default: false
                        type: boolean
                      image:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      destinationSelectors:
      - matchLabels:
          environment: dev
      workflows:
        resource:
          configure:
          - apiVersion: platform.kratix.io/v1alpha1
            kind: Pipeline
            metadata:
              name: instance-configure
              namespace: default
            spec:
              containers:
              - image: syntasso/demo-deployment-configure-pipeline:v0.1.1
                name: demo-deployment-configure-pipeline
              - image: ghcr.io/syntasso/kratix-marketplace/pipeline-destination-image:v0.1.0
                name: add-destination
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      name: nginx-ingress
      namespace: default
    spec:
      dependencies:
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.4.0
          creationTimestamp: null
          name: aplogconfs.appprotect.f5.com
        spec:
          group: appprotect.f5.com
          names:
            kind: APLogConf
            listKind: APLogConfList
            plural: aplogconfs
            singular: aplogconf
          preserveUnknownFields: false
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: APLogConf is the Schema for the APLogConfs API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: APLogConfSpec defines the desired state of APLogConf
                    properties:
                      content:
                        properties:
                          escaping_characters:
                            items:
                              properties:
                                from:
                                  type: string
                                to:
                                  type: string
                              type: object
                            type: array
                          format:
                            enum:
                            - splunk
                            - arcsight
                            - default
                            - user-defined
                            - grpc
                            type: string
                          format_string:
                            type: string
                          list_delimiter:
                            type: string
                          list_prefix:
                            type: string
                          list_suffix:
                            type: string
                          max_message_size:
                            pattern: ^([1-9]|[1-5][0-9]|6[0-4])k$
                            type: string
                          max_request_size:
                            pattern: ^([1-9]|[1-9][0-9]|[1-9][0-9]{2}|1[0-9]{3}|20[1-3][0-9]|204[1-8]|any)$
                            type: string
                        type: object
                      filter:
                        properties:
                          request_type:
                            enum:
                            - all
                            - illegal
                            - blocked
                            type: string
                        type: object
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.4.0
          creationTimestamp: null
          name: appolicies.appprotect.f5.com
        spec:
          group: appprotect.f5.com
          names:
            kind: APPolicy
            listKind: APPolicyList
            plural: appolicies
            singular: appolicy
          preserveUnknownFields: false
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: APPolicyConfig is the Schema for the APPolicyconfigs
                  API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: APPolicySpec defines the desired state of APPolicy
                    properties:
                      modifications:
                        items:
                          properties:
                            action:
                              type: string
                            description:
                              type: string
                            entity:
                              properties:
                                name:
                                  type: string
                              type: object
                            entityChanges:
                              properties:
                                type:
                                  type: string
                              type: object
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      modificationsReference:
                        properties:
                          link:
                            pattern: ^http
                            type: string
                        type: object
                      policy:
                        description: Defines the App Protect policy
                        properties:
                          applicationLanguage:
                            enum:
                            - iso-8859-10
                            - iso-8859-6
                            - windows-1255
                            - auto-detect
                            - koi8-r
                            - gb18030
                            - iso-8859-8
                            - windows-1250
                            - iso-8859-9
                            - windows-1252
                            - iso-8859-16
                            - gb2312
                            - iso-8859-2
                            - iso-8859-5
                            - windows-1257
                            - windows-1256
                            - iso-8859-13
                            - windows-874
                            - windows-1253
                            - iso-8859-3
                            - euc-jp
                            - utf-8
                            - gbk
                            - windows-1251
                            - big5
                            - iso-8859-1
                            - shift_jis
                            - euc-kr
                            - iso-8859-4
                            - iso-8859-7
                            - iso-8859-15
                            type: string
                          blocking-settings:
                            properties:
                              evasions:
                                items:
                                  properties:
                                    description:
                                      enum:
                                      - '%u decoding'
                                      - Apache whitespace
                                      - Bad unescape
                                      - Bare byte decoding
                                      - Directory traversals
                                      - IIS backslashes
                                      - IIS Unicode codepoints
                                      - Multiple decoding
                                      type: string
                                    enabled:
                                      type: boolean
                                    maxDecodingPasses:
                                      type: integer
                                  type: object
                                type: array
                              http-protocols:
                                items:
                                  properties:
                                    description:
                                      enum:
                                      - Unescaped space in URL
                                      - Unparsable request content
                                      - Several Content-Length headers
                                      - 'POST request with Content-Length: 0'
                                      - Null in request
                                      - No Host header in HTTP/1.1 request
                                      - Multiple host headers
                                      - Host header contains IP address
                                      - High ASCII characters in headers
                                      - Header name with no header value
                                      - CRLF characters before request start
                                      - Content length should be a positive number
                                      - Chunked request with Content-Length header
                                      - Check maximum number of parameters
                                      - Check maximum number of headers
                                      - Body in GET or HEAD requests
                                      - Bad multipart/form-data request parsing
                                      - Bad multipart parameters parsing
                                      - Bad HTTP version
                                      - Bad host header value
                                      type: string
                                    enabled:
                                      type: boolean
                                    maxHeaders:
                                      type: integer
                                    maxParams:
                                      type: integer
                                  type: object
                                type: array
                              violations:
                                items:
                                  properties:
                                    alarm:
                                      type: boolean
                                    block:
                                      type: boolean
                                    description:
                                      type: string
                                    name:
                                      enum:
                                      - VIOL_GRPC_FORMAT
                                      - VIOL_GRPC_MALFORMED
                                      - VIOL_GRPC_METHOD
                                      - VIOL_PARAMETER_ARRAY_VALUE
                                      - VIOL_PARAMETER_VALUE_REGEXP
                                      - VIOL_CSRF
                                      - VIOL_PARAMETER_VALUE_BASE64
                                      - VIOL_MANDATORY_HEADER
                                      - VIOL_HEADER_REPEATED
                                      - VIOL_ASM_COOKIE_MODIFIED
                                      - VIOL_BLACKLISTED_IP
                                      - VIOL_COOKIE_EXPIRED
                                      - VIOL_COOKIE_LENGTH
                                      - VIOL_COOKIE_MALFORMED
                                      - VIOL_COOKIE_MODIFIED
                                      - VIOL_DATA_GUARD
                                      - VIOL_ENCODING
                                      - VIOL_EVASION
                                      - VIOL_FILETYPE
                                      - VIOL_FILE_UPLOAD
                                      - VIOL_FILE_UPLOAD_IN_BODY
                                      - VIOL_HEADER_LENGTH
                                      - VIOL_HEADER_METACHAR
                                      - VIOL_HTTP_PROTOCOL
                                      - VIOL_HTTP_RESPONSE_STATUS
                                      - VIOL_JSON_FORMAT
                                      - VIOL_JSON_MALFORMED
                                      - VIOL_JSON_SCHEMA
                                      - VIOL_MANDATORY_PARAMETER
                                      - VIOL_MANDATORY_REQUEST_BODY
                                      - VIOL_METHOD
                                      - VIOL_PARAMETER
                                      - VIOL_PARAMETER_DATA_TYPE
                                      - VIOL_PARAMETER_EMPTY_VALUE
                                      - VIOL_PARAMETER_LOCATION
                                      - VIOL_PARAMETER_MULTIPART_NULL_VALUE
                                      - VIOL_PARAMETER_NAME_METACHAR
                                      - VIOL_PARAMETER_NUMERIC_VALUE
                                      - VIOL_PARAMETER_REPEATED
                                      - VIOL_PARAMETER_STATIC_VALUE
                                      - VIOL_PARAMETER_VALUE_LENGTH
                                      - VIOL_PARAMETER_VALUE_METACHAR
                                      - VIOL_POST_DATA_LENGTH
                                      - VIOL_QUERY_STRING_LENGTH
                                      - VIOL_RATING_THREAT
                                      - VIOL_RATING_NEED_EXAMINATION
                                      - VIOL_REQUEST_MAX_LENGTH
                                      - VIOL_REQUEST_LENGTH
                                      - VIOL_THREAT_CAMPAIGN
                                      - VIOL_URL
                                      - VIOL_URL_CONTENT_TYPE
                                      - VIOL_URL_LENGTH
                                      - VIOL_URL_METACHAR
                                      - VIOL_XML_FORMAT
                                      - VIOL_XML_MALFORMED
                                      type: string
                                  type: object
                                type: array
                            type: object
                          blockingSettingReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          bot-defense:
                            properties:
                              mitigations:
                                properties:
                                  anomalies:
                                    items:
                                      properties:
                                        $action:
                                          enum:
                                          - delete
                                          type: string
                                        action:
                                          enum:
                                          - alarm
                                          - block
                                          - default
                                          - detect
                                          - ignore
                                          type: string
                                        name:
                                          type: string
                                        scoreThreshold:
                                          pattern: '[0-9]|[1-9][0-9]|1[0-4][0-9]|150|default'
                                          type: string
                                      type: object
                                    type: array
                                  browsers:
                                    items:
                                      properties:
                                        $action:
                                          enum:
                                          - delete
                                          type: string
                                        action:
                                          enum:
                                          - alarm
                                          - block
                                          - detect
                                          type: string
                                        browserDefinition:
                                          properties:
                                            $action:
                                              enum:
                                              - delete
                                              type: string
                                            isUserDefined:
                                              type: boolean
                                            matchRegex:
                                              type: string
                                            matchString:
                                              type: string
                                            name:
                                              type: string
                                          type: object
                                        maxVersion:
                                          maximum: 2147483647
                                          minimum: 0
                                          type: integer
                                        minVersion:
                                          maximum: 2147483647
                                          minimum: 0
                                          type: integer
                                        name:
                                          type: string
                                      type: object
                                    type: array
                                  classes:
                                    items:
                                      properties:
                                        action:
                                          enum:
                                          - alarm
                                          - block
                                          - detect
                                          - ignore
                                          type: string
                                        name:
                                          enum:
                                          - browser
                                          - malicious-bot
                                          - suspicious-browser
                                          - trusted-bot
                                          - unknown
                                          - untrusted-bot
                                          type: string
                                      type: object
                                    type: array
                                  signatures:
                                    items:
                                      properties:
                                        $action:
                                          enum:
                                          - delete
                                          type: string
                                        action:
                                          enum:
                                          - alarm
                                          - block
                                          - detect
                                          - ignore
                                          type: string
                                        name:
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              settings:
                                properties:
                                  isEnabled:
                                    type: boolean
                                type: object
                            type: object
                          browser-definitions:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                isUserDefined:
                                  type: boolean
                                matchRegex:
                                  type: string
                                matchString:
                                  type: string
                                name:
                                  type: string
                              type: object
                            type: array
                          caseInsensitive:
                            type: boolean
                          character-sets:
                            items:
                              properties:
                                characterSet:
                                  items:
                                    properties:
                                      isAllowed:
                                        type: boolean
                                      metachar:
                                        type: string
                                    type: object
                                  type: array
                                characterSetType:
                                  enum:
                                  - gwt-content
                                  - header
                                  - json-content
                                  - parameter-name
                                  - parameter-value
                                  - plain-text-content
                                  - url
                                  - xml-content
                                  type: string
                              type: object
                            type: array
                          characterSetReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          cookie-settings:
                            properties:
                              maximumCookieHeaderLength:
                                pattern: any|\d+
                                type: string
                            type: object
                          cookieReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          cookieSettingsReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          cookies:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                accessibleOnlyThroughTheHttpProtocol:
                                  type: boolean
                                attackSignaturesCheck:
                                  type: boolean
                                decodeValueAsBase64:
                                  enum:
                                  - enabled
                                  - disabled
                                  - required
                                  type: string
                                enforcementType:
                                  type: string
                                insertSameSiteAttribute:
                                  enum:
                                  - lax
                                  - none
                                  - none-value
                                  - strict
                                  type: string
                                name:
                                  type: string
                                securedOverHttpsConnection:
                                  type: boolean
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                                type:
                                  enum:
                                  - explicit
                                  - wildcard
                                  type: string
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          csrf-protection:
                            properties:
                              enabled:
                                type: boolean
                              expirationTimeInSeconds:
                                pattern: disabled|\d+
                                type: string
                              sslOnly:
                                type: boolean
                            type: object
                          csrf-urls:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                enforcementAction:
                                  enum:
                                  - verify-origin
                                  - none
                                  type: string
                                method:
                                  enum:
                                  - GET
                                  - POST
                                  - any
                                  type: string
                                url:
                                  type: string
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          data-guard:
                            properties:
                              creditCardNumbers:
                                type: boolean
                              enabled:
                                type: boolean
                              enforcementMode:
                                enum:
                                - ignore-urls-in-list
                                - enforce-urls-in-list
                                type: string
                              enforcementUrls:
                                items:
                                  type: string
                                type: array
                              lastCcnDigitsToExpose:
                                type: integer
                              lastSsnDigitsToExpose:
                                type: integer
                              maskData:
                                type: boolean
                              usSocialSecurityNumbers:
                                type: boolean
                            type: object
                          dataGuardReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          description:
                            type: string
                          enablePassiveMode:
                            type: boolean
                          enforcementMode:
                            enum:
                            - transparent
                            - blocking
                            type: string
                          enforcer-settings:
                            properties:
                              enforcerStateCookies:
                                properties:
                                  httpOnlyAttribute:
                                    type: boolean
                                  sameSiteAttribute:
                                    enum:
                                    - lax
                                    - none
                                    - none-value
                                    - strict
                                    type: string
                                  secureAttribute:
                                    enum:
                                    - always
                                    - never
                                    type: string
                                type: object
                            type: object
                          filetypeReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          filetypes:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                allowed:
                                  type: boolean
                                checkPostDataLength:
                                  type: boolean
                                checkQueryStringLength:
                                  type: boolean
                                checkRequestLength:
                                  type: boolean
                                checkUrlLength:
                                  type: boolean
                                name:
                                  type: string
                                postDataLength:
                                  type: integer
                                queryStringLength:
                                  type: integer
                                requestLength:
                                  type: integer
                                responseCheck:
                                  type: boolean
                                type:
                                  enum:
                                  - explicit
                                  - wildcard
                                  type: string
                                urlLength:
                                  type: integer
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          fullPath:
                            type: string
                          general:
                            properties:
                              allowedResponseCodes:
                                items:
                                  format: int32
                                  maximum: 999
                                  minimum: 100
                                  type: integer
                                type: array
                              customXffHeaders:
                                items:
                                  type: string
                                type: array
                              maskCreditCardNumbersInRequest:
                                type: boolean
                              trustXff:
                                type: boolean
                            type: object
                          generalReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          grpc-profiles:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                associateUrls:
                                  type: boolean
                                attackSignaturesCheck:
                                  type: boolean
                                defenseAttributes:
                                  properties:
                                    allowUnknownFields:
                                      type: boolean
                                    maximumDataLength:
                                      pattern: any|\d+
                                      type: string
                                  type: object
                                description:
                                  type: string
                                hasIdlFiles:
                                  type: boolean
                                idlFiles:
                                  items:
                                    properties:
                                      idlFile:
                                        properties:
                                          contents:
                                            type: string
                                          fileName:
                                            type: string
                                          isBase64:
                                            type: boolean
                                        type: object
                                      importUrl:
                                        type: string
                                      isPrimary:
                                        type: boolean
                                      primaryIdlFileName:
                                        type: string
                                    type: object
                                  type: array
                                metacharElementCheck:
                                  type: boolean
                                name:
                                  type: string
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            type: array
                          header-settings:
                            properties:
                              maximumHttpHeaderLength:
                                pattern: any|\d+
                                type: string
                            type: object
                          headerReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          headerSettingsReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          headers:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                allowRepeatedOccurrences:
                                  type: boolean
                                base64Decoding:
                                  type: boolean
                                checkSignatures:
                                  type: boolean
                                decodeValueAsBase64:
                                  enum:
                                  - enabled
                                  - disabled
                                  - required
                                  type: string
                                htmlNormalization:
                                  type: boolean
                                mandatory:
                                  type: boolean
                                maskValueInLogs:
                                  type: boolean
                                name:
                                  type: string
                                normalizationViolations:
                                  type: boolean
                                percentDecoding:
                                  type: boolean
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                                type:
                                  enum:
                                  - explicit
                                  - wildcard
                                  type: string
                                urlNormalization:
                                  type: boolean
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          host-names:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                includeSubdomains:
                                  type: boolean
                                name:
                                  type: string
                              type: object
                            type: array
                          idl-files:
                            items:
                              properties:
                                contents:
                                  type: string
                                fileName:
                                  type: string
                                isBase64:
                                  type: boolean
                              type: object
                            type: array
                          json-profiles:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                attackSignaturesCheck:
                                  type: boolean
                                defenseAttributes:
                                  properties:
                                    maximumArrayLength:
                                      pattern: any|\d+
                                      type: string
                                    maximumStructureDepth:
                                      pattern: any|\d+
                                      type: string
                                    maximumTotalLengthOfJSONData:
                                      pattern: any|\d+
                                      type: string
                                    maximumValueLength:
                                      pattern: any|\d+
                                      type: string
                                    tolerateJSONParsingWarnings:
                                      type: boolean
                                  type: object
                                description:
                                  type: string
                                handleJsonValuesAsParameters:
                                  type: boolean
                                hasValidationFiles:
                                  type: boolean
                                metacharOverrides:
                                  items:
                                    properties:
                                      isAllowed:
                                        type: boolean
                                      metachar:
                                        type: string
                                    type: object
                                  type: array
                                name:
                                  type: string
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                                validationFiles:
                                  items:
                                    properties:
                                      importUrl:
                                        type: string
                                      isPrimary:
                                        type: boolean
                                      jsonValidationFile:
                                        properties:
                                          $action:
                                            enum:
                                            - delete
                                            type: string
                                          contents:
                                            type: string
                                          fileName:
                                            type: string
                                          isBase64:
                                            type: boolean
                                        type: object
                                    type: object
                                  type: array
                              type: object
                            type: array
                          json-validation-files:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                contents:
                                  type: string
                                fileName:
                                  type: string
                                isBase64:
                                  type: boolean
                              type: object
                            type: array
                          jsonProfileReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          jsonValidationFileReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          methodReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          methods:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                name:
                                  type: string
                              type: object
                            type: array
                          name:
                            type: string
                          open-api-files:
                            items:
                              properties:
                                link:
                                  pattern: ^http
                                  type: string
                              type: object
                            type: array
                          parameterReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          parameters:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                allowEmptyValue:
                                  type: boolean
                                allowRepeatedParameterName:
                                  type: boolean
                                arraySerializationFormat:
                                  enum:
                                  - csv
                                  - form
                                  - label
                                  - matrix
                                  - multi
                                  - multipart
                                  - pipe
                                  - ssv
                                  - tsv
                                  type: string
                                attackSignaturesCheck:
                                  type: boolean
                                checkMaxValue:
                                  type: boolean
                                checkMaxValueLength:
                                  type: boolean
                                checkMetachars:
                                  type: boolean
                                checkMinValue:
                                  type: boolean
                                checkMinValueLength:
                                  type: boolean
                                checkMultipleOfValue:
                                  type: boolean
                                contentProfile:
                                  properties:
                                    name:
                                      type: string
                                  type: object
                                dataType:
                                  enum:
                                  - alpha-numeric
                                  - binary
                                  - boolean
                                  - decimal
                                  - email
                                  - integer
                                  - none
                                  - phone
                                  type: string
                                decodeValueAsBase64:
                                  enum:
                                  - enabled
                                  - disabled
                                  - required
                                  type: string
                                disallowFileUploadOfExecutables:
                                  type: boolean
                                enableRegularExpression:
                                  type: boolean
                                exclusiveMax:
                                  type: boolean
                                exclusiveMin:
                                  type: boolean
                                isBase64:
                                  type: boolean
                                isCookie:
                                  type: boolean
                                isHeader:
                                  type: boolean
                                level:
                                  enum:
                                  - global
                                  - url
                                  type: string
                                mandatory:
                                  type: boolean
                                maximumLength:
                                  type: integer
                                maximumValue:
                                  type: integer
                                metacharsOnParameterValueCheck:
                                  type: boolean
                                minimumLength:
                                  type: integer
                                minimumValue:
                                  type: integer
                                multipleOf:
                                  type: integer
                                name:
                                  type: string
                                nameMetacharOverrides:
                                  items:
                                    properties:
                                      isAllowed:
                                        type: boolean
                                      metachar:
                                        type: string
                                    type: object
                                  type: array
                                objectSerializationStyle:
                                  type: string
                                parameterEnumValues:
                                  items:
                                    type: string
                                  type: array
                                parameterLocation:
                                  enum:
                                  - any
                                  - cookie
                                  - form-data
                                  - header
                                  - path
                                  - query
                                  type: string
                                regularExpression:
                                  type: string
                                sensitiveParameter:
                                  type: boolean
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                                staticValues:
                                  type: string
                                type:
                                  enum:
                                  - explicit
                                  - wildcard
                                  type: string
                                url:
                                  type: object
                                valueMetacharOverrides:
                                  items:
                                    properties:
                                      isAllowed:
                                        type: boolean
                                      metachar:
                                        type: string
                                    type: object
                                  type: array
                                valueType:
                                  enum:
                                  - array
                                  - auto-detect
                                  - dynamic-content
                                  - dynamic-parameter-name
                                  - ignore
                                  - json
                                  - object
                                  - openapi-array
                                  - static-content
                                  - user-input
                                  - xml
                                  type: string
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          response-pages:
                            items:
                              properties:
                                ajaxActionType:
                                  enum:
                                  - alert-popup
                                  - custom
                                  - redirect
                                  type: string
                                ajaxCustomContent:
                                  type: string
                                ajaxEnabled:
                                  type: boolean
                                ajaxPopupMessage:
                                  type: string
                                ajaxRedirectUrl:
                                  type: string
                                grpcStatusCode:
                                  pattern: ABORTED|ALREADY_EXISTS|CANCELLED|DATA_LOSS|DEADLINE_EXCEEDED|FAILED_PRECONDITION|INTERNAL|INVALID_ARGUMENT|NOT_FOUND|OK|OUT_OF_RANGE|PERMISSION_DENIED|RESOURCE_EXHAUSTED|UNAUTHENTICATED|UNAVAILABLE|UNIMPLEMENTED|UNKNOWN|d+
                                  type: string
                                grpcStatusMessage:
                                  type: string
                                responseActionType:
                                  enum:
                                  - custom
                                  - default
                                  - erase-cookies
                                  - redirect
                                  - soap-fault
                                  type: string
                                responseContent:
                                  type: string
                                responseHeader:
                                  type: string
                                responsePageType:
                                  enum:
                                  - ajax
                                  - ajax-login
                                  - captcha
                                  - captcha-fail
                                  - default
                                  - failed-login-honeypot
                                  - failed-login-honeypot-ajax
                                  - hijack
                                  - leaked-credentials
                                  - leaked-credentials-ajax
                                  - mobile
                                  - persistent-flow
                                  - xml
                                  - grpc
                                  type: string
                                responseRedirectUrl:
                                  type: string
                              type: object
                            type: array
                          responsePageReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          sensitive-parameters:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                name:
                                  type: string
                              type: object
                            type: array
                          sensitiveParameterReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          server-technologies:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                serverTechnologyName:
                                  enum:
                                  - Jenkins
                                  - SharePoint
                                  - Oracle Application Server
                                  - Python
                                  - Oracle Identity Manager
                                  - Spring Boot
                                  - CouchDB
                                  - SQLite
                                  - Handlebars
                                  - Mustache
                                  - Prototype
                                  - Zend
                                  - Redis
                                  - Underscore.js
                                  - Ember.js
                                  - ZURB Foundation
                                  - ef.js
                                  - Vue.js
                                  - UIKit
                                  - TYPO3 CMS
                                  - RequireJS
                                  - React
                                  - MooTools
                                  - Laravel
                                  - GraphQL
                                  - Google Web Toolkit
                                  - Express.js
                                  - CodeIgniter
                                  - Backbone.js
                                  - AngularJS
                                  - JavaScript
                                  - Nginx
                                  - Jetty
                                  - Joomla
                                  - JavaServer Faces (JSF)
                                  - Ruby
                                  - MongoDB
                                  - Django
                                  - Node.js
                                  - Citrix
                                  - JBoss
                                  - Elasticsearch
                                  - Apache Struts
                                  - XML
                                  - PostgreSQL
                                  - IBM DB2
                                  - Sybase/ASE
                                  - CGI
                                  - Proxy Servers
                                  - SSI (Server Side Includes)
                                  - Cisco
                                  - Novell
                                  - Macromedia JRun
                                  - BEA Systems WebLogic Server
                                  - Lotus Domino
                                  - MySQL
                                  - Oracle
                                  - Microsoft SQL Server
                                  - PHP
                                  - Outlook Web Access
                                  - Apache/NCSA HTTP Server
                                  - Apache Tomcat
                                  - WordPress
                                  - Macromedia ColdFusion
                                  - Unix/Linux
                                  - Microsoft Windows
                                  - ASP.NET
                                  - Front Page Server Extensions (FPSE)
                                  - IIS
                                  - WebDAV
                                  - ASP
                                  - Java Servlets/JSP
                                  - jQuery
                                  type: string
                              type: object
                            type: array
                          serverTechnologyReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          signature-requirements:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                tag:
                                  type: string
                              type: object
                            type: array
                          signature-sets:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                alarm:
                                  type: boolean
                                block:
                                  type: boolean
                                name:
                                  type: string
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                          signature-settings:
                            properties:
                              attackSignatureFalsePositiveMode:
                                enum:
                                - detect
                                - detect-and-allow
                                - disabled
                                type: string
                              minimumAccuracyForAutoAddedSignatures:
                                enum:
                                - high
                                - low
                                - medium
                                type: string
                            type: object
                          signatureReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          signatureSetReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          signatureSettingReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          signatures:
                            items:
                              properties:
                                enabled:
                                  type: boolean
                                name:
                                  type: string
                                signatureId:
                                  type: integer
                                tag:
                                  type: string
                              type: object
                            type: array
                          softwareVersion:
                            type: string
                          template:
                            properties:
                              name:
                                type: string
                            type: object
                          threat-campaigns:
                            items:
                              properties:
                                isEnabled:
                                  type: boolean
                                name:
                                  type: string
                              type: object
                            type: array
                          threatCampaignReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          urlReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          urls:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                allowRenderingInFrames:
                                  enum:
                                  - never
                                  - only-same
                                  type: string
                                allowRenderingInFramesOnlyFrom:
                                  type: string
                                attackSignaturesCheck:
                                  type: boolean
                                clickjackingProtection:
                                  type: boolean
                                description:
                                  type: string
                                disallowFileUploadOfExecutables:
                                  type: boolean
                                html5CrossOriginRequestsEnforcement:
                                  properties:
                                    allowOriginsEnforcementMode:
                                      enum:
                                      - replace-with
                                      - unmodified
                                      type: string
                                    checkAllowedMethods:
                                      type: boolean
                                    crossDomainAllowedOrigin:
                                      items:
                                        properties:
                                          includeSubDomains:
                                            type: boolean
                                          originName:
                                            type: string
                                          originPort:
                                            pattern: any|\d+
                                            type: string
                                          originProtocol:
                                            enum:
                                            - http
                                            - http/https
                                            - https
                                            type: string
                                        type: object
                                      type: array
                                    enforcementMode:
                                      enum:
                                      - disabled
                                      - enforce
                                      type: string
                                  type: object
                                isAllowed:
                                  type: boolean
                                mandatoryBody:
                                  type: boolean
                                metacharOverrides:
                                  items:
                                    properties:
                                      isAllowed:
                                        type: boolean
                                      metachar:
                                        type: string
                                    type: object
                                  type: array
                                metacharsOnUrlCheck:
                                  type: boolean
                                method:
                                  enum:
                                  - ACL
                                  - BCOPY
                                  - BDELETE
                                  - BMOVE
                                  - BPROPFIND
                                  - BPROPPATCH
                                  - CHECKIN
                                  - CHECKOUT
                                  - CONNECT
                                  - COPY
                                  - DELETE
                                  - GET
                                  - HEAD
                                  - LINK
                                  - LOCK
                                  - MERGE
                                  - MKCOL
                                  - MKWORKSPACE
                                  - MOVE
                                  - NOTIFY
                                  - OPTIONS
                                  - PATCH
                                  - POLL
                                  - POST
                                  - PROPFIND
                                  - PROPPATCH
                                  - PUT
                                  - REPORT
                                  - RPC_IN_DATA
                                  - RPC_OUT_DATA
                                  - SEARCH
                                  - SUBSCRIBE
                                  - TRACE
                                  - TRACK
                                  - UNLINK
                                  - UNLOCK
                                  - UNSUBSCRIBE
                                  - VERSION_CONTROL
                                  - X-MS-ENUMATTS
                                  - '*'
                                  type: string
                                methodOverrides:
                                  items:
                                    properties:
                                      allowed:
                                        type: boolean
                                      method:
                                        enum:
                                        - ACL
                                        - BCOPY
                                        - BDELETE
                                        - BMOVE
                                        - BPROPFIND
                                        - BPROPPATCH
                                        - CHECKIN
                                        - CHECKOUT
                                        - CONNECT
                                        - COPY
                                        - DELETE
                                        - GET
                                        - HEAD
                                        - LINK
                                        - LOCK
                                        - MERGE
                                        - MKCOL
                                        - MKWORKSPACE
                                        - MOVE
                                        - NOTIFY
                                        - OPTIONS
                                        - PATCH
                                        - POLL
                                        - POST
                                        - PROPFIND
                                        - PROPPATCH
                                        - PUT
                                        - REPORT
                                        - RPC_IN_DATA
                                        - RPC_OUT_DATA
                                        - SEARCH
                                        - SUBSCRIBE
                                        - TRACE
                                        - TRACK
                                        - UNLINK
                                        - UNLOCK
                                        - UNSUBSCRIBE
                                        - VERSION_CONTROL
                                        - X-MS-ENUMATTS
                                        type: string
                                    type: object
                                  type: array
                                methodsOverrideOnUrlCheck:
                                  type: boolean
                                name:
                                  type: string
                                operationId:
                                  type: string
                                positionalParameters:
                                  items:
                                    properties:
                                      parameter:
                                        properties:
                                          $action:
                                            enum:
                                            - delete
                                            type: string
                                          allowEmptyValue:
                                            type: boolean
                                          allowRepeatedParameterName:
                                            type: boolean
                                          arraySerializationFormat:
                                            enum:
                                            - csv
                                            - form
                                            - label
                                            - matrix
                                            - multi
                                            - multipart
                                            - pipe
                                            - ssv
                                            - tsv
                                            type: string
                                          attackSignaturesCheck:
                                            type: boolean
                                          checkMaxValue:
                                            type: boolean
                                          checkMaxValueLength:
                                            type: boolean
                                          checkMetachars:
                                            type: boolean
                                          checkMinValue:
                                            type: boolean
                                          checkMinValueLength:
                                            type: boolean
                                          checkMultipleOfValue:
                                            type: boolean
                                          contentProfile:
                                            properties:
                                              name:
                                                type: string
                                            type: object
                                          dataType:
                                            enum:
                                            - alpha-numeric
                                            - binary
                                            - boolean
                                            - decimal
                                            - email
                                            - integer
                                            - none
                                            - phone
                                            type: string
                                          decodeValueAsBase64:
                                            enum:
                                            - enabled
                                            - disabled
                                            - required
                                            type: string
                                          disallowFileUploadOfExecutables:
                                            type: boolean
                                          enableRegularExpression:
                                            type: boolean
                                          exclusiveMax:
                                            type: boolean
                                          exclusiveMin:
                                            type: boolean
                                          isBase64:
                                            type: boolean
                                          isCookie:
                                            type: boolean
                                          isHeader:
                                            type: boolean
                                          level:
                                            enum:
                                            - global
                                            - url
                                            type: string
                                          mandatory:
                                            type: boolean
                                          maximumLength:
                                            type: integer
                                          maximumValue:
                                            type: integer
                                          metacharsOnParameterValueCheck:
                                            type: boolean
                                          minimumLength:
                                            type: integer
                                          minimumValue:
                                            type: integer
                                          multipleOf:
                                            type: integer
                                          name:
                                            type: string
                                          nameMetacharOverrides:
                                            items:
                                              properties:
                                                isAllowed:
                                                  type: boolean
                                                metachar:
                                                  type: string
                                              type: object
                                            type: array
                                          objectSerializationStyle:
                                            type: string
                                          parameterEnumValues:
                                            items:
                                              type: string
                                            type: array
                                          parameterLocation:
                                            enum:
                                            - any
                                            - cookie
                                            - form-data
                                            - header
                                            - path
                                            - query
                                            type: string
                                          regularExpression:
                                            type: string
                                          sensitiveParameter:
                                            type: boolean
                                          signatureOverrides:
                                            items:
                                              properties:
                                                enabled:
                                                  type: boolean
                                                name:
                                                  type: string
                                                signatureId:
                                                  type: integer
                                                tag:
                                                  type: string
                                              type: object
                                            type: array
                                          staticValues:
                                            type: string
                                          type:
                                            enum:
                                            - explicit
                                            - wildcard
                                            type: string
                                          url:
                                            type: object
                                          valueMetacharOverrides:
                                            items:
                                              properties:
                                                isAllowed:
                                                  type: boolean
                                                metachar:
                                                  type: string
                                              type: object
                                            type: array
                                          valueType:
                                            enum:
                                            - array
                                            - auto-detect
                                            - dynamic-content
                                            - dynamic-parameter-name
                                            - ignore
                                            - json
                                            - object
                                            - openapi-array
                                            - static-content
                                            - user-input
                                            - xml
                                            type: string
                                          wildcardOrder:
                                            type: integer
                                        type: object
                                      urlSegmentIndex:
                                        type: integer
                                    type: object
                                  type: array
                                protocol:
                                  enum:
                                  - http
                                  - https
                                  type: string
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                                type:
                                  enum:
                                  - explicit
                                  - wildcard
                                  type: string
                                urlContentProfiles:
                                  items:
                                    properties:
                                      contentProfile:
                                        properties:
                                          name:
                                            type: string
                                        type: object
                                      headerName:
                                        type: string
                                      headerOrder:
                                        type: string
                                      headerValue:
                                        type: string
                                      name:
                                        type: string
                                      type:
                                        enum:
                                        - apply-content-signatures
                                        - apply-value-and-content-signatures
                                        - disallow
                                        - do-nothing
                                        - form-data
                                        - gwt
                                        - json
                                        - xml
                                        - grpc
                                        type: string
                                    type: object
                                  type: array
                                wildcardOrder:
                                  type: integer
                              type: object
                            type: array
                          whitelist-ips:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                blockRequests:
                                  enum:
                                  - always
                                  - never
                                  - policy-default
                                  type: string
                                ipAddress:
                                  pattern: '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
                                  type: string
                                ipMask:
                                  pattern: '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
                                  type: string
                                neverLogRequests:
                                  type: boolean
                              type: object
                            type: array
                          whitelistIpReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          xml-profiles:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                attackSignaturesCheck:
                                  type: boolean
                                defenseAttributes:
                                  properties:
                                    allowCDATA:
                                      type: boolean
                                    allowDTDs:
                                      type: boolean
                                    allowExternalReferences:
                                      type: boolean
                                    allowProcessingInstructions:
                                      type: boolean
                                    maximumAttributeValueLength:
                                      pattern: any|\d+
                                      type: string
                                    maximumAttributesPerElement:
                                      pattern: any|\d+
                                      type: string
                                    maximumChildrenPerElement:
                                      pattern: any|\d+
                                      type: string
                                    maximumDocumentDepth:
                                      pattern: any|\d+
                                      type: string
                                    maximumDocumentSize:
                                      pattern: any|\d+
                                      type: string
                                    maximumElements:
                                      pattern: any|\d+
                                      type: string
                                    maximumNSDeclarations:
                                      pattern: any|\d+
                                      type: string
                                    maximumNameLength:
                                      pattern: any|\d+
                                      type: string
                                    maximumNamespaceLength:
                                      pattern: any|\d+
                                      type: string
                                    tolerateCloseTagShorthand:
                                      type: boolean
                                    tolerateLeadingWhiteSpace:
                                      type: boolean
                                    tolerateNumericNames:
                                      type: boolean
                                  type: object
                                description:
                                  type: string
                                enableWss:
                                  type: boolean
                                followSchemaLinks:
                                  type: boolean
                                name:
                                  type: string
                                signatureOverrides:
                                  items:
                                    properties:
                                      enabled:
                                        type: boolean
                                      name:
                                        type: string
                                      signatureId:
                                        type: integer
                                      tag:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            type: array
                          xml-validation-files:
                            items:
                              properties:
                                $action:
                                  enum:
                                  - delete
                                  type: string
                                contents:
                                  type: string
                                fileName:
                                  type: string
                                isBase64:
                                  type: boolean
                              type: object
                            type: array
                          xmlProfileReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                          xmlValidationFileReference:
                            properties:
                              link:
                                pattern: ^http
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.4.0
          creationTimestamp: null
          name: apusersigs.appprotect.f5.com
        spec:
          group: appprotect.f5.com
          names:
            kind: APUserSig
            listKind: APUserSigList
            plural: apusersigs
            singular: apusersig
          preserveUnknownFields: false
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: APUserSig is the Schema for the apusersigs API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: APUserSigSpec defines the desired state of APUserSig
                    properties:
                      properties:
                        type: string
                      signatures:
                        items:
                          properties:
                            accuracy:
                              enum:
                              - high
                              - medium
                              - low
                              type: string
                            attackType:
                              properties:
                                name:
                                  type: string
                              type: object
                            description:
                              type: string
                            name:
                              type: string
                            references:
                              properties:
                                type:
                                  enum:
                                  - bugtraq
                                  - cve
                                  - nessus
                                  - url
                                  type: string
                                value:
                                  type: string
                              type: object
                            risk:
                              enum:
                              - high
                              - medium
                              - low
                              type: string
                            rule:
                              type: string
                            signatureType:
                              enum:
                              - request
                              - response
                              type: string
                            systems:
                              items:
                                properties:
                                  name:
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      tag:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.9.2
          creationTimestamp: null
          name: apdoslogconfs.appprotectdos.f5.com
        spec:
          group: appprotectdos.f5.com
          names:
            kind: APDosLogConf
            listKind: APDosLogConfList
            plural: apdoslogconfs
            singular: apdoslogconf
          preserveUnknownFields: false
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: APDosLogConf is the Schema for the APDosLogConfs API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: APDosLogConfSpec defines the desired state of APDosLogConf
                    properties:
                      content:
                        properties:
                          format:
                            enum:
                            - splunk
                            - arcsight
                            - user-defined
                            type: string
                          format_string:
                            type: string
                          max_message_size:
                            pattern: ^([1-9]|[1-5][0-9]|6[0-4])k$
                            type: string
                        type: object
                      filter:
                        properties:
                          attack-signatures:
                            default: top 10
                            pattern: ^(none|all|top ([1-9]|[1-9][0-9]|[1-9][0-9]{2,4}|100000))$
                            type: string
                          bad-actors:
                            default: top 10
                            pattern: ^(none|all|top ([1-9]|[1-9][0-9]|[1-9][0-9]{2,4}|100000))$
                            type: string
                          traffic-mitigation-stats:
                            default: all
                            enum:
                            - none
                            - all
                            type: string
                        type: object
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.9.2
          creationTimestamp: null
          name: apdospolicies.appprotectdos.f5.com
        spec:
          group: appprotectdos.f5.com
          names:
            kind: APDosPolicy
            listKind: APDosPoliciesList
            plural: apdospolicies
            singular: apdospolicy
          preserveUnknownFields: false
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: APDosPolicy is the Schema for the APDosPolicy API
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: APDosPolicySpec defines the desired state of APDosPolicy
                    properties:
                      automation_tools_detection:
                        default: "on"
                        enum:
                        - "on"
                        - "off"
                        type: string
                      bad_actors:
                        default: "on"
                        enum:
                        - "on"
                        - "off"
                        type: string
                      mitigation_mode:
                        default: standard
                        enum:
                        - standard
                        - conservative
                        - none
                        type: string
                      signatures:
                        default: "on"
                        enum:
                        - "on"
                        - "off"
                        type: string
                      tls_fingerprint:
                        default: "on"
                        enum:
                        - "on"
                        - "off"
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: dosprotectedresources.appprotectdos.f5.com
        spec:
          group: appprotectdos.f5.com
          names:
            kind: DosProtectedResource
            listKind: DosProtectedResourceList
            plural: dosprotectedresources
            shortNames:
            - pr
            singular: dosprotectedresource
          scope: Namespaced
          versions:
          - name: v1beta1
            schema:
              openAPIV3Schema:
                description: DosProtectedResource defines a Dos protected resource.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: DosProtectedResourceSpec defines the properties and
                      values a DosProtectedResource can have.
                    properties:
                      apDosMonitor:
                        description: 'ApDosMonitor is how NGINX App Protect DoS monitors
                          the stress level of the protected object. The monitor requests
                          are sent from localhost (127.0.0.1). Default value: URI
                          - None, protocol - http1, timeout - NGINX App Protect DoS
                          default.'
                        properties:
                          protocol:
                            description: Protocol determines if the server listens
                              on http1 / http2 / grpc. The default is http1.
                            enum:
                            - http1
                            - http2
                            - grpc
                            type: string
                          timeout:
                            description: Timeout determines how long (in seconds)
                              should NGINX App Protect DoS wait for a response. Default
                              is 10 seconds for http1/http2 and 5 seconds for grpc.
                            format: int64
                            type: integer
                          uri:
                            description: 'URI is the destination to the desired protected
                              object in the nginx.conf:'
                            type: string
                        type: object
                      apDosPolicy:
                        description: ApDosPolicy is the namespace/name of a ApDosPolicy
                          resource
                        type: string
                      dosAccessLogDest:
                        description: DosAccessLogDest is the network address for the
                          access logs
                        type: string
                      dosSecurityLog:
                        description: DosSecurityLog defines the security log of the
                          DosProtectedResource.
                        properties:
                          apDosLogConf:
                            description: ApDosLogConf is the namespace/name of a APDosLogConf
                              resource
                            type: string
                          dosLogDest:
                            description: DosLogDest is the network address of a logging
                              service, can be either IP or DNS name.
                            type: string
                          enable:
                            description: Enable enables the security logging feature
                              if set to true
                            type: boolean
                        type: object
                      enable:
                        description: Enable enables the DOS feature if set to true
                        type: boolean
                      name:
                        description: Name is the name of protected object, max of
                          63 characters.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: dnsendpoints.externaldns.nginx.org
        spec:
          group: externaldns.nginx.org
          names:
            kind: DNSEndpoint
            listKind: DNSEndpointList
            plural: dnsendpoints
            singular: dnsendpoint
          scope: Namespaced
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                description: DNSEndpoint is the CRD wrapper for Endpoint
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: DNSEndpointSpec holds information about endpoints.
                    properties:
                      endpoints:
                        items:
                          description: Endpoint describes DNS Endpoint.
                          properties:
                            dnsName:
                              description: The hostname for the DNS record
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels stores labels defined for the Endpoint
                              type: object
                            providerSpecific:
                              description: ProviderSpecific stores provider specific
                                config
                              items:
                                description: ProviderSpecificProperty represents provider
                                  specific config property.
                                properties:
                                  name:
                                    description: Name of the property
                                    type: string
                                  value:
                                    description: Value of the property
                                    type: string
                                type: object
                              type: array
                            recordTTL:
                              description: TTL for the record
                              format: int64
                              type: integer
                            recordType:
                              description: RecordType type of record, e.g. CNAME,
                                A, SRV, TXT, MX
                              type: string
                            targets:
                              description: The targets the DNS service points to
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                    type: object
                  status:
                    description: DNSEndpointStatus represents generation observed
                      by the external dns controller.
                    properties:
                      observedGeneration:
                        description: The generation observed by by the external-dns
                          controller.
                        format: int64
                        type: integer
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
          namespace: default
      - apiVersion: v1
        data:
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQWFZQ0NRREFPRjl0THNhWFhEQU5CZ2txaGtpRzl3MEJBUXNGQURBaE1SOHdIUVlEVlFRRERCWk8KUjBsT1dFbHVaM0psYzNORGIyNTBjbTlzYkdWeU1CNFhEVEU0TURreE1qRTRNRE16TlZvWERUSXpNRGt4TVRFNApNRE16TlZvd0lURWZNQjBHQTFVRUF3d1dUa2RKVGxoSmJtZHlaWE56UTI5dWRISnZiR3hsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUwvN2hIUEtFWGRMdjNyaUM3QlBrMTNpWkt5eTlyQ08KR2xZUXYyK2EzUDF0azIrS3YwVGF5aGRCbDRrcnNUcTZzZm8vWUk1Y2Vhbkw4WGM3U1pyQkVRYm9EN2REbWs1Qgo4eDZLS2xHWU5IWlg0Rm5UZ0VPaStlM2ptTFFxRlBSY1kzVnNPazFFeUZBL0JnWlJVbkNHZUtGeERSN0tQdGhyCmtqSXVuektURXUyaDU4Tlp0S21ScUJHdDEwcTNRYzhZT3ExM2FnbmovUWRjc0ZYYTJnMjB1K1lYZDdoZ3krZksKWk4vVUkxQUQ0YzZyM1lma1ZWUmVHd1lxQVp1WXN2V0RKbW1GNWRwdEMzN011cDBPRUxVTExSakZJOTZXNXIwSAo1TmdPc25NWFJNV1hYVlpiNWRxT3R0SmRtS3FhZ25TZ1JQQVpQN2MwQjFQU2FqYzZjNGZRVXpNQ0F3RUFBVEFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWpLb2tRdGRPcEsrTzhibWVPc3lySmdJSXJycVFVY2ZOUitjb0hZVUoKdGhrYnhITFMzR3VBTWI5dm15VExPY2xxeC9aYzJPblEwMEJCLzlTb0swcitFZ1U2UlVrRWtWcitTTFA3NTdUWgozZWI4dmdPdEduMS9ienM3bzNBaS9kclkrcUI5Q2k1S3lPc3FHTG1US2xFaUtOYkcyR1ZyTWxjS0ZYQU80YTY3Cklnc1hzYktNbTQwV1U3cG9mcGltU1ZmaXFSdkV5YmN3N0NYODF6cFErUyt1eHRYK2VBZ3V0NHh3VlI5d2IyVXYKelhuZk9HbWhWNThDd1dIQnNKa0kxNXhaa2VUWXdSN0diaEFMSkZUUkk3dkhvQXprTWIzbjAxQjQyWjNrN3RXNQpJUDFmTlpIOFUvOWxiUHNoT21FRFZkdjF5ZytVRVJxbStGSis2R0oxeFJGcGZnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdi91RWM4b1JkMHUvZXVJTHNFK1RYZUprckxMMnNJNGFWaEMvYjVyYy9XMlRiNHEvClJOcktGMEdYaVN1eE9ycXgrajlnamx4NXFjdnhkenRKbXNFUkJ1Z1B0ME9hVGtIekhvb3FVWmcwZGxmZ1dkT0EKUTZMNTdlT1l0Q29VOUZ4amRXdzZUVVRJVUQ4R0JsRlNjSVo0b1hFTkhzbysyR3VTTWk2Zk1wTVM3YUhudzFtMApxWkdvRWEzWFNyZEJ6eGc2clhkcUNlUDlCMXl3VmRyYURiUzc1aGQzdUdETDU4cGszOVFqVUFQaHpxdmRoK1JWClZGNGJCaW9CbTVpeTlZTW1hWVhsMm0wTGZzeTZuUTRRdFFzdEdNVWozcGJtdlFmazJBNnljeGRFeFpkZFZsdmwKMm82MjBsMllxcHFDZEtCRThCay90elFIVTlKcU56cHpoOUJUTXdJREFRQUJBb0lCQVFDZklHbXowOHhRVmorNwpLZnZJUXQwQ0YzR2MxNld6eDhVNml4MHg4Mm15d1kxUUNlL3BzWE9LZlRxT1h1SENyUlp5TnUvZ2IvUUQ4bUFOCmxOMjRZTWl0TWRJODg5TEZoTkp3QU5OODJDeTczckM5bzVvUDlkazAvYzRIbjAzSkVYNzZ5QjgzQm9rR1FvYksKMjhMNk0rdHUzUmFqNjd6Vmc2d2szaEhrU0pXSzBwV1YrSjdrUkRWYmhDYUZhNk5nMUZNRWxhTlozVDhhUUtyQgpDUDNDeEFTdjYxWTk5TEI4KzNXWVFIK3NYaTVGM01pYVNBZ1BkQUk3WEh1dXFET1lvMU5PL0JoSGt1aVg2QnRtCnorNTZud2pZMy8yUytSRmNBc3JMTnIwMDJZZi9oY0IraVlDNzVWYmcydVd6WTY3TWdOTGQ5VW9RU3BDRkYrVm4KM0cyUnhybnhBb0dCQU40U3M0ZVlPU2huMVpQQjdhTUZsY0k2RHR2S2ErTGZTTXFyY2pOZjJlSEpZNnhubmxKdgpGenpGL2RiVWVTbWxSekR0WkdlcXZXaHFISy9iTjIyeWJhOU1WMDlRQ0JFTk5jNmtWajJTVHpUWkJVbEx4QzYrCk93Z0wyZHhKendWelU0VC84ajdHalRUN05BZVpFS2FvRHFyRG5BYWkyaW5oZU1JVWZHRXFGKzJyQW9HQkFOMVAKK0tZL0lsS3RWRzRKSklQNzBjUis3RmpyeXJpY05iWCtQVzUvOXFHaWxnY2grZ3l4b25BWlBpd2NpeDN3QVpGdwpaZC96ZFB2aTBkWEppc1BSZjRMazg5b2pCUmpiRmRmc2l5UmJYbyt3TFU4NUhRU2NGMnN5aUFPaTVBRHdVU0FkCm45YWFweUNweEFkREtERHdObit3ZFhtaTZ0OHRpSFRkK3RoVDhkaVpBb0dCQUt6Wis1bG9OOTBtYlF4VVh5YUwKMjFSUm9tMGJjcndsTmVCaWNFSmlzaEhYa2xpSVVxZ3hSZklNM2hhUVRUcklKZENFaHFsV01aV0xPb2I2NTNyZgo3aFlMSXM1ZUtka3o0aFRVdnpldm9TMHVXcm9CV2xOVHlGanIrSWhKZnZUc0hpOGdsU3FkbXgySkJhZUFVWUNXCndNdlQ4NmNLclNyNkQrZG8wS05FZzFsL0FvR0FlMkFVdHVFbFNqLzBmRzgrV3hHc1RFV1JqclRNUzRSUjhRWXQKeXdjdFA4aDZxTGxKUTRCWGxQU05rMXZLTmtOUkxIb2pZT2pCQTViYjhibXNVU1BlV09NNENoaFJ4QnlHbmR2eAphYkJDRkFwY0IvbEg4d1R0alVZYlN5T294ZGt5OEp0ek90ajJhS0FiZHd6NlArWDZDODhjZmxYVFo5MWpYL3RMCjF3TmRKS2tDZ1lCbyt0UzB5TzJ2SWFmK2UwSkN5TGhzVDQ5cTN3Zis2QWVqWGx2WDJ1VnRYejN5QTZnbXo5aCsKcDNlK2JMRUxwb3B0WFhNdUFRR0xhUkcrYlNNcjR5dERYbE5ZSndUeThXczNKY3dlSTdqZVp2b0ZpbmNvVlVIMwphdmxoTUVCRGYxSjltSDB5cDBwWUNaS2ROdHNvZEZtQktzVEtQMjJhTmtsVVhCS3gyZzR6cFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        kind: Secret
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress-default-server-tls
          namespace: default
        type: kubernetes.io/tls
      - apiVersion: v1
        data: null
        kind: ConfigMap
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
          namespace: default
      - apiVersion: v1
        kind: ConfigMap
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress-leader-election
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
        rules:
        - apiGroups:
          - ""
          resources:
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
          - list
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - update
          - create
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingressclasses
          verbs:
          - get
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses/status
          verbs:
          - update
        - apiGroups:
          - k8s.nginx.org
          resources:
          - virtualservers
          - virtualserverroutes
          - globalconfigurations
          - transportservers
          - policies
          verbs:
          - list
          - watch
          - get
        - apiGroups:
          - k8s.nginx.org
          resources:
          - virtualservers/status
          - virtualserverroutes/status
          - policies/status
          - transportservers/status
          verbs:
          - update
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: nginx-nginx-ingress
        subjects:
        - kind: ServiceAccount
          name: nginx-nginx-ingress
          namespace: default
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
          namespace: default
        spec:
          externalTrafficPolicy: Local
          ports:
          - name: http
            nodePort: 31338
            port: 80
            protocol: TCP
            targetPort: 80
          - name: https
            port: 443
            protocol: TCP
            targetPort: 443
          selector:
            app: nginx-nginx-ingress
          type: NodePort
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/instance: nginx
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: nginx-nginx-ingress
            helm.sh/chart: nginx-ingress-0.15.2
          name: nginx-nginx-ingress
          namespace: default
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: nginx-nginx-ingress
          template:
            metadata:
              annotations:
                prometheus.io/port: "9113"
                prometheus.io/scheme: http
                prometheus.io/scrape: "true"
              labels:
                app: nginx-nginx-ingress
            spec:
              automountServiceAccountToken: true
              containers:
              - args:
                - -nginx-plus=false
                - -nginx-reload-timeout=60000
                - -enable-app-protect=false
                - -enable-app-protect-dos=false
                - -nginx-configmaps=$(POD_NAMESPACE)/nginx-nginx-ingress
                - -default-server-tls-secret=$(POD_NAMESPACE)/nginx-nginx-ingress-default-server-tls
                - -ingress-class=nginx
                - -health-status=false
                - -health-status-uri=/nginx-health
                - -nginx-debug=false
                - -v=1
                - -nginx-status=true
                - -nginx-status-port=8080
                - -nginx-status-allow-cidrs=127.0.0.1
                - -report-ingress-status
                - -external-service=nginx-nginx-ingress
                - -enable-leader-election=true
                - -leader-election-lock-name=nginx-nginx-ingress-leader-election
                - -enable-prometheus-metrics=true
                - -prometheus-metrics-listen-port=9113
                - -prometheus-tls-secret=
                - -enable-custom-resources=true
                - -enable-snippets=false
                - -include-year=false
                - -disable-ipv6=false
                - -enable-tls-passthrough=false
                - -enable-preview-policies=false
                - -enable-cert-manager=false
                - -enable-oidc=false
                - -enable-external-dns=false
                - -ready-status=true
                - -ready-status-port=8081
                - -enable-latency-metrics=false
                env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                image: nginx/nginx-ingress:2.4.2
                imagePullPolicy: IfNotPresent
                name: nginx-nginx-ingress
                ports:
                - containerPort: 80
                  name: http
                - containerPort: 443
                  name: https
                - containerPort: 9113
                  name: prometheus
                - containerPort: 8081
                  name: readiness-port
                readinessProbe:
                  httpGet:
                    path: /nginx-ready
                    port: readiness-port
                  initialDelaySeconds: 0
                  periodSeconds: 1
                resources:
                  requests:
                    cpu: 100m
                    memory: 128Mi
                securityContext:
                  allowPrivilegeEscalation: true
                  capabilities:
                    add:
                    - NET_BIND_SERVICE
                    drop:
                    - ALL
                  runAsNonRoot: true
                  runAsUser: 101
              hostNetwork: false
              serviceAccountName: nginx-nginx-ingress
              terminationGracePeriodSeconds: 30
      - apiVersion: networking.k8s.io/v1
        kind: IngressClass
        metadata:
          name: nginx
        spec:
          controller: nginx.org/ingress-controller
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: globalconfigurations.k8s.nginx.org
        spec:
          group: k8s.nginx.org
          names:
            kind: GlobalConfiguration
            listKind: GlobalConfigurationList
            plural: globalconfigurations
            shortNames:
            - gc
            singular: globalconfiguration
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: GlobalConfiguration defines the GlobalConfiguration resource.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: GlobalConfigurationSpec is the spec of the GlobalConfiguration
                      resource.
                    properties:
                      listeners:
                        items:
                          description: Listener defines a listener.
                          properties:
                            name:
                              type: string
                            port:
                              type: integer
                            protocol:
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
            served: true
            storage: true
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: policies.k8s.nginx.org
        spec:
          group: k8s.nginx.org
          names:
            kind: Policy
            listKind: PolicyList
            plural: policies
            shortNames:
            - pol
            singular: policy
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Current state of the Policy. If the resource has a valid
                status, it means it has been validated and accepted by the Ingress
                Controller.
              jsonPath: .status.state
              name: State
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                description: Policy defines a Policy for VirtualServer and VirtualServerRoute
                  resources.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: PolicySpec is the spec of the Policy resource. The
                      spec includes multiple fields, where each field represents a
                      different policy. Only one policy (field) is allowed.
                    properties:
                      accessControl:
                        description: AccessControl defines an access policy based
                          on the source IP of a request.
                        properties:
                          allow:
                            items:
                              type: string
                            type: array
                          deny:
                            items:
                              type: string
                            type: array
                        type: object
                      basicAuth:
                        description: 'BasicAuth holds HTTP Basic authentication configuration
                          policy status: preview'
                        properties:
                          realm:
                            type: string
                          secret:
                            type: string
                        type: object
                      egressMTLS:
                        description: EgressMTLS defines an Egress MTLS policy.
                        properties:
                          ciphers:
                            type: string
                          protocols:
                            type: string
                          serverName:
                            type: boolean
                          sessionReuse:
                            type: boolean
                          sslName:
                            type: string
                          tlsSecret:
                            type: string
                          trustedCertSecret:
                            type: string
                          verifyDepth:
                            type: integer
                          verifyServer:
                            type: boolean
                        type: object
                      ingressClassName:
                        type: string
                      ingressMTLS:
                        description: IngressMTLS defines an Ingress MTLS policy.
                        properties:
                          clientCertSecret:
                            type: string
                          verifyClient:
                            type: string
                          verifyDepth:
                            type: integer
                        type: object
                      jwt:
                        description: JWTAuth holds JWT authentication configuration.
                        properties:
                          realm:
                            type: string
                          secret:
                            type: string
                          token:
                            type: string
                        type: object
                      oidc:
                        description: OIDC defines an Open ID Connect policy.
                        properties:
                          authEndpoint:
                            type: string
                          clientID:
                            type: string
                          clientSecret:
                            type: string
                          jwksURI:
                            type: string
                          redirectURI:
                            type: string
                          scope:
                            type: string
                          tokenEndpoint:
                            type: string
                          zoneSyncLeeway:
                            type: integer
                        type: object
                      rateLimit:
                        description: RateLimit defines a rate limit policy.
                        properties:
                          burst:
                            type: integer
                          delay:
                            type: integer
                          dryRun:
                            type: boolean
                          key:
                            type: string
                          logLevel:
                            type: string
                          noDelay:
                            type: boolean
                          rate:
                            type: string
                          rejectCode:
                            type: integer
                          zoneSize:
                            type: string
                        type: object
                      waf:
                        description: WAF defines an WAF policy.
                        properties:
                          apPolicy:
                            type: string
                          enable:
                            type: boolean
                          securityLog:
                            description: SecurityLog defines the security log of a
                              WAF policy.
                            properties:
                              apLogConf:
                                type: string
                              enable:
                                type: boolean
                              logDest:
                                type: string
                            type: object
                          securityLogs:
                            items:
                              description: SecurityLog defines the security log of
                                a WAF policy.
                              properties:
                                apLogConf:
                                  type: string
                                enable:
                                  type: boolean
                                logDest:
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  status:
                    description: PolicyStatus is the status of the policy resource
                    properties:
                      message:
                        type: string
                      reason:
                        type: string
                      state:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: Policy defines a Policy for VirtualServer and VirtualServerRoute
                  resources.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: PolicySpec is the spec of the Policy resource. The
                      spec includes multiple fields, where each field represents a
                      different policy. Only one policy (field) is allowed.
                    properties:
                      accessControl:
                        description: AccessControl defines an access policy based
                          on the source IP of a request.
                        properties:
                          allow:
                            items:
                              type: string
                            type: array
                          deny:
                            items:
                              type: string
                            type: array
                        type: object
                      egressMTLS:
                        description: EgressMTLS defines an Egress MTLS policy.
                        properties:
                          ciphers:
                            type: string
                          protocols:
                            type: string
                          serverName:
                            type: boolean
                          sessionReuse:
                            type: boolean
                          sslName:
                            type: string
                          tlsSecret:
                            type: string
                          trustedCertSecret:
                            type: string
                          verifyDepth:
                            type: integer
                          verifyServer:
                            type: boolean
                        type: object
                      ingressMTLS:
                        description: IngressMTLS defines an Ingress MTLS policy.
                        properties:
                          clientCertSecret:
                            type: string
                          verifyClient:
                            type: string
                          verifyDepth:
                            type: integer
                        type: object
                      jwt:
                        description: JWTAuth holds JWT authentication configuration.
                        properties:
                          realm:
                            type: string
                          secret:
                            type: string
                          token:
                            type: string
                        type: object
                      rateLimit:
                        description: RateLimit defines a rate limit policy.
                        properties:
                          burst:
                            type: integer
                          delay:
                            type: integer
                          dryRun:
                            type: boolean
                          key:
                            type: string
                          logLevel:
                            type: string
                          noDelay:
                            type: boolean
                          rate:
                            type: string
                          rejectCode:
                            type: integer
                          zoneSize:
                            type: string
                        type: object
                    type: object
                type: object
            served: true
            storage: false
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: transportservers.k8s.nginx.org
        spec:
          group: k8s.nginx.org
          names:
            kind: TransportServer
            listKind: TransportServerList
            plural: transportservers
            shortNames:
            - ts
            singular: transportserver
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Current state of the TransportServer. If the resource has
                a valid status, it means it has been validated and accepted by the
                Ingress Controller.
              jsonPath: .status.state
              name: State
              type: string
            - jsonPath: .status.reason
              name: Reason
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: TransportServer defines the TransportServer resource.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: TransportServerSpec is the spec of the TransportServer
                      resource.
                    properties:
                      action:
                        description: Action defines an action.
                        properties:
                          pass:
                            type: string
                        type: object
                      host:
                        type: string
                      ingressClassName:
                        type: string
                      listener:
                        description: TransportServerListener defines a listener for
                          a TransportServer.
                        properties:
                          name:
                            type: string
                          protocol:
                            type: string
                        type: object
                      serverSnippets:
                        type: string
                      sessionParameters:
                        description: SessionParameters defines session parameters.
                        properties:
                          timeout:
                            type: string
                        type: object
                      streamSnippets:
                        type: string
                      upstreamParameters:
                        description: UpstreamParameters defines parameters for an
                          upstream.
                        properties:
                          connectTimeout:
                            type: string
                          nextUpstream:
                            type: boolean
                          nextUpstreamTimeout:
                            type: string
                          nextUpstreamTries:
                            type: integer
                          udpRequests:
                            type: integer
                          udpResponses:
                            type: integer
                        type: object
                      upstreams:
                        items:
                          description: Upstream defines an upstream.
                          properties:
                            failTimeout:
                              type: string
                            healthCheck:
                              description: HealthCheck defines the parameters for
                                active Upstream HealthChecks.
                              properties:
                                enable:
                                  type: boolean
                                fails:
                                  type: integer
                                interval:
                                  type: string
                                jitter:
                                  type: string
                                match:
                                  description: Match defines the parameters of a custom
                                    health check.
                                  properties:
                                    expect:
                                      type: string
                                    send:
                                      type: string
                                  type: object
                                passes:
                                  type: integer
                                port:
                                  type: integer
                                timeout:
                                  type: string
                              type: object
                            loadBalancingMethod:
                              type: string
                            maxConns:
                              type: integer
                            maxFails:
                              type: integer
                            name:
                              type: string
                            port:
                              type: integer
                            service:
                              type: string
                          type: object
                        type: array
                    type: object
                  status:
                    description: TransportServerStatus defines the status for the
                      TransportServer resource.
                    properties:
                      message:
                        type: string
                      reason:
                        type: string
                      state:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: virtualserverroutes.k8s.nginx.org
        spec:
          group: k8s.nginx.org
          names:
            kind: VirtualServerRoute
            listKind: VirtualServerRouteList
            plural: virtualserverroutes
            shortNames:
            - vsr
            singular: virtualserverroute
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Current state of the VirtualServerRoute. If the resource
                has a valid status, it means it has been validated and accepted by
                the Ingress Controller.
              jsonPath: .status.state
              name: State
              type: string
            - jsonPath: .spec.host
              name: Host
              type: string
            - jsonPath: .status.externalEndpoints[*].ip
              name: IP
              type: string
            - jsonPath: .status.externalEndpoints[*].hostname
              name: ExternalHostname
              priority: 1
              type: string
            - jsonPath: .status.externalEndpoints[*].ports
              name: Ports
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                description: VirtualServerRoute defines the VirtualServerRoute resource.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: VirtualServerRouteSpec is the spec of the VirtualServerRoute
                      resource.
                    properties:
                      host:
                        type: string
                      ingressClassName:
                        type: string
                      subroutes:
                        items:
                          description: Route defines a route.
                          properties:
                            action:
                              description: Action defines an action.
                              properties:
                                pass:
                                  type: string
                                proxy:
                                  description: ActionProxy defines a proxy in an Action.
                                  properties:
                                    requestHeaders:
                                      description: ProxyRequestHeaders defines the
                                        request headers manipulation in an ActionProxy.
                                      properties:
                                        pass:
                                          type: boolean
                                        set:
                                          items:
                                            description: Header defines an HTTP Header.
                                            properties:
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    responseHeaders:
                                      description: ProxyResponseHeaders defines the
                                        response headers manipulation in an ActionProxy.
                                      properties:
                                        add:
                                          items:
                                            description: AddHeader defines an HTTP
                                              Header with an optional Always field
                                              to use with the add_header NGINX directive.
                                            properties:
                                              always:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            type: object
                                          type: array
                                        hide:
                                          items:
                                            type: string
                                          type: array
                                        ignore:
                                          items:
                                            type: string
                                          type: array
                                        pass:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    rewritePath:
                                      type: string
                                    upstream:
                                      type: string
                                  type: object
                                redirect:
                                  description: ActionRedirect defines a redirect in
                                    an Action.
                                  properties:
                                    code:
                                      type: integer
                                    url:
                                      type: string
                                  type: object
                                return:
                                  description: ActionReturn defines a return in an
                                    Action.
                                  properties:
                                    body:
                                      type: string
                                    code:
                                      type: integer
                                    type:
                                      type: string
                                  type: object
                              type: object
                            dos:
                              type: string
                            errorPages:
                              items:
                                description: ErrorPage defines an ErrorPage in a Route.
                                properties:
                                  codes:
                                    items:
                                      type: integer
                                    type: array
                                  redirect:
                                    description: ErrorPageRedirect defines a redirect
                                      for an ErrorPage.
                                    properties:
                                      code:
                                        type: integer
                                      url:
                                        type: string
                                    type: object
                                  return:
                                    description: ErrorPageReturn defines a return
                                      for an ErrorPage.
                                    properties:
                                      body:
                                        type: string
                                      code:
                                        type: integer
                                      headers:
                                        items:
                                          description: Header defines an HTTP Header.
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          type: object
                                        type: array
                                      type:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            location-snippets:
                              type: string
                            matches:
                              items:
                                description: Match defines a match.
                                properties:
                                  action:
                                    description: Action defines an action.
                                    properties:
                                      pass:
                                        type: string
                                      proxy:
                                        description: ActionProxy defines a proxy in
                                          an Action.
                                        properties:
                                          requestHeaders:
                                            description: ProxyRequestHeaders defines
                                              the request headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              pass:
                                                type: boolean
                                              set:
                                                items:
                                                  description: Header defines an HTTP
                                                    Header.
                                                  properties:
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          responseHeaders:
                                            description: ProxyResponseHeaders defines
                                              the response headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              add:
                                                items:
                                                  description: AddHeader defines an
                                                    HTTP Header with an optional Always
                                                    field to use with the add_header
                                                    NGINX directive.
                                                  properties:
                                                    always:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                              hide:
                                                items:
                                                  type: string
                                                type: array
                                              ignore:
                                                items:
                                                  type: string
                                                type: array
                                              pass:
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          rewritePath:
                                            type: string
                                          upstream:
                                            type: string
                                        type: object
                                      redirect:
                                        description: ActionRedirect defines a redirect
                                          in an Action.
                                        properties:
                                          code:
                                            type: integer
                                          url:
                                            type: string
                                        type: object
                                      return:
                                        description: ActionReturn defines a return
                                          in an Action.
                                        properties:
                                          body:
                                            type: string
                                          code:
                                            type: integer
                                          type:
                                            type: string
                                        type: object
                                    type: object
                                  conditions:
                                    items:
                                      description: Condition defines a condition in
                                        a MatchRule.
                                      properties:
                                        argument:
                                          type: string
                                        cookie:
                                          type: string
                                        header:
                                          type: string
                                        value:
                                          type: string
                                        variable:
                                          type: string
                                      type: object
                                    type: array
                                  splits:
                                    items:
                                      description: Split defines a split.
                                      properties:
                                        action:
                                          description: Action defines an action.
                                          properties:
                                            pass:
                                              type: string
                                            proxy:
                                              description: ActionProxy defines a proxy
                                                in an Action.
                                              properties:
                                                requestHeaders:
                                                  description: ProxyRequestHeaders
                                                    defines the request headers manipulation
                                                    in an ActionProxy.
                                                  properties:
                                                    pass:
                                                      type: boolean
                                                    set:
                                                      items:
                                                        description: Header defines
                                                          an HTTP Header.
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                responseHeaders:
                                                  description: ProxyResponseHeaders
                                                    defines the response headers manipulation
                                                    in an ActionProxy.
                                                  properties:
                                                    add:
                                                      items:
                                                        description: AddHeader defines
                                                          an HTTP Header with an optional
                                                          Always field to use with
                                                          the add_header NGINX directive.
                                                        properties:
                                                          always:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    hide:
                                                      items:
                                                        type: string
                                                      type: array
                                                    ignore:
                                                      items:
                                                        type: string
                                                      type: array
                                                    pass:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                rewritePath:
                                                  type: string
                                                upstream:
                                                  type: string
                                              type: object
                                            redirect:
                                              description: ActionRedirect defines
                                                a redirect in an Action.
                                              properties:
                                                code:
                                                  type: integer
                                                url:
                                                  type: string
                                              type: object
                                            return:
                                              description: ActionReturn defines a
                                                return in an Action.
                                              properties:
                                                body:
                                                  type: string
                                                code:
                                                  type: integer
                                                type:
                                                  type: string
                                              type: object
                                          type: object
                                        weight:
                                          type: integer
                                      type: object
                                    type: array
                                type: object
                              type: array
                            path:
                              type: string
                            policies:
                              items:
                                description: PolicyReference references a policy by
                                  name and an optional namespace.
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              type: array
                            route:
                              type: string
                            splits:
                              items:
                                description: Split defines a split.
                                properties:
                                  action:
                                    description: Action defines an action.
                                    properties:
                                      pass:
                                        type: string
                                      proxy:
                                        description: ActionProxy defines a proxy in
                                          an Action.
                                        properties:
                                          requestHeaders:
                                            description: ProxyRequestHeaders defines
                                              the request headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              pass:
                                                type: boolean
                                              set:
                                                items:
                                                  description: Header defines an HTTP
                                                    Header.
                                                  properties:
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          responseHeaders:
                                            description: ProxyResponseHeaders defines
                                              the response headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              add:
                                                items:
                                                  description: AddHeader defines an
                                                    HTTP Header with an optional Always
                                                    field to use with the add_header
                                                    NGINX directive.
                                                  properties:
                                                    always:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                              hide:
                                                items:
                                                  type: string
                                                type: array
                                              ignore:
                                                items:
                                                  type: string
                                                type: array
                                              pass:
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          rewritePath:
                                            type: string
                                          upstream:
                                            type: string
                                        type: object
                                      redirect:
                                        description: ActionRedirect defines a redirect
                                          in an Action.
                                        properties:
                                          code:
                                            type: integer
                                          url:
                                            type: string
                                        type: object
                                      return:
                                        description: ActionReturn defines a return
                                          in an Action.
                                        properties:
                                          body:
                                            type: string
                                          code:
                                            type: integer
                                          type:
                                            type: string
                                        type: object
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                          type: object
                        type: array
                      upstreams:
                        items:
                          description: Upstream defines an upstream.
                          properties:
                            buffer-size:
                              type: string
                            buffering:
                              type: boolean
                            buffers:
                              description: UpstreamBuffers defines Buffer Configuration
                                for an Upstream.
                              properties:
                                number:
                                  type: integer
                                size:
                                  type: string
                              type: object
                            client-max-body-size:
                              type: string
                            connect-timeout:
                              type: string
                            fail-timeout:
                              type: string
                            healthCheck:
                              description: HealthCheck defines the parameters for
                                active Upstream HealthChecks.
                              properties:
                                connect-timeout:
                                  type: string
                                enable:
                                  type: boolean
                                fails:
                                  type: integer
                                grpcService:
                                  type: string
                                grpcStatus:
                                  type: integer
                                headers:
                                  items:
                                    description: Header defines an HTTP Header.
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                interval:
                                  type: string
                                jitter:
                                  type: string
                                mandatory:
                                  type: boolean
                                passes:
                                  type: integer
                                path:
                                  type: string
                                persistent:
                                  type: boolean
                                port:
                                  type: integer
                                read-timeout:
                                  type: string
                                send-timeout:
                                  type: string
                                statusMatch:
                                  type: string
                                tls:
                                  description: UpstreamTLS defines a TLS configuration
                                    for an Upstream.
                                  properties:
                                    enable:
                                      type: boolean
                                  type: object
                              type: object
                            keepalive:
                              type: integer
                            lb-method:
                              type: string
                            max-conns:
                              type: integer
                            max-fails:
                              type: integer
                            name:
                              type: string
                            next-upstream:
                              type: string
                            next-upstream-timeout:
                              type: string
                            next-upstream-tries:
                              type: integer
                            ntlm:
                              type: boolean
                            port:
                              type: integer
                            queue:
                              description: UpstreamQueue defines Queue Configuration
                                for an Upstream.
                              properties:
                                size:
                                  type: integer
                                timeout:
                                  type: string
                              type: object
                            read-timeout:
                              type: string
                            send-timeout:
                              type: string
                            service:
                              type: string
                            sessionCookie:
                              description: SessionCookie defines the parameters for
                                session persistence.
                              properties:
                                domain:
                                  type: string
                                enable:
                                  type: boolean
                                expires:
                                  type: string
                                httpOnly:
                                  type: boolean
                                name:
                                  type: string
                                path:
                                  type: string
                                secure:
                                  type: boolean
                              type: object
                            slow-start:
                              type: string
                            subselector:
                              additionalProperties:
                                type: string
                              type: object
                            tls:
                              description: UpstreamTLS defines a TLS configuration
                                for an Upstream.
                              properties:
                                enable:
                                  type: boolean
                              type: object
                            type:
                              type: string
                            use-cluster-ip:
                              type: boolean
                          type: object
                        type: array
                    type: object
                  status:
                    description: VirtualServerRouteStatus defines the status for the
                      VirtualServerRoute resource.
                    properties:
                      externalEndpoints:
                        items:
                          description: ExternalEndpoint defines the IP/ Hostname and
                            ports used to connect to this resource.
                          properties:
                            hostname:
                              type: string
                            ip:
                              type: string
                            ports:
                              type: string
                          type: object
                        type: array
                      message:
                        type: string
                      reason:
                        type: string
                      referencedBy:
                        type: string
                      state:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.10.0
          creationTimestamp: null
          name: virtualservers.k8s.nginx.org
        spec:
          group: k8s.nginx.org
          names:
            kind: VirtualServer
            listKind: VirtualServerList
            plural: virtualservers
            shortNames:
            - vs
            singular: virtualserver
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Current state of the VirtualServer. If the resource has
                a valid status, it means it has been validated and accepted by the
                Ingress Controller.
              jsonPath: .status.state
              name: State
              type: string
            - jsonPath: .spec.host
              name: Host
              type: string
            - jsonPath: .status.externalEndpoints[*].ip
              name: IP
              type: string
            - jsonPath: .status.externalEndpoints[*].hostname
              name: ExternalHostname
              priority: 1
              type: string
            - jsonPath: .status.externalEndpoints[*].ports
              name: Ports
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                description: VirtualServer defines the VirtualServer resource.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: VirtualServerSpec is the spec of the VirtualServer
                      resource.
                    properties:
                      dos:
                        type: string
                      externalDNS:
                        description: ExternalDNS defines externaldns sub-resource
                          of a virtual server.
                        properties:
                          enable:
                            type: boolean
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels stores labels defined for the Endpoint
                            type: object
                          providerSpecific:
                            description: ProviderSpecific stores provider specific
                              config
                            items:
                              description: ProviderSpecificProperty defines specific
                                property for using with ExternalDNS sub-resource.
                              properties:
                                name:
                                  description: Name of the property
                                  type: string
                                value:
                                  description: Value of the property
                                  type: string
                              type: object
                            type: array
                          recordTTL:
                            description: TTL for the record
                            format: int64
                            type: integer
                          recordType:
                            type: string
                        type: object
                      host:
                        type: string
                      http-snippets:
                        type: string
                      ingressClassName:
                        type: string
                      policies:
                        items:
                          description: PolicyReference references a policy by name
                            and an optional namespace.
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          type: object
                        type: array
                      routes:
                        items:
                          description: Route defines a route.
                          properties:
                            action:
                              description: Action defines an action.
                              properties:
                                pass:
                                  type: string
                                proxy:
                                  description: ActionProxy defines a proxy in an Action.
                                  properties:
                                    requestHeaders:
                                      description: ProxyRequestHeaders defines the
                                        request headers manipulation in an ActionProxy.
                                      properties:
                                        pass:
                                          type: boolean
                                        set:
                                          items:
                                            description: Header defines an HTTP Header.
                                            properties:
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    responseHeaders:
                                      description: ProxyResponseHeaders defines the
                                        response headers manipulation in an ActionProxy.
                                      properties:
                                        add:
                                          items:
                                            description: AddHeader defines an HTTP
                                              Header with an optional Always field
                                              to use with the add_header NGINX directive.
                                            properties:
                                              always:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            type: object
                                          type: array
                                        hide:
                                          items:
                                            type: string
                                          type: array
                                        ignore:
                                          items:
                                            type: string
                                          type: array
                                        pass:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    rewritePath:
                                      type: string
                                    upstream:
                                      type: string
                                  type: object
                                redirect:
                                  description: ActionRedirect defines a redirect in
                                    an Action.
                                  properties:
                                    code:
                                      type: integer
                                    url:
                                      type: string
                                  type: object
                                return:
                                  description: ActionReturn defines a return in an
                                    Action.
                                  properties:
                                    body:
                                      type: string
                                    code:
                                      type: integer
                                    type:
                                      type: string
                                  type: object
                              type: object
                            dos:
                              type: string
                            errorPages:
                              items:
                                description: ErrorPage defines an ErrorPage in a Route.
                                properties:
                                  codes:
                                    items:
                                      type: integer
                                    type: array
                                  redirect:
                                    description: ErrorPageRedirect defines a redirect
                                      for an ErrorPage.
                                    properties:
                                      code:
                                        type: integer
                                      url:
                                        type: string
                                    type: object
                                  return:
                                    description: ErrorPageReturn defines a return
                                      for an ErrorPage.
                                    properties:
                                      body:
                                        type: string
                                      code:
                                        type: integer
                                      headers:
                                        items:
                                          description: Header defines an HTTP Header.
                                          properties:
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          type: object
                                        type: array
                                      type:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            location-snippets:
                              type: string
                            matches:
                              items:
                                description: Match defines a match.
                                properties:
                                  action:
                                    description: Action defines an action.
                                    properties:
                                      pass:
                                        type: string
                                      proxy:
                                        description: ActionProxy defines a proxy in
                                          an Action.
                                        properties:
                                          requestHeaders:
                                            description: ProxyRequestHeaders defines
                                              the request headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              pass:
                                                type: boolean
                                              set:
                                                items:
                                                  description: Header defines an HTTP
                                                    Header.
                                                  properties:
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          responseHeaders:
                                            description: ProxyResponseHeaders defines
                                              the response headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              add:
                                                items:
                                                  description: AddHeader defines an
                                                    HTTP Header with an optional Always
                                                    field to use with the add_header
                                                    NGINX directive.
                                                  properties:
                                                    always:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                              hide:
                                                items:
                                                  type: string
                                                type: array
                                              ignore:
                                                items:
                                                  type: string
                                                type: array
                                              pass:
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          rewritePath:
                                            type: string
                                          upstream:
                                            type: string
                                        type: object
                                      redirect:
                                        description: ActionRedirect defines a redirect
                                          in an Action.
                                        properties:
                                          code:
                                            type: integer
                                          url:
                                            type: string
                                        type: object
                                      return:
                                        description: ActionReturn defines a return
                                          in an Action.
                                        properties:
                                          body:
                                            type: string
                                          code:
                                            type: integer
                                          type:
                                            type: string
                                        type: object
                                    type: object
                                  conditions:
                                    items:
                                      description: Condition defines a condition in
                                        a MatchRule.
                                      properties:
                                        argument:
                                          type: string
                                        cookie:
                                          type: string
                                        header:
                                          type: string
                                        value:
                                          type: string
                                        variable:
                                          type: string
                                      type: object
                                    type: array
                                  splits:
                                    items:
                                      description: Split defines a split.
                                      properties:
                                        action:
                                          description: Action defines an action.
                                          properties:
                                            pass:
                                              type: string
                                            proxy:
                                              description: ActionProxy defines a proxy
                                                in an Action.
                                              properties:
                                                requestHeaders:
                                                  description: ProxyRequestHeaders
                                                    defines the request headers manipulation
                                                    in an ActionProxy.
                                                  properties:
                                                    pass:
                                                      type: boolean
                                                    set:
                                                      items:
                                                        description: Header defines
                                                          an HTTP Header.
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                responseHeaders:
                                                  description: ProxyResponseHeaders
                                                    defines the response headers manipulation
                                                    in an ActionProxy.
                                                  properties:
                                                    add:
                                                      items:
                                                        description: AddHeader defines
                                                          an HTTP Header with an optional
                                                          Always field to use with
                                                          the add_header NGINX directive.
                                                        properties:
                                                          always:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    hide:
                                                      items:
                                                        type: string
                                                      type: array
                                                    ignore:
                                                      items:
                                                        type: string
                                                      type: array
                                                    pass:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                rewritePath:
                                                  type: string
                                                upstream:
                                                  type: string
                                              type: object
                                            redirect:
                                              description: ActionRedirect defines
                                                a redirect in an Action.
                                              properties:
                                                code:
                                                  type: integer
                                                url:
                                                  type: string
                                              type: object
                                            return:
                                              description: ActionReturn defines a
                                                return in an Action.
                                              properties:
                                                body:
                                                  type: string
                                                code:
                                                  type: integer
                                                type:
                                                  type: string
                                              type: object
                                          type: object
                                        weight:
                                          type: integer
                                      type: object
                                    type: array
                                type: object
                              type: array
                            path:
                              type: string
                            policies:
                              items:
                                description: PolicyReference references a policy by
                                  name and an optional namespace.
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              type: array
                            route:
                              type: string
                            splits:
                              items:
                                description: Split defines a split.
                                properties:
                                  action:
                                    description: Action defines an action.
                                    properties:
                                      pass:
                                        type: string
                                      proxy:
                                        description: ActionProxy defines a proxy in
                                          an Action.
                                        properties:
                                          requestHeaders:
                                            description: ProxyRequestHeaders defines
                                              the request headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              pass:
                                                type: boolean
                                              set:
                                                items:
                                                  description: Header defines an HTTP
                                                    Header.
                                                  properties:
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                            type: object
                                          responseHeaders:
                                            description: ProxyResponseHeaders defines
                                              the response headers manipulation in
                                              an ActionProxy.
                                            properties:
                                              add:
                                                items:
                                                  description: AddHeader defines an
                                                    HTTP Header with an optional Always
                                                    field to use with the add_header
                                                    NGINX directive.
                                                  properties:
                                                    always:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  type: object
                                                type: array
                                              hide:
                                                items:
                                                  type: string
                                                type: array
                                              ignore:
                                                items:
                                                  type: string
                                                type: array
                                              pass:
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          rewritePath:
                                            type: string
                                          upstream:
                                            type: string
                                        type: object
                                      redirect:
                                        description: ActionRedirect defines a redirect
                                          in an Action.
                                        properties:
                                          code:
                                            type: integer
                                          url:
                                            type: string
                                        type: object
                                      return:
                                        description: ActionReturn defines a return
                                          in an Action.
                                        properties:
                                          body:
                                            type: string
                                          code:
                                            type: integer
                                          type:
                                            type: string
                                        type: object
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                          type: object
                        type: array
                      server-snippets:
                        type: string
                      tls:
                        description: TLS defines TLS configuration for a VirtualServer.
                        properties:
                          cert-manager:
                            description: CertManager defines a cert manager config
                              for a TLS.
                            properties:
                              cluster-issuer:
                                type: string
                              common-name:
                                type: string
                              duration:
                                type: string
                              issuer:
                                type: string
                              issuer-group:
                                type: string
                              issuer-kind:
                                type: string
                              renew-before:
                                type: string
                              usages:
                                type: string
                            type: object
                          redirect:
                            description: TLSRedirect defines a redirect for a TLS.
                            properties:
                              basedOn:
                                type: string
                              code:
                                type: integer
                              enable:
                                type: boolean
                            type: object
                          secret:
                            type: string
                        type: object
                      upstreams:
                        items:
                          description: Upstream defines an upstream.
                          properties:
                            buffer-size:
                              type: string
                            buffering:
                              type: boolean
                            buffers:
                              description: UpstreamBuffers defines Buffer Configuration
                                for an Upstream.
                              properties:
                                number:
                                  type: integer
                                size:
                                  type: string
                              type: object
                            client-max-body-size:
                              type: string
                            connect-timeout:
                              type: string
                            fail-timeout:
                              type: string
                            healthCheck:
                              description: HealthCheck defines the parameters for
                                active Upstream HealthChecks.
                              properties:
                                connect-timeout:
                                  type: string
                                enable:
                                  type: boolean
                                fails:
                                  type: integer
                                grpcService:
                                  type: string
                                grpcStatus:
                                  type: integer
                                headers:
                                  items:
                                    description: Header defines an HTTP Header.
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                interval:
                                  type: string
                                jitter:
                                  type: string
                                mandatory:
                                  type: boolean
                                passes:
                                  type: integer
                                path:
                                  type: string
                                persistent:
                                  type: boolean
                                port:
                                  type: integer
                                read-timeout:
                                  type: string
                                send-timeout:
                                  type: string
                                statusMatch:
                                  type: string
                                tls:
                                  description: UpstreamTLS defines a TLS configuration
                                    for an Upstream.
                                  properties:
                                    enable:
                                      type: boolean
                                  type: object
                              type: object
                            keepalive:
                              type: integer
                            lb-method:
                              type: string
                            max-conns:
                              type: integer
                            max-fails:
                              type: integer
                            name:
                              type: string
                            next-upstream:
                              type: string
                            next-upstream-timeout:
                              type: string
                            next-upstream-tries:
                              type: integer
                            ntlm:
                              type: boolean
                            port:
                              type: integer
                            queue:
                              description: UpstreamQueue defines Queue Configuration
                                for an Upstream.
                              properties:
                                size:
                                  type: integer
                                timeout:
                                  type: string
                              type: object
                            read-timeout:
                              type: string
                            send-timeout:
                              type: string
                            service:
                              type: string
                            sessionCookie:
                              description: SessionCookie defines the parameters for
                                session persistence.
                              properties:
                                domain:
                                  type: string
                                enable:
                                  type: boolean
                                expires:
                                  type: string
                                httpOnly:
                                  type: boolean
                                name:
                                  type: string
                                path:
                                  type: string
                                secure:
                                  type: boolean
                              type: object
                            slow-start:
                              type: string
                            subselector:
                              additionalProperties:
                                type: string
                              type: object
                            tls:
                              description: UpstreamTLS defines a TLS configuration
                                for an Upstream.
                              properties:
                                enable:
                                  type: boolean
                              type: object
                            type:
                              type: string
                            use-cluster-ip:
                              type: boolean
                          type: object
                        type: array
                    type: object
                  status:
                    description: VirtualServerStatus defines the status for the VirtualServer
                      resource.
                    properties:
                      externalEndpoints:
                        items:
                          description: ExternalEndpoint defines the IP/ Hostname and
                            ports used to connect to this resource.
                          properties:
                            hostname:
                              type: string
                            ip:
                              type: string
                            ports:
                              type: string
                          type: object
                        type: array
                      message:
                        type: string
                      reason:
                        type: string
                      state:
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      destinationSelectors:
      - matchLabels:
          environment: dev
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: postgresql
      namespace: default
    spec:
      api:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresqls.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: postgresql
            plural: postgresqls
            singular: postgresql
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      dbName:
                        default: postgres
                        description: |
                          Database name. A database will be created with this name. The owner of the database will be the teamId.
                        type: string
                      env:
                        default: dev
                        description: |
                          Configures and deploys this PostgreSQL with environment specific configuration. Prod PostgreSQL are configured with backups and more resources.
                        pattern: ^(dev|prod)$
                        type: string
                      namespace:
                        default: default
                        description: |
                          Kubernetes namespace to create the Postgres cluster.
                        type: string
                      teamId:
                        default: acid
                        description: |
                          Team ID. A superuser role will be created with this name.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      dependencies:
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-pod
          namespace: default
        rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
        rules:
        - apiGroups:
          - acid.zalan.do
          resources:
          - postgresqls
          - postgresqls/status
          - operatorconfigurations
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - acid.zalan.do
          resources:
          - postgresteams
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - create
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - update
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/exec
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - statefulsets
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
        - apiGroups:
          - batch
          resources:
          - cronjobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - get
          - create
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - get
          - create
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: postgres-operator
        subjects:
        - kind: ServiceAccount
          name: postgres-operator
          namespace: default
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
        spec:
          ports:
          - port: 8080
            protocol: TCP
            targetPort: 8080
          selector:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/name: postgres-operator
          type: ClusterIP
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: postgres-operator
              app.kubernetes.io/name: postgres-operator
          template:
            metadata:
              annotations:
                checksum/config: 5e43e52b4f2db120d38d4727aadf7071bc5a3249e01f3ca89ed2c65b1fe4e227
              labels:
                app.kubernetes.io/instance: postgres-operator
                app.kubernetes.io/name: postgres-operator
            spec:
              affinity: {}
              containers:
              - env:
                - name: POSTGRES_OPERATOR_CONFIGURATION_OBJECT
                  value: postgres-operator
                image: registry.opensource.zalan.do/acid/postgres-operator:v1.8.2-43-g3e148ea5
                imagePullPolicy: IfNotPresent
                name: postgres-operator
                resources:
                  limits:
                    cpu: 500m
                    memory: 500Mi
                  requests:
                    cpu: 100m
                    memory: 250Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  runAsUser: 1000
              nodeSelector: {}
              serviceAccountName: postgres-operator
              tolerations: []
      - apiVersion: acid.zalan.do/v1
        configuration:
          aws_or_gcp:
            aws_region: eu-central-1
            enable_ebs_gp3_migration: false
          connection_pooler:
            connection_pooler_default_cpu_limit: "1"
            connection_pooler_default_cpu_request: 500m
            connection_pooler_default_memory_limit: 100Mi
            connection_pooler_default_memory_request: 100Mi
            connection_pooler_image: registry.opensource.zalan.do/acid/pgbouncer:master-22
            connection_pooler_max_db_connections: 60
            connection_pooler_mode: transaction
            connection_pooler_number_of_instances: 2
            connection_pooler_schema: pooler
            connection_pooler_user: pooler
          crd_categories:
          - all
          debug:
            debug_logging: true
            enable_database_access: true
          docker_image: registry.opensource.zalan.do/acid/spilo-14:2.1-p6
          enable_crd_registration: true
          enable_lazy_spilo_upgrade: false
          enable_pgversion_env_var: true
          enable_shm_volume: true
          enable_spilo_wal_path_compat: false
          etcd_host: ""
          kubernetes:
            cluster_domain: cluster.local
            cluster_labels:
              application: spilo
            cluster_name_label: cluster-name
            enable_cross_namespace_secret: false
            enable_init_containers: true
            enable_pod_antiaffinity: false
            enable_pod_disruption_budget: true
            enable_sidecars: true
            oauth_token_secret_name: postgres-operator
            pdb_name_format: postgres-{cluster}-pdb
            pod_antiaffinity_topology_key: kubernetes.io/hostname
            pod_management_policy: ordered_ready
            pod_role_label: spilo-role
            pod_service_account_name: postgres-pod
            pod_terminate_grace_period: 5m
            secret_name_template: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
            spilo_allow_privilege_escalation: true
            spilo_privileged: false
            storage_resize_mode: pvc
            watched_namespace: '*'
          load_balancer:
            db_hosted_zone: db.example.com
            enable_master_load_balancer: false
            enable_master_pooler_load_balancer: false
            enable_replica_load_balancer: false
            enable_replica_pooler_load_balancer: false
            external_traffic_policy: Cluster
            master_dns_name_format: '{cluster}.{team}.{hostedzone}'
            replica_dns_name_format: '{cluster}-repl.{team}.{hostedzone}'
          logging_rest_api:
            api_port: 8080
            cluster_history_entries: 1000
            ring_log_lines: 100
          logical_backup:
            logical_backup_docker_image: registry.opensource.zalan.do/acid/logical-backup:v1.8.0
            logical_backup_job_prefix: logical-backup-
            logical_backup_provider: s3
            logical_backup_s3_access_key_id: ""
            logical_backup_s3_bucket: my-bucket-url
            logical_backup_s3_endpoint: ""
            logical_backup_s3_region: ""
            logical_backup_s3_retention_time: ""
            logical_backup_s3_secret_access_key: ""
            logical_backup_s3_sse: AES256
            logical_backup_schedule: 30 00 * * *
          major_version_upgrade:
            major_version_upgrade_mode: "off"
            minimal_major_version: "9.6"
            target_major_version: "14"
          max_instances: -1
          min_instances: -1
          postgres_pod_resources:
            default_cpu_limit: "1"
            default_cpu_request: 100m
            default_memory_limit: 500Mi
            default_memory_request: 100Mi
            min_cpu_limit: 250m
            min_memory_limit: 250Mi
          repair_period: 5m
          resync_period: 30m
          teams_api:
            enable_admin_role_for_users: true
            enable_postgres_team_crd: false
            enable_postgres_team_crd_superusers: false
            enable_team_member_deprecation: false
            enable_team_superuser: false
            enable_teams_api: false
            pam_role_name: zalandos
            postgres_superuser_teams:
            - postgres_superusers
            protected_role_names:
            - admin
            - cron_admin
            role_deletion_suffix: _deleted
            team_admin_role: admin
            team_api_role_configuration:
              log_statement: all
          timeouts:
            patroni_api_check_interval: 1s
            patroni_api_check_timeout: 5s
            pod_deletion_wait_timeout: 10m
            pod_label_wait_timeout: 10m
            ready_wait_interval: 3s
            ready_wait_timeout: 30s
            resource_check_interval: 3s
            resource_check_timeout: 10m
          users:
            enable_password_rotation: false
            password_rotation_interval: 90
            password_rotation_user_retention: 180
            replication_username: standby
            super_username: postgres
          workers: 8
        kind: OperatorConfiguration
        metadata:
          labels:
            app.kubernetes.io/instance: postgres-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: postgres-operator
            helm.sh/chart: postgres-operator-1.8.2
          name: postgres-operator
          namespace: default
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: operatorconfigurations.acid.zalan.do
          namespace: default
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: OperatorConfiguration
            listKind: OperatorConfigurationList
            plural: operatorconfigurations
            shortNames:
            - opconfig
            singular: operatorconfiguration
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Spilo image to be used for Pods
              jsonPath: .configuration.docker_image
              name: Image
              type: string
            - description: Label for K8s resources created by operator
              jsonPath: .configuration.kubernetes.cluster_name_label
              name: Cluster-Label
              type: string
            - description: Name of service account to be used
              jsonPath: .configuration.kubernetes.pod_service_account_name
              name: Service-Account
              type: string
            - description: Minimum number of instances per Postgres cluster
              jsonPath: .configuration.min_instances
              name: Min-Instances
              type: integer
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  configuration:
                    properties:
                      aws_or_gcp:
                        properties:
                          additional_secret_mount:
                            type: string
                          additional_secret_mount_path:
                            default: /meta/credentials
                            type: string
                          aws_region:
                            default: eu-central-1
                            type: string
                          enable_ebs_gp3_migration:
                            default: false
                            type: boolean
                          enable_ebs_gp3_migration_max_size:
                            default: 1000
                            type: integer
                          gcp_credentials:
                            type: string
                          kube_iam_role:
                            type: string
                          log_s3_bucket:
                            type: string
                          wal_az_storage_account:
                            type: string
                          wal_gs_bucket:
                            type: string
                          wal_s3_bucket:
                            type: string
                        type: object
                      connection_pooler:
                        properties:
                          connection_pooler_default_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          connection_pooler_default_cpu_request:
                            default: 500m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          connection_pooler_default_memory_limit:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          connection_pooler_default_memory_request:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          connection_pooler_image:
                            default: registry.opensource.zalan.do/acid/pgbouncer:master-26
                            type: string
                          connection_pooler_max_db_connections:
                            default: 60
                            type: integer
                          connection_pooler_mode:
                            default: transaction
                            enum:
                            - session
                            - transaction
                            type: string
                          connection_pooler_number_of_instances:
                            default: 2
                            minimum: 1
                            type: integer
                          connection_pooler_schema:
                            default: pooler
                            type: string
                          connection_pooler_user:
                            default: pooler
                            type: string
                        type: object
                      crd_categories:
                        items:
                          type: string
                        nullable: true
                        type: array
                      debug:
                        properties:
                          debug_logging:
                            default: true
                            type: boolean
                          enable_database_access:
                            default: true
                            type: boolean
                        type: object
                      docker_image:
                        default: ghcr.io/zalando/spilo-15:2.1-p9
                        type: string
                      enable_crd_registration:
                        default: true
                        type: boolean
                      enable_crd_validation:
                        default: true
                        description: deprecated
                        type: boolean
                      enable_lazy_spilo_upgrade:
                        default: false
                        type: boolean
                      enable_pgversion_env_var:
                        default: true
                        type: boolean
                      enable_shm_volume:
                        default: true
                        type: boolean
                      enable_spilo_wal_path_compat:
                        default: false
                        type: boolean
                      enable_team_id_clustername_prefix:
                        default: false
                        type: boolean
                      etcd_host:
                        default: ""
                        type: string
                      ignore_instance_limits_annotation_key:
                        type: string
                      kubernetes:
                        properties:
                          additional_pod_capabilities:
                            items:
                              type: string
                            type: array
                          cluster_domain:
                            default: cluster.local
                            type: string
                          cluster_labels:
                            additionalProperties:
                              type: string
                            default:
                              application: spilo
                            type: object
                          cluster_name_label:
                            default: cluster-name
                            type: string
                          custom_pod_annotations:
                            additionalProperties:
                              type: string
                            type: object
                          delete_annotation_date_key:
                            type: string
                          delete_annotation_name_key:
                            type: string
                          downscaler_annotations:
                            items:
                              type: string
                            type: array
                          enable_cross_namespace_secret:
                            default: false
                            type: boolean
                          enable_init_containers:
                            default: true
                            type: boolean
                          enable_pod_antiaffinity:
                            default: false
                            type: boolean
                          enable_pod_disruption_budget:
                            default: true
                            type: boolean
                          enable_readiness_probe:
                            default: false
                            type: boolean
                          enable_sidecars:
                            default: true
                            type: boolean
                          ignored_annotations:
                            items:
                              type: string
                            type: array
                          infrastructure_roles_secret_name:
                            type: string
                          infrastructure_roles_secrets:
                            items:
                              properties:
                                defaultrolevalue:
                                  type: string
                                defaultuservalue:
                                  type: string
                                details:
                                  type: string
                                passwordkey:
                                  type: string
                                rolekey:
                                  type: string
                                secretname:
                                  type: string
                                template:
                                  type: boolean
                                userkey:
                                  type: string
                              required:
                              - secretname
                              - userkey
                              - passwordkey
                              type: object
                            nullable: true
                            type: array
                          inherited_annotations:
                            items:
                              type: string
                            type: array
                          inherited_labels:
                            items:
                              type: string
                            type: array
                          master_pod_move_timeout:
                            default: 20m
                            type: string
                          node_readiness_label:
                            additionalProperties:
                              type: string
                            type: object
                          node_readiness_label_merge:
                            enum:
                            - AND
                            - OR
                            type: string
                          oauth_token_secret_name:
                            default: postgresql-operator
                            type: string
                          pdb_name_format:
                            default: postgres-{cluster}-pdb
                            type: string
                          pod_antiaffinity_preferred_during_scheduling:
                            default: false
                            type: boolean
                          pod_antiaffinity_topology_key:
                            default: kubernetes.io/hostname
                            type: string
                          pod_environment_configmap:
                            type: string
                          pod_environment_secret:
                            type: string
                          pod_management_policy:
                            default: ordered_ready
                            enum:
                            - ordered_ready
                            - parallel
                            type: string
                          pod_priority_class_name:
                            type: string
                          pod_role_label:
                            default: spilo-role
                            type: string
                          pod_service_account_definition:
                            default: ""
                            type: string
                          pod_service_account_name:
                            default: postgres-pod
                            type: string
                          pod_service_account_role_binding_definition:
                            default: ""
                            type: string
                          pod_terminate_grace_period:
                            default: 5m
                            type: string
                          secret_name_template:
                            default: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
                            type: string
                          share_pgsocket_with_sidecars:
                            default: false
                            type: boolean
                          spilo_allow_privilege_escalation:
                            default: true
                            type: boolean
                          spilo_fsgroup:
                            type: integer
                          spilo_privileged:
                            default: false
                            type: boolean
                          spilo_runasgroup:
                            type: integer
                          spilo_runasuser:
                            type: integer
                          storage_resize_mode:
                            default: pvc
                            enum:
                            - ebs
                            - mixed
                            - pvc
                            - "off"
                            type: string
                          toleration:
                            additionalProperties:
                              type: string
                            type: object
                          watched_namespace:
                            type: string
                        type: object
                      kubernetes_use_configmaps:
                        default: false
                        type: boolean
                      load_balancer:
                        properties:
                          custom_service_annotations:
                            additionalProperties:
                              type: string
                            type: object
                          db_hosted_zone:
                            default: db.example.com
                            type: string
                          enable_master_load_balancer:
                            default: true
                            type: boolean
                          enable_master_pooler_load_balancer:
                            default: false
                            type: boolean
                          enable_replica_load_balancer:
                            default: false
                            type: boolean
                          enable_replica_pooler_load_balancer:
                            default: false
                            type: boolean
                          external_traffic_policy:
                            default: Cluster
                            enum:
                            - Cluster
                            - Local
                            type: string
                          master_dns_name_format:
                            default: '{cluster}.{namespace}.{hostedzone}'
                            type: string
                          master_legacy_dns_name_format:
                            default: '{cluster}.{team}.{hostedzone}'
                            type: string
                          replica_dns_name_format:
                            default: '{cluster}-repl.{namespace}.{hostedzone}'
                            type: string
                          replica_legacy_dns_name_format:
                            default: '{cluster}-repl.{team}.{hostedzone}'
                            type: string
                        type: object
                      logging_rest_api:
                        properties:
                          api_port:
                            default: 8080
                            type: integer
                          cluster_history_entries:
                            default: 1000
                            type: integer
                          ring_log_lines:
                            default: 100
                            type: integer
                        type: object
                      logical_backup:
                        properties:
                          logical_backup_azure_storage_account_key:
                            type: string
                          logical_backup_azure_storage_account_name:
                            type: string
                          logical_backup_azure_storage_container:
                            type: string
                          logical_backup_cpu_limit:
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          logical_backup_cpu_request:
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          logical_backup_docker_image:
                            default: registry.opensource.zalan.do/acid/logical-backup:v1.8.2
                            type: string
                          logical_backup_google_application_credentials:
                            type: string
                          logical_backup_job_prefix:
                            default: logical-backup-
                            type: string
                          logical_backup_memory_limit:
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          logical_backup_memory_request:
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          logical_backup_provider:
                            default: s3
                            enum:
                            - az
                            - gcs
                            - s3
                            type: string
                          logical_backup_s3_access_key_id:
                            type: string
                          logical_backup_s3_bucket:
                            type: string
                          logical_backup_s3_endpoint:
                            type: string
                          logical_backup_s3_region:
                            type: string
                          logical_backup_s3_retention_time:
                            type: string
                          logical_backup_s3_secret_access_key:
                            type: string
                          logical_backup_s3_sse:
                            type: string
                          logical_backup_schedule:
                            default: 30 00 * * *
                            pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                            type: string
                        type: object
                      major_version_upgrade:
                        properties:
                          major_version_upgrade_mode:
                            default: "off"
                            type: string
                          major_version_upgrade_team_allow_list:
                            items:
                              type: string
                            type: array
                          minimal_major_version:
                            default: "11"
                            type: string
                          target_major_version:
                            default: "15"
                            type: string
                        type: object
                      max_instances:
                        default: -1
                        description: -1 = disabled
                        minimum: -1
                        type: integer
                      min_instances:
                        default: -1
                        description: -1 = disabled
                        minimum: -1
                        type: integer
                      patroni:
                        properties:
                          failsafe_mode:
                            default: false
                            type: boolean
                        type: object
                      postgres_pod_resources:
                        properties:
                          default_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          default_cpu_request:
                            default: 100m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          default_memory_limit:
                            default: 500Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          default_memory_request:
                            default: 100Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          max_cpu_request:
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          max_memory_request:
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          min_cpu_limit:
                            default: 250m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          min_memory_limit:
                            default: 250Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                        type: object
                      repair_period:
                        default: 5m
                        type: string
                      resync_period:
                        default: 30m
                        type: string
                      scalyr:
                        properties:
                          scalyr_api_key:
                            type: string
                          scalyr_cpu_limit:
                            default: "1"
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          scalyr_cpu_request:
                            default: 100m
                            pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                            type: string
                          scalyr_image:
                            type: string
                          scalyr_memory_limit:
                            default: 500Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          scalyr_memory_request:
                            default: 50Mi
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          scalyr_server_url:
                            default: https://upload.eu.scalyr.com
                            type: string
                        type: object
                      set_memory_request_to_limit:
                        default: false
                        type: boolean
                      sidecar_docker_images:
                        additionalProperties:
                          type: string
                        type: object
                      sidecars:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      teams_api:
                        properties:
                          enable_admin_role_for_users:
                            default: true
                            type: boolean
                          enable_postgres_team_crd:
                            default: true
                            type: boolean
                          enable_postgres_team_crd_superusers:
                            default: false
                            type: boolean
                          enable_team_member_deprecation:
                            default: false
                            type: boolean
                          enable_team_superuser:
                            default: false
                            type: boolean
                          enable_teams_api:
                            default: true
                            type: boolean
                          pam_configuration:
                            default: https://info.example.com/oauth2/tokeninfo?access_token=
                              uid realm=/employees
                            type: string
                          pam_role_name:
                            default: zalandos
                            type: string
                          postgres_superuser_teams:
                            items:
                              type: string
                            type: array
                          protected_role_names:
                            default:
                            - admin
                            - cron_admin
                            items:
                              type: string
                            type: array
                          role_deletion_suffix:
                            default: _deleted
                            type: string
                          team_admin_role:
                            default: admin
                            type: string
                          team_api_role_configuration:
                            additionalProperties:
                              type: string
                            default:
                              log_statement: all
                            type: object
                          teams_api_url:
                            default: https://teams.example.com/api/
                            type: string
                        type: object
                      timeouts:
                        properties:
                          patroni_api_check_interval:
                            default: 1s
                            type: string
                          patroni_api_check_timeout:
                            default: 5s
                            type: string
                          pod_deletion_wait_timeout:
                            default: 10m
                            type: string
                          pod_label_wait_timeout:
                            default: 10m
                            type: string
                          ready_wait_interval:
                            default: 4s
                            type: string
                          ready_wait_timeout:
                            default: 30s
                            type: string
                          resource_check_interval:
                            default: 3s
                            type: string
                          resource_check_timeout:
                            default: 10m
                            type: string
                        type: object
                      users:
                        properties:
                          additional_owner_roles:
                            items:
                              type: string
                            nullable: true
                            type: array
                          enable_password_rotation:
                            default: false
                            type: boolean
                          password_rotation_interval:
                            default: 90
                            type: integer
                          password_rotation_user_retention:
                            default: 180
                            type: integer
                          replication_username:
                            default: standby
                            type: string
                          super_username:
                            default: postgres
                            type: string
                        type: object
                      workers:
                        default: 8
                        minimum: 1
                        type: integer
                    type: object
                  kind:
                    enum:
                    - OperatorConfiguration
                    type: string
                  status:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - kind
                - apiVersion
                - configuration
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresqls.acid.zalan.do
          namespace: default
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: postgresql
            listKind: postgresqlList
            plural: postgresqls
            shortNames:
            - pg
            singular: postgresql
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - description: Team responsible for Postgres cluster
              jsonPath: .spec.teamId
              name: Team
              type: string
            - description: PostgreSQL version
              jsonPath: .spec.postgresql.version
              name: Version
              type: string
            - description: Number of Pods per Postgres cluster
              jsonPath: .spec.numberOfInstances
              name: Pods
              type: integer
            - description: Size of the bound volume
              jsonPath: .spec.volume.size
              name: Volume
              type: string
            - description: Requested CPU for Postgres containers
              jsonPath: .spec.resources.requests.cpu
              name: CPU-Request
              type: string
            - description: Requested memory for Postgres containers
              jsonPath: .spec.resources.requests.memory
              name: Memory-Request
              type: string
            - jsonPath: .metadata.creationTimestamp
              name: Age
              type: date
            - description: Current sync status of postgresql resource
              jsonPath: .status.PostgresClusterStatus
              name: Status
              type: string
            name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  kind:
                    enum:
                    - postgresql
                    type: string
                  spec:
                    properties:
                      additionalVolumes:
                        items:
                          properties:
                            mountPath:
                              type: string
                            name:
                              type: string
                            subPath:
                              type: string
                            targetContainers:
                              items:
                                type: string
                              nullable: true
                              type: array
                            volumeSource:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                          - name
                          - mountPath
                          - volumeSource
                          type: object
                        type: array
                      allowedSourceRanges:
                        items:
                          pattern: ^(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\/(\d|[1-2]\d|3[0-2])$
                          type: string
                        nullable: true
                        type: array
                      clone:
                        properties:
                          cluster:
                            type: string
                          s3_access_key_id:
                            type: string
                          s3_endpoint:
                            type: string
                          s3_force_path_style:
                            type: boolean
                          s3_secret_access_key:
                            type: string
                          s3_wal_path:
                            type: string
                          timestamp:
                            pattern: ^([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(([+-]([01][0-9]|2[0-3]):[0-5][0-9]))$
                            type: string
                          uid:
                            format: uuid
                            type: string
                        required:
                        - cluster
                        type: object
                      connectionPooler:
                        properties:
                          dockerImage:
                            type: string
                          maxDBConnections:
                            type: integer
                          mode:
                            enum:
                            - session
                            - transaction
                            type: string
                          numberOfInstances:
                            minimum: 1
                            type: integer
                          resources:
                            properties:
                              limits:
                                properties:
                                  cpu:
                                    pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                    type: string
                                  memory:
                                    pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                    type: string
                                type: object
                              requests:
                                properties:
                                  cpu:
                                    pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                    type: string
                                  memory:
                                    pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                    type: string
                                type: object
                            type: object
                          schema:
                            type: string
                          user:
                            type: string
                        type: object
                      databases:
                        additionalProperties:
                          type: string
                        type: object
                      dockerImage:
                        type: string
                      enableConnectionPooler:
                        type: boolean
                      enableLogicalBackup:
                        type: boolean
                      enableMasterLoadBalancer:
                        type: boolean
                      enableMasterPoolerLoadBalancer:
                        type: boolean
                      enableReplicaConnectionPooler:
                        type: boolean
                      enableReplicaLoadBalancer:
                        type: boolean
                      enableReplicaPoolerLoadBalancer:
                        type: boolean
                      enableShmVolume:
                        type: boolean
                      env:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      init_containers:
                        description: deprecated
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      initContainers:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      logicalBackupSchedule:
                        pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                        type: string
                      maintenanceWindows:
                        items:
                          pattern: ^\ *((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\d):([0-5]?\d)|(2[0-3]|[01]?\d):([0-5]?\d))-((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\d):([0-5]?\d)|(2[0-3]|[01]?\d):([0-5]?\d))\
                            *$
                          type: string
                        type: array
                      masterServiceAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      nodeAffinity:
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            items:
                              properties:
                                preference:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            properties:
                              nodeSelectorTerms:
                                items:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      numberOfInstances:
                        minimum: 0
                        type: integer
                      patroni:
                        properties:
                          failsafe_mode:
                            type: boolean
                          initdb:
                            additionalProperties:
                              type: string
                            type: object
                          loop_wait:
                            type: integer
                          maximum_lag_on_failover:
                            type: integer
                          pg_hba:
                            items:
                              type: string
                            type: array
                          retry_timeout:
                            type: integer
                          slots:
                            additionalProperties:
                              additionalProperties:
                                type: string
                              type: object
                            type: object
                          synchronous_mode:
                            type: boolean
                          synchronous_mode_strict:
                            type: boolean
                          synchronous_node_count:
                            type: integer
                          ttl:
                            type: integer
                        type: object
                      pod_priority_class_name:
                        description: deprecated
                        type: string
                      podAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      podPriorityClassName:
                        type: string
                      postgresql:
                        properties:
                          parameters:
                            additionalProperties:
                              type: string
                            type: object
                          version:
                            enum:
                            - "10"
                            - "11"
                            - "12"
                            - "13"
                            - "14"
                            - "15"
                            type: string
                        required:
                        - version
                        type: object
                      preparedDatabases:
                        additionalProperties:
                          properties:
                            defaultUsers:
                              type: boolean
                            extensions:
                              additionalProperties:
                                type: string
                              type: object
                            schemas:
                              additionalProperties:
                                properties:
                                  defaultRoles:
                                    type: boolean
                                  defaultUsers:
                                    type: boolean
                                type: object
                              type: object
                            secretNamespace:
                              type: string
                          type: object
                        type: object
                      replicaLoadBalancer:
                        description: deprecated
                        type: boolean
                      replicaServiceAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      resources:
                        properties:
                          limits:
                            properties:
                              cpu:
                                pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                type: string
                              memory:
                                pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                type: string
                            type: object
                          requests:
                            properties:
                              cpu:
                                pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                                type: string
                              memory:
                                pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                                type: string
                            type: object
                        type: object
                      schedulerName:
                        type: string
                      serviceAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      sidecars:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        nullable: true
                        type: array
                      spiloFSGroup:
                        type: integer
                      spiloRunAsGroup:
                        type: integer
                      spiloRunAsUser:
                        type: integer
                      standby:
                        oneOf:
                        - required:
                          - s3_wal_path
                        - required:
                          - gs_wal_path
                        - required:
                          - standby_host
                        properties:
                          gs_wal_path:
                            type: string
                          s3_wal_path:
                            type: string
                          standby_host:
                            type: string
                          standby_port:
                            type: string
                        type: object
                      streams:
                        items:
                          properties:
                            applicationId:
                              type: string
                            batchSize:
                              type: integer
                            database:
                              type: string
                            filter:
                              additionalProperties:
                                type: string
                              type: object
                            tables:
                              additionalProperties:
                                properties:
                                  eventType:
                                    type: string
                                  idColumn:
                                    type: string
                                  payloadColumn:
                                    type: string
                                required:
                                - eventType
                                type: object
                              type: object
                          required:
                          - applicationId
                          - database
                          - tables
                          type: object
                        type: array
                      teamId:
                        type: string
                      tls:
                        properties:
                          caFile:
                            type: string
                          caSecretName:
                            type: string
                          certificateFile:
                            type: string
                          privateKeyFile:
                            type: string
                          secretName:
                            type: string
                        required:
                        - secretName
                        type: object
                      tolerations:
                        items:
                          properties:
                            effect:
                              enum:
                              - NoExecute
                              - NoSchedule
                              - PreferNoSchedule
                              type: string
                            key:
                              type: string
                            operator:
                              enum:
                              - Equal
                              - Exists
                              type: string
                            tolerationSeconds:
                              type: integer
                            value:
                              type: string
                          type: object
                        type: array
                      useLoadBalancer:
                        description: deprecated
                        type: boolean
                      users:
                        additionalProperties:
                          items:
                            enum:
                            - bypassrls
                            - BYPASSRLS
                            - nobypassrls
                            - NOBYPASSRLS
                            - createdb
                            - CREATEDB
                            - nocreatedb
                            - NOCREATEDB
                            - createrole
                            - CREATEROLE
                            - nocreaterole
                            - NOCREATEROLE
                            - inherit
                            - INHERIT
                            - noinherit
                            - NOINHERIT
                            - login
                            - LOGIN
                            - nologin
                            - NOLOGIN
                            - replication
                            - REPLICATION
                            - noreplication
                            - NOREPLICATION
                            - superuser
                            - SUPERUSER
                            - nosuperuser
                            - NOSUPERUSER
                            type: string
                          nullable: true
                          type: array
                        type: object
                      usersWithInPlaceSecretRotation:
                        items:
                          type: string
                        nullable: true
                        type: array
                      usersWithSecretRotation:
                        items:
                          type: string
                        nullable: true
                        type: array
                      volume:
                        properties:
                          iops:
                            type: integer
                          selector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      enum:
                                      - DoesNotExist
                                      - Exists
                                      - In
                                      - NotIn
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          size:
                            pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                            type: string
                          storageClass:
                            type: string
                          subPath:
                            type: string
                          throughput:
                            type: integer
                        required:
                        - size
                        type: object
                    required:
                    - numberOfInstances
                    - teamId
                    - postgresql
                    - volume
                    type: object
                  status:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - kind
                - apiVersion
                - spec
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: postgresteams.acid.zalan.do
          namespace: default
        spec:
          group: acid.zalan.do
          names:
            categories:
            - all
            kind: PostgresTeam
            listKind: PostgresTeamList
            plural: postgresteams
            shortNames:
            - pgteam
            singular: postgresteam
          scope: Namespaced
          versions:
          - name: v1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    enum:
                    - acid.zalan.do/v1
                    type: string
                  kind:
                    enum:
                    - PostgresTeam
                    type: string
                  spec:
                    properties:
                      additionalMembers:
                        additionalProperties:
                          description: List of users who will also be added to the
                            Postgres cluster
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional users
                        type: object
                      additionalSuperuserTeams:
                        additionalProperties:
                          description: List of teams to become Postgres superusers
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional superuser
                          teams
                        type: object
                      additionalTeams:
                        additionalProperties:
                          description: List of teams whose members will also be added
                            to the Postgres cluster
                          items:
                            type: string
                          nullable: true
                          type: array
                        description: Map for teamId and associated additional teams
                        type: object
                    type: object
                required:
                - kind
                - apiVersion
                - spec
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      destinationSelectors:
      - matchLabels:
          environment: dev
      workflows:
        resource:
          configure:
          - apiVersion: platform.kratix.io/v1alpha1
            kind: Pipeline
            metadata:
              name: instance-configure
              namespace: default
            spec:
              containers:
              - image: ghcr.io/syntasso/promise-postgresql/postgresql-configure-pipeline:v0.1.0
                name: postgresql-configure-pipeline
              - image: ghcr.io/syntasso/kratix-marketplace/pipeline-destination-image:v0.1.0
                name: add-destination
    status: {}
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      creationTimestamp: null
      name: redis
      namespace: default
    spec:
      api:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: redis.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: redis
            plural: redis
            singular: redis
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      size:
                        default: small
                        description: |
                          Size of this Redis deployment. If small, it deploy redis with a single replica; if large, deploy redis with 3 replicas.
                        pattern: ^(small|large)$
                        type: string
                    type: object
                type: object
            served: true
            storage: true
      dependencies:
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app: redisoperator
          name: redisoperator
          namespace: default
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: redisoperator
          strategy:
            type: RollingUpdate
          template:
            metadata:
              labels:
                app: redisoperator
            spec:
              containers:
              - image: quay.io/spotahome/redis-operator:v1.2.4
                imagePullPolicy: IfNotPresent
                name: app
                resources:
                  limits:
                    cpu: 100m
                    memory: 50Mi
                  requests:
                    cpu: 10m
                    memory: 50Mi
                securityContext:
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  runAsUser: 1000
              restartPolicy: Always
              serviceAccountName: redisoperator
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: redisoperator
          namespace: default
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: redisoperator
        subjects:
        - kind: ServiceAccount
          name: redisoperator
          namespace: default
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: redisoperator
          namespace: default
        rules:
        - apiGroups:
          - databases.spotahome.com
          resources:
          - redisfailovers
          - redisfailovers/finalizers
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - events
          - configmaps
          - persistentvolumeclaims
          - persistentvolumeclaims/finalizers
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - '*'
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - '*'
      - apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: redisoperator
          namespace: default
      - apiVersion: v1
        kind: Service
        metadata:
          annotations:
            prometheus.io/path: /metrics
            prometheus.io/port: http
            prometheus.io/scrape: "true"
          labels:
            app: redisoperator
          name: redisoperator
          namespace: default
        spec:
          ports:
          - name: metrics
            port: 9710
            protocol: TCP
            targetPort: metrics
          selector:
            app: redisoperator
          type: ClusterIP
      - apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: (devel)
          creationTimestamp: null
          name: redisfailovers.databases.spotahome.com
          namespace: default
        spec:
          group: databases.spotahome.com
          names:
            kind: RedisFailover
            listKind: RedisFailoverList
            plural: redisfailovers
            shortNames:
            - rf
            singular: redisfailover
          scope: Namespaced
          versions:
          - additionalPrinterColumns:
            - jsonPath: .metadata.name
              name: NAME
              type: string
            - jsonPath: .spec.redis.replicas
              name: REDIS
              type: integer
            - jsonPath: .spec.sentinel.replicas
              name: SENTINELS
              type: integer
            - jsonPath: .metadata.creationTimestamp
              name: AGE
              type: date
            name: v1
            schema:
              openAPIV3Schema:
                description: RedisFailover represents a Redis failover
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: RedisFailoverSpec represents a Redis failover spec
                    properties:
                      auth:
                        description: AuthSettings contains settings about auth
                        properties:
                          secretPath:
                            type: string
                        type: object
                      bootstrapNode:
                        description: BootstrapSettings contains settings about a potential
                          bootstrap node
                        properties:
                          allowSentinels:
                            type: boolean
                          host:
                            type: string
                          port:
                            type: string
                        type: object
                      labelWhitelist:
                        items:
                          type: string
                        type: array
                      redis:
                        description: RedisSettings defines the specification of the
                          redis cluster
                        properties:
                          affinity:
                            description: Affinity is a group of affinity scheduling
                              rules.
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node matches
                                      the corresponding matchExpressions; the node(s)
                                      with the highest sum are the most preferred.
                                    items:
                                      description: An empty preferred scheduling term
                                        matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling
                                        term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod
                                      from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node has
                                      pods which matches the corresponding podAffinityTerm;
                                      the node(s) with the highest sum are the most
                                      preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to a pod label update),
                                      the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the anti-affinity
                                      expressions specified by this field, but it
                                      may choose a node that violates one or more
                                      of the expressions. The node that is most preferred
                                      is the one with the greatest sum of weights,
                                      i.e. for each node that meets all of the scheduling
                                      requirements (resource request, requiredDuringScheduling
                                      anti-affinity expressions, etc.), compute a
                                      sum by iterating through the elements of this
                                      field and adding "weight" to the sum if the
                                      node has pods which matches the corresponding
                                      podAffinityTerm; the node(s) with the highest
                                      sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the anti-affinity requirements
                                      specified by this field are not met at scheduling
                                      time, the pod will not be scheduled onto the
                                      node. If the anti-affinity requirements specified
                                      by this field cease to be met at some point
                                      during pod execution (e.g. due to a pod label
                                      update), the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                            type: object
                          command:
                            items:
                              type: string
                            type: array
                          containerSecurityContext:
                            description: SecurityContext holds security configuration
                              that will be applied to a container. Some fields are
                              present in both SecurityContext and PodSecurityContext.  When
                              both are set, the values in SecurityContext take precedence.
                            properties:
                              allowPrivilegeEscalation:
                                description: 'AllowPrivilegeEscalation controls whether
                                  a process can gain more privileges than its parent
                                  process. This bool directly controls if the no_new_privs
                                  flag will be set on the container process. AllowPrivilegeEscalation
                                  is true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN Note that this field
                                  cannot be set when spec.os.name is windows.'
                                type: boolean
                              capabilities:
                                description: The capabilities to add/drop when running
                                  containers. Defaults to the default set of capabilities
                                  granted by the container runtime. Note that this
                                  field cannot be set when spec.os.name is windows.
                                properties:
                                  add:
                                    description: Added capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                  drop:
                                    description: Removed capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                type: object
                              privileged:
                                description: Run container in privileged mode. Processes
                                  in privileged containers are essentially equivalent
                                  to root on the host. Defaults to false. Note that
                                  this field cannot be set when spec.os.name is windows.
                                type: boolean
                              procMount:
                                description: procMount denotes the type of proc mount
                                  to use for the containers. The default is DefaultProcMount
                                  which uses the container runtime defaults for readonly
                                  paths and masked paths. This requires the ProcMountType
                                  feature flag to be enabled. Note that this field
                                  cannot be set when spec.os.name is windows.
                                type: string
                              readOnlyRootFilesystem:
                                description: Whether this container has a read-only
                                  root filesystem. Default is false. Note that this
                                  field cannot be set when spec.os.name is windows.
                                type: boolean
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name
                                  is windows.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence. Note that this field cannot be
                                  set when spec.os.name is windows.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  the container. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name
                                  is windows.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by this container.
                                  If seccomp options are provided at both the pod
                                  & container level, the container options override
                                  the pod options. Note that this field cannot be
                                  set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence. Note
                                  that this field cannot be set when spec.os.name
                                  is linux.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: HostProcess determines if a container
                                      should be run as a 'Host Process' container.
                                      This field is alpha-level and will only be honored
                                      by components that enable the WindowsHostProcessContainers
                                      feature flag. Setting this field without the
                                      feature flag will result in errors when validating
                                      the Pod. All of a Pod's containers must have
                                      the same effective HostProcess value (it is
                                      not allowed to have a mix of HostProcess containers
                                      and non-HostProcess containers).  In addition,
                                      if HostProcess is true then HostNetwork must
                                      also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                          customCommandRenames:
                            items:
                              description: RedisCommandRename defines the specification
                                of a "rename-command" configuration option
                              properties:
                                from:
                                  type: string
                                to:
                                  type: string
                              type: object
                            type: array
                          customConfig:
                            items:
                              type: string
                            type: array
                          dnsPolicy:
                            description: DNSPolicy defines how a pod's DNS will be
                              configured.
                            type: string
                          exporter:
                            description: Exporter defines the specification for the
                              redis/sentinel exporter
                            properties:
                              args:
                                items:
                                  type: string
                                type: array
                              containerSecurityContext:
                                description: SecurityContext holds security configuration
                                  that will be applied to a container. Some fields
                                  are present in both SecurityContext and PodSecurityContext.  When
                                  both are set, the values in SecurityContext take
                                  precedence.
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls
                                      whether a process can gain more privileges than
                                      its parent process. This bool directly controls
                                      if the no_new_privs flag will be set on the
                                      container process. AllowPrivilegeEscalation
                                      is true always when the container is: 1) run
                                      as Privileged 2) has CAP_SYS_ADMIN Note that
                                      this field cannot be set when spec.os.name is
                                      windows.'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when
                                      running containers. Defaults to the default
                                      set of capabilities granted by the container
                                      runtime. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      add:
                                        description: Added capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                    type: object
                                  privileged:
                                    description: Run container in privileged mode.
                                      Processes in privileged containers are essentially
                                      equivalent to root on the host. Defaults to
                                      false. Note that this field cannot be set when
                                      spec.os.name is windows.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc
                                      mount to use for the containers. The default
                                      is DefaultProcMount which uses the container
                                      runtime defaults for readonly paths and masked
                                      paths. This requires the ProcMountType feature
                                      flag to be enabled. Note that this field cannot
                                      be set when spec.os.name is windows.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only
                                      root filesystem. Default is false. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of
                                      the container process. Uses runtime default
                                      if unset. May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must
                                      run as a non-root user. If true, the Kubelet
                                      will validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and fail
                                      to start the container if it does. If unset
                                      or false, no such validation will be performed.
                                      May also be set in PodSecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of
                                      the container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified
                                      in SecurityContext takes precedence. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied
                                      to the container. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by this
                                      container. If seccomp options are provided at
                                      both the pod & container level, the container
                                      options override the pod options. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a
                                          profile defined in a file on the node should
                                          be used. The profile must be preconfigured
                                          on the node to work. Must be a descending
                                          path, relative to the kubelet's configured
                                          seccomp profile location. Must only be set
                                          if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of
                                          seccomp profile will be applied. Valid options
                                          are: \n Localhost - a profile defined in
                                          a file on the node should be used. RuntimeDefault
                                          - the container runtime default profile
                                          should be used. Unconfined - no profile
                                          should be applied."
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      from the PodSecurityContext will be used. If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName
                                          field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only
                                          be honored by components that enable the
                                          WindowsHostProcessContainers feature flag.
                                          Setting this field without the feature flag
                                          will result in errors when validating the
                                          Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it
                                          is not allowed to have a mix of HostProcess
                                          containers and non-HostProcess containers).  In
                                          addition, if HostProcess is true then HostNetwork
                                          must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both SecurityContext
                                          and PodSecurityContext, the value specified
                                          in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              enabled:
                                type: boolean
                              env:
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                type: string
                              imagePullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                type: string
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                            type: object
                          extraContainers:
                            items:
                              description: A single application container that you
                                want to run within a pod.
                              properties:
                                args:
                                  description: 'Arguments to the entrypoint. The container
                                    image''s CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using
                                    the container''s environment. If a variable cannot
                                    be resolved, the reference in the input string
                                    will be unchanged. Double $$ are reduced to a
                                    single $, which allows for escaping the $(VAR_NAME)
                                    syntax: i.e. "$$(VAR_NAME)" will produce the string
                                    literal "$(VAR_NAME)". Escaped references will
                                    never be expanded, regardless of whether the variable
                                    exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: 'Entrypoint array. Not executed within
                                    a shell. The container image''s ENTRYPOINT is
                                    used if this is not provided. Variable references
                                    $(VAR_NAME) are expanded using the container''s
                                    environment. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot
                                    be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: List of environment variables to set
                                    in the container. Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previously defined
                                          environment variables in the container and
                                          any service environment variables. If a
                                          variable cannot be resolved, the reference
                                          in the input string will be unchanged. Double
                                          $$ are reduced to a single $, which allows
                                          for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal
                                          "$(VAR_NAME)". Escaped references will never
                                          be expanded, regardless of whether the variable
                                          exists or not. Defaults to "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          fieldRef:
                                            description: 'Selects a field of the pod:
                                              supports metadata.name, metadata.namespace,
                                              `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                              spec.nodeName, spec.serviceAccountName,
                                              status.hostIP, status.podIP, status.podIPs.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              limits.ephemeral-storage, requests.cpu,
                                              requests.memory and requests.ephemeral-storage)
                                              are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                envFrom:
                                  description: List of sources to populate environment
                                    variables in the container. The keys defined within
                                    a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container
                                    is starting. When a key exists in multiple sources,
                                    the value associated with the last source will
                                    take precedence. Values defined by an Env with
                                    a duplicate key will take precedence. Cannot be
                                    updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                    type: object
                                  type: array
                                image:
                                  description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config
                                    management to default or override container images
                                    in workload controllers like Deployments and StatefulSets.'
                                  type: string
                                imagePullPolicy:
                                  description: 'Image pull policy. One of Always,
                                    Never, IfNotPresent. Defaults to Always if :latest
                                    tag is specified, or IfNotPresent otherwise. Cannot
                                    be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                  type: string
                                lifecycle:
                                  description: Actions that the management system
                                    should take in response to container lifecycle
                                    events. Cannot be updated.
                                  properties:
                                    postStart:
                                      description: 'PostStart is called immediately
                                        after a container is created. If the handler
                                        fails, the container is terminated and restarted
                                        according to its restart policy. Other management
                                        of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: 'PreStop is called immediately
                                        before a container is terminated due to an
                                        API request or management event such as liveness/startup
                                        probe failure, preemption, resource contention,
                                        etc. The handler is not called if the container
                                        crashes or exits. The Pod''s termination grace
                                        period countdown begins before the PreStop
                                        hook is executed. Regardless of the outcome
                                        of the handler, the container will eventually
                                        terminate within the Pod''s termination grace
                                        period (unless delayed by finalizers). Other
                                        management of the container blocks until the
                                        hook completes or until the termination grace
                                        period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: 'Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: Name of the container specified as
                                    a DNS_LABEL. Each container in a pod must have
                                    a unique name (DNS_LABEL). Cannot be updated.
                                  type: string
                                ports:
                                  description: List of ports to expose from the container.
                                    Exposing a port here gives the system additional
                                    information about the network connections a container
                                    uses, but is primarily informational. Not specifying
                                    a port here DOES NOT prevent that port from being
                                    exposed. Any port which is listening on the default
                                    "0.0.0.0" address inside a container will be accessible
                                    from the network. Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: Number of port to expose on the
                                          pod's IP address. This must be a valid port
                                          number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: Number of port to expose on the
                                          host. If specified, this must be a valid
                                          port number, 0 < x < 65536. If HostNetwork
                                          is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: If specified, this must be an
                                          IANA_SVC_NAME and unique within the pod.
                                          Each named port in a pod must have a unique
                                          name. Name for the port that can be referred
                                          to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: Protocol for port. Must be UDP,
                                          TCP, or SCTP. Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: 'Periodic probe of container service
                                    readiness. Container will be removed from service
                                    endpoints if the probe fails. Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                resources:
                                  description: 'Compute Resources required by this
                                    container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                  type: object
                                securityContext:
                                  description: 'SecurityContext defines the security
                                    options the container should be run with. If set,
                                    the fields of SecurityContext override the equivalent
                                    fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: 'AllowPrivilegeEscalation controls
                                        whether a process can gain more privileges
                                        than its parent process. This bool directly
                                        controls if the no_new_privs flag will be
                                        set on the container process. AllowPrivilegeEscalation
                                        is true always when the container is: 1) run
                                        as Privileged 2) has CAP_SYS_ADMIN Note that
                                        this field cannot be set when spec.os.name
                                        is windows.'
                                      type: boolean
                                    capabilities:
                                      description: The capabilities to add/drop when
                                        running containers. Defaults to the default
                                        set of capabilities granted by the container
                                        runtime. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                      type: object
                                    privileged:
                                      description: Run container in privileged mode.
                                        Processes in privileged containers are essentially
                                        equivalent to root on the host. Defaults to
                                        false. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: procMount denotes the type of proc
                                        mount to use for the containers. The default
                                        is DefaultProcMount which uses the container
                                        runtime defaults for readonly paths and masked
                                        paths. This requires the ProcMountType feature
                                        flag to be enabled. Note that this field cannot
                                        be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: Whether this container has a read-only
                                        root filesystem. Default is false. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: The GID to run the entrypoint of
                                        the container process. Uses runtime default
                                        if unset. May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: Indicates that the container must
                                        run as a non-root user. If true, the Kubelet
                                        will validate the image at runtime to ensure
                                        that it does not run as UID 0 (root) and fail
                                        to start the container if it does. If unset
                                        or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence.
                                      type: boolean
                                    runAsUser:
                                      description: The UID to run the entrypoint of
                                        the container process. Defaults to user specified
                                        in image metadata if unspecified. May also
                                        be set in PodSecurityContext.  If set in both
                                        SecurityContext and PodSecurityContext, the
                                        value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name
                                        is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: The SELinux context to be applied
                                        to the container. If unspecified, the container
                                        runtime will allocate a random SELinux context
                                        for each container.  May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: The seccomp options to use by this
                                        container. If seccomp options are provided
                                        at both the pod & container level, the container
                                        options override the pod options. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      properties:
                                        localhostProfile:
                                          description: localhostProfile indicates
                                            a profile defined in a file on the node
                                            should be used. The profile must be preconfigured
                                            on the node to work. Must be a descending
                                            path, relative to the kubelet's configured
                                            seccomp profile location. Must only be
                                            set if type is "Localhost".
                                          type: string
                                        type:
                                          description: "type indicates which kind
                                            of seccomp profile will be applied. Valid
                                            options are: \n Localhost - a profile
                                            defined in a file on the node should be
                                            used. RuntimeDefault - the container runtime
                                            default profile should be used. Unconfined
                                            - no profile should be applied."
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: The Windows specific settings applied
                                        to all containers. If unspecified, the options
                                        from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: GMSACredentialSpec is where
                                            the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                            inlines the contents of the GMSA credential
                                            spec named by the GMSACredentialSpecName
                                            field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: HostProcess determines if a
                                            container should be run as a 'Host Process'
                                            container. This field is alpha-level and
                                            will only be honored by components that
                                            enable the WindowsHostProcessContainers
                                            feature flag. Setting this field without
                                            the feature flag will result in errors
                                            when validating the Pod. All of a Pod's
                                            containers must have the same effective
                                            HostProcess value (it is not allowed to
                                            have a mix of HostProcess containers and
                                            non-HostProcess containers).  In addition,
                                            if HostProcess is true then HostNetwork
                                            must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: The UserName in Windows to
                                            run the entrypoint of the container process.
                                            Defaults to the user specified in image
                                            metadata if unspecified. May also be set
                                            in PodSecurityContext. If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: 'StartupProbe indicates that the Pod
                                    has successfully initialized. If specified, no
                                    other probes are executed until this completes
                                    successfully. If this probe fails, the Pod will
                                    be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters
                                    at the beginning of a Pod''s lifecycle, when it
                                    might take a long time to load data or warm a
                                    cache, than during steady-state operation. This
                                    cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: Whether this container should allocate
                                    a buffer for stdin in the container runtime. If
                                    this is not set, reads from stdin in the container
                                    will always result in EOF. Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: Whether the container runtime should
                                    close the stdin channel after it has been opened
                                    by a single attach. When stdin is true the stdin
                                    stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is
                                    opened on container start, is empty until the
                                    first client attaches to stdin, and then remains
                                    open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed
                                    until the container is restarted. If this flag
                                    is false, a container processes that reads from
                                    stdin will never receive an EOF. Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: 'Optional: Path at which the file to
                                    which the container''s termination message will
                                    be written is mounted into the container''s filesystem.
                                    Message written is intended to be brief final
                                    status, such as an assertion failure message.
                                    Will be truncated by the node if greater than
                                    4096 bytes. The total message length across all
                                    containers will be limited to 12kb. Defaults to
                                    /dev/termination-log. Cannot be updated.'
                                  type: string
                                terminationMessagePolicy:
                                  description: Indicate how the termination message
                                    should be populated. File will use the contents
                                    of terminationMessagePath to populate the container
                                    status message on both success and failure. FallbackToLogsOnError
                                    will use the last chunk of container log output
                                    if the termination message file is empty and the
                                    container exited with an error. The log output
                                    is limited to 2048 bytes or 80 lines, whichever
                                    is smaller. Defaults to File. Cannot be updated.
                                  type: string
                                tty:
                                  description: Whether this container should allocate
                                    a TTY for itself, also requires 'stdin' to be
                                    true. Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                volumeMounts:
                                  description: Pod volumes to mount into the container's
                                    filesystem. Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: Path within the container at
                                          which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: mountPropagation determines how
                                          mounts are propagated from the host to container
                                          and the other way around. When not set,
                                          MountPropagationNone is used. This field
                                          is beta in 1.10.
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: Mounted read-only if true, read-write
                                          otherwise (false or unspecified). Defaults
                                          to false.
                                        type: boolean
                                      subPath:
                                        description: Path within the volume from which
                                          the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: Expanded path within the volume
                                          from which the container's volume should
                                          be mounted. Behaves similarly to SubPath
                                          but environment variable references $(VAR_NAME)
                                          are expanded using the container's environment.
                                          Defaults to "" (volume's root). SubPathExpr
                                          and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                workingDir:
                                  description: Container's working directory. If not
                                    specified, the container runtime's default will
                                    be used, which might be configured in the container
                                    image. Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          extraVolumeMounts:
                            items:
                              description: VolumeMount describes a mounting of a Volume
                                within a container.
                              properties:
                                mountPath:
                                  description: Path within the container at which
                                    the volume should be mounted.  Must not contain
                                    ':'.
                                  type: string
                                mountPropagation:
                                  description: mountPropagation determines how mounts
                                    are propagated from the host to container and
                                    the other way around. When not set, MountPropagationNone
                                    is used. This field is beta in 1.10.
                                  type: string
                                name:
                                  description: This must match the Name of a Volume.
                                  type: string
                                readOnly:
                                  description: Mounted read-only if true, read-write
                                    otherwise (false or unspecified). Defaults to
                                    false.
                                  type: boolean
                                subPath:
                                  description: Path within the volume from which the
                                    container's volume should be mounted. Defaults
                                    to "" (volume's root).
                                  type: string
                                subPathExpr:
                                  description: Expanded path within the volume from
                                    which the container's volume should be mounted.
                                    Behaves similarly to SubPath but environment variable
                                    references $(VAR_NAME) are expanded using the
                                    container's environment. Defaults to "" (volume's
                                    root). SubPathExpr and SubPath are mutually exclusive.
                                  type: string
                              required:
                              - mountPath
                              - name
                              type: object
                            type: array
                          extraVolumes:
                            items:
                              description: Volume represents a named volume in a pod
                                that may be accessed by any container in the pod.
                              properties:
                                awsElasticBlockStore:
                                  description: 'awsElasticBlockStore represents an
                                    AWS Disk resource that is attached to a kubelet''s
                                    host machine and then exposed to the pod. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    partition:
                                      description: 'partition is the partition in
                                        the volume that you want to mount. If omitted,
                                        the default is to mount by volume name. Examples:
                                        For volume /dev/sda1, you specify the partition
                                        as "1". Similarly, the volume partition for
                                        /dev/sda is "0" (or you can leave the property
                                        empty).'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: 'readOnly value true will force
                                        the readOnly setting in VolumeMounts. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      type: boolean
                                    volumeID:
                                      description: 'volumeID is unique ID of the persistent
                                        disk resource in AWS (Amazon EBS volume).
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                azureDisk:
                                  description: azureDisk represents an Azure Data
                                    Disk mount on the host and bind mount to the pod.
                                  properties:
                                    cachingMode:
                                      description: 'cachingMode is the Host Caching
                                        mode: None, Read Only, Read Write.'
                                      type: string
                                    diskName:
                                      description: diskName is the Name of the data
                                        disk in the blob storage
                                      type: string
                                    diskURI:
                                      description: diskURI is the URI of data disk
                                        in the blob storage
                                      type: string
                                    fsType:
                                      description: fsType is Filesystem type to mount.
                                        Must be a filesystem type supported by the
                                        host operating system. Ex. "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    kind:
                                      description: 'kind expected values are Shared:
                                        multiple blob disks per storage account  Dedicated:
                                        single blob disk per storage account  Managed:
                                        azure managed data disk (only in managed availability
                                        set). defaults to shared'
                                      type: string
                                    readOnly:
                                      description: readOnly Defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                  required:
                                  - diskName
                                  - diskURI
                                  type: object
                                azureFile:
                                  description: azureFile represents an Azure File
                                    Service mount on the host and bind mount to the
                                    pod.
                                  properties:
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretName:
                                      description: secretName is the  name of secret
                                        that contains Azure Storage Account Name and
                                        Key
                                      type: string
                                    shareName:
                                      description: shareName is the azure share Name
                                      type: string
                                  required:
                                  - secretName
                                  - shareName
                                  type: object
                                cephfs:
                                  description: cephFS represents a Ceph FS mount on
                                    the host that shares a pod's lifetime
                                  properties:
                                    monitors:
                                      description: 'monitors is Required: Monitors
                                        is a collection of Ceph monitors More info:
                                        https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      items:
                                        type: string
                                      type: array
                                    path:
                                      description: 'path is Optional: Used as the
                                        mounted root, rather than the full Ceph tree,
                                        default is /'
                                      type: string
                                    readOnly:
                                      description: 'readOnly is Optional: Defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: boolean
                                    secretFile:
                                      description: 'secretFile is Optional: SecretFile
                                        is the path to key ring for User, default
                                        is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: string
                                    secretRef:
                                      description: 'secretRef is Optional: SecretRef
                                        is reference to the authentication secret
                                        for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    user:
                                      description: 'user is optional: User is the
                                        rados user name, default is admin More info:
                                        https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: string
                                  required:
                                  - monitors
                                  type: object
                                cinder:
                                  description: 'cinder represents a cinder volume
                                    attached and mounted on kubelets host machine.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        to mount. Must be a filesystem type supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: string
                                    readOnly:
                                      description: 'readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is optional: points
                                        to a secret object containing parameters used
                                        to connect to OpenStack.'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    volumeID:
                                      description: 'volumeID used to identify the
                                        volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                configMap:
                                  description: configMap represents a configMap that
                                    should populate this volume
                                  properties:
                                    defaultMode:
                                      description: 'defaultMode is optional: mode
                                        bits used to set permissions on created files
                                        by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: items if unspecified, each key-value
                                        pair in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the ConfigMap, the
                                        volume setup will error unless it is marked
                                        optional. Paths must be relative and may not
                                        contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: optional specify whether the ConfigMap
                                        or its keys must be defined
                                      type: boolean
                                  type: object
                                csi:
                                  description: csi (Container Storage Interface) represents
                                    ephemeral storage that is handled by certain external
                                    CSI drivers (Beta feature).
                                  properties:
                                    driver:
                                      description: driver is the name of the CSI driver
                                        that handles this volume. Consult with your
                                        admin for the correct name as registered in
                                        the cluster.
                                      type: string
                                    fsType:
                                      description: fsType to mount. Ex. "ext4", "xfs",
                                        "ntfs". If not provided, the empty value is
                                        passed to the associated CSI driver which
                                        will determine the default filesystem to apply.
                                      type: string
                                    nodePublishSecretRef:
                                      description: nodePublishSecretRef is a reference
                                        to the secret object containing sensitive
                                        information to pass to the CSI driver to complete
                                        the CSI NodePublishVolume and NodeUnpublishVolume
                                        calls. This field is optional, and  may be
                                        empty if no secret is required. If the secret
                                        object contains more than one secret, all
                                        secret references are passed.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    readOnly:
                                      description: readOnly specifies a read-only
                                        configuration for the volume. Defaults to
                                        false (read/write).
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      description: volumeAttributes stores driver-specific
                                        properties that are passed to the CSI driver.
                                        Consult your driver's documentation for supported
                                        values.
                                      type: object
                                  required:
                                  - driver
                                  type: object
                                downwardAPI:
                                  description: downwardAPI represents downward API
                                    about the pod that should populate this volume
                                  properties:
                                    defaultMode:
                                      description: 'Optional: mode bits to use on
                                        created files by default. Must be a Optional:
                                        mode bits used to set permissions on created
                                        files by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: Items is a list of downward API
                                        volume file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name and namespace are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          mode:
                                            description: 'Optional: mode bits used
                                              to set permissions on this file, must
                                              be an octal value between 0000 and 0777
                                              or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal
                                              values, JSON requires decimal values
                                              for mode bits. If not specified, the
                                              volume defaultMode will be used. This
                                              might be in conflict with other options
                                              that affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              requests.cpu and requests.memory) are
                                              currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                        required:
                                        - path
                                        type: object
                                      type: array
                                  type: object
                                emptyDir:
                                  description: 'emptyDir represents a temporary directory
                                    that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                  properties:
                                    medium:
                                      description: 'medium represents what type of
                                        storage medium should back this directory.
                                        The default is "" which means to use the node''s
                                        default medium. Must be an empty string (default)
                                        or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      type: string
                                    sizeLimit:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: 'sizeLimit is the total amount
                                        of local storage required for this EmptyDir
                                        volume. The size limit is also applicable
                                        for memory medium. The maximum usage on memory
                                        medium EmptyDir would be the minimum value
                                        between the SizeLimit specified here and the
                                        sum of memory limits of all containers in
                                        a pod. The default is nil which means that
                                        the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                ephemeral:
                                  description: "ephemeral represents a volume that
                                    is handled by a cluster storage driver. The volume's
                                    lifecycle is tied to the pod that defines it -
                                    it will be created before the pod starts, and
                                    deleted when the pod is removed. \n Use this if:
                                    a) the volume is only needed while the pod runs,
                                    b) features of normal volumes like restoring from
                                    snapshot or capacity    tracking are needed, c)
                                    the storage driver is specified through a storage
                                    class, and d) the storage driver supports dynamic
                                    volume provisioning through    a PersistentVolumeClaim
                                    (see EphemeralVolumeSource for more    information
                                    on the connection between this volume type    and
                                    PersistentVolumeClaim). \n Use PersistentVolumeClaim
                                    or one of the vendor-specific APIs for volumes
                                    that persist for longer than the lifecycle of
                                    an individual pod. \n Use CSI for light-weight
                                    local ephemeral volumes if the CSI driver is meant
                                    to be used that way - see the documentation of
                                    the driver for more information. \n A pod can
                                    use both types of ephemeral volumes and persistent
                                    volumes at the same time."
                                  properties:
                                    volumeClaimTemplate:
                                      description: "Will be used to create a stand-alone
                                        PVC to provision the volume. The pod in which
                                        this EphemeralVolumeSource is embedded will
                                        be the owner of the PVC, i.e. the PVC will
                                        be deleted together with the pod.  The name
                                        of the PVC will be `<pod name>-<volume name>`
                                        where `<volume name>` is the name from the
                                        `PodSpec.Volumes` array entry. Pod validation
                                        will reject the pod if the concatenated name
                                        is not valid for a PVC (for example, too long).
                                        \n An existing PVC with that name that is
                                        not owned by the pod will *not* be used for
                                        the pod to avoid using an unrelated volume
                                        by mistake. Starting the pod is then blocked
                                        until the unrelated PVC is removed. If such
                                        a pre-created PVC is meant to be used by the
                                        pod, the PVC has to updated with an owner
                                        reference to the pod once the pod exists.
                                        Normally this should not be necessary, but
                                        it may be useful when manually reconstructing
                                        a broken cluster. \n This field is read-only
                                        and no changes will be made by Kubernetes
                                        to the PVC after it has been created. \n Required,
                                        must not be nil."
                                      properties:
                                        metadata:
                                          description: May contain labels and annotations
                                            that will be copied into the PVC when
                                            creating it. No other fields are allowed
                                            and will be rejected during validation.
                                          type: object
                                        spec:
                                          description: The specification for the PersistentVolumeClaim.
                                            The entire content is copied unchanged
                                            into the PVC that gets created from this
                                            template. The same fields as in a PersistentVolumeClaim
                                            are also valid here.
                                          properties:
                                            accessModes:
                                              description: 'accessModes contains the
                                                desired access modes the volume should
                                                have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                              items:
                                                type: string
                                              type: array
                                            dataSource:
                                              description: 'dataSource field can be
                                                used to specify either: * An existing
                                                VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                * An existing PVC (PersistentVolumeClaim)
                                                If the provisioner or an external
                                                controller can support the specified
                                                data source, it will create a new
                                                volume based on the contents of the
                                                specified data source. If the AnyVolumeDataSource
                                                feature gate is enabled, this field
                                                will always have the same contents
                                                as the DataSourceRef field.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            dataSourceRef:
                                              description: 'dataSourceRef specifies
                                                the object from which to populate
                                                the volume with data, if a non-empty
                                                volume is desired. This may be any
                                                local object from a non-empty API
                                                group (non core object) or a PersistentVolumeClaim
                                                object. When this field is specified,
                                                volume binding will only succeed if
                                                the type of the specified object matches
                                                some installed volume populator or
                                                dynamic provisioner. This field will
                                                replace the functionality of the DataSource
                                                field and as such if both fields are
                                                non-empty, they must have the same
                                                value. For backwards compatibility,
                                                both fields (DataSource and DataSourceRef)
                                                will be set to the same value automatically
                                                if one of them is empty and the other
                                                is non-empty. There are two important
                                                differences between DataSource and
                                                DataSourceRef: * While DataSource
                                                only allows two specific types of
                                                objects, DataSourceRef   allows any
                                                non-core object, as well as PersistentVolumeClaim
                                                objects. * While DataSource ignores
                                                disallowed values (dropping them),
                                                DataSourceRef   preserves all values,
                                                and generates an error if a disallowed
                                                value is   specified. (Beta) Using
                                                this field requires the AnyVolumeDataSource
                                                feature gate to be enabled.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            resources:
                                              description: 'resources represents the
                                                minimum resources the volume should
                                                have. If RecoverVolumeExpansionFailure
                                                feature is enabled users are allowed
                                                to specify resource requirements that
                                                are lower than previous value but
                                                must still be higher than capacity
                                                recorded in the status field of the
                                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                              properties:
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Limits describes the
                                                    maximum amount of compute resources
                                                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Requests describes
                                                    the minimum amount of compute
                                                    resources required. If Requests
                                                    is omitted for a container, it
                                                    defaults to Limits if that is
                                                    explicitly specified, otherwise
                                                    to an implementation-defined value.
                                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                              type: object
                                            selector:
                                              description: selector is a label query
                                                over volumes to consider for binding.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            storageClassName:
                                              description: 'storageClassName is the
                                                name of the StorageClass required
                                                by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                              type: string
                                            volumeMode:
                                              description: volumeMode defines what
                                                type of volume is required by the
                                                claim. Value of Filesystem is implied
                                                when not included in claim spec.
                                              type: string
                                            volumeName:
                                              description: volumeName is the binding
                                                reference to the PersistentVolume
                                                backing this claim.
                                              type: string
                                          type: object
                                      required:
                                      - spec
                                      type: object
                                  type: object
                                fc:
                                  description: fc represents a Fibre Channel resource
                                    that is attached to a kubelet's host machine and
                                    then exposed to the pod.
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        to mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. TODO: how do we prevent errors
                                        in the filesystem from compromising the machine'
                                      type: string
                                    lun:
                                      description: 'lun is Optional: FC target lun
                                        number'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: 'readOnly is Optional: Defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.'
                                      type: boolean
                                    targetWWNs:
                                      description: 'targetWWNs is Optional: FC target
                                        worldwide names (WWNs)'
                                      items:
                                        type: string
                                      type: array
                                    wwids:
                                      description: 'wwids Optional: FC volume world
                                        wide identifiers (wwids) Either wwids or combination
                                        of targetWWNs and lun must be set, but not
                                        both simultaneously.'
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                flexVolume:
                                  description: flexVolume represents a generic volume
                                    resource that is provisioned/attached using an
                                    exec based plugin.
                                  properties:
                                    driver:
                                      description: driver is the name of the driver
                                        to use for this volume.
                                      type: string
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". The default filesystem depends
                                        on FlexVolume script.
                                      type: string
                                    options:
                                      additionalProperties:
                                        type: string
                                      description: 'options is Optional: this field
                                        holds extra command options if any.'
                                      type: object
                                    readOnly:
                                      description: 'readOnly is Optional: defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is Optional: secretRef
                                        is reference to the secret object containing
                                        sensitive information to pass to the plugin
                                        scripts. This may be empty if no secret object
                                        is specified. If the secret object contains
                                        more than one secret, all secrets are passed
                                        to the plugin scripts.'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                  required:
                                  - driver
                                  type: object
                                flocker:
                                  description: flocker represents a Flocker volume
                                    attached to a kubelet's host machine. This depends
                                    on the Flocker control service being running
                                  properties:
                                    datasetName:
                                      description: datasetName is Name of the dataset
                                        stored as metadata -> name on the dataset
                                        for Flocker should be considered as deprecated
                                      type: string
                                    datasetUUID:
                                      description: datasetUUID is the UUID of the
                                        dataset. This is unique identifier of a Flocker
                                        dataset
                                      type: string
                                  type: object
                                gcePersistentDisk:
                                  description: 'gcePersistentDisk represents a GCE
                                    Disk resource that is attached to a kubelet''s
                                    host machine and then exposed to the pod. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                  properties:
                                    fsType:
                                      description: 'fsType is filesystem type of the
                                        volume that you want to mount. Tip: Ensure
                                        that the filesystem type is supported by the
                                        host operating system. Examples: "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    partition:
                                      description: 'partition is the partition in
                                        the volume that you want to mount. If omitted,
                                        the default is to mount by volume name. Examples:
                                        For volume /dev/sda1, you specify the partition
                                        as "1". Similarly, the volume partition for
                                        /dev/sda is "0" (or you can leave the property
                                        empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      format: int32
                                      type: integer
                                    pdName:
                                      description: 'pdName is unique name of the PD
                                        resource in GCE. Used to identify the disk
                                        in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      type: boolean
                                  required:
                                  - pdName
                                  type: object
                                gitRepo:
                                  description: 'gitRepo represents a git repository
                                    at a particular revision. DEPRECATED: GitRepo
                                    is deprecated. To provision a container with a
                                    git repo, mount an EmptyDir into an InitContainer
                                    that clones the repo using git, then mount the
                                    EmptyDir into the Pod''s container.'
                                  properties:
                                    directory:
                                      description: directory is the target directory
                                        name. Must not contain or start with '..'.  If
                                        '.' is supplied, the volume directory will
                                        be the git repository.  Otherwise, if specified,
                                        the volume will contain the git repository
                                        in the subdirectory with the given name.
                                      type: string
                                    repository:
                                      description: repository is the URL
                                      type: string
                                    revision:
                                      description: revision is the commit hash for
                                        the specified revision.
                                      type: string
                                  required:
                                  - repository
                                  type: object
                                glusterfs:
                                  description: 'glusterfs represents a Glusterfs mount
                                    on the host that shares a pod''s lifetime. More
                                    info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                  properties:
                                    endpoints:
                                      description: 'endpoints is the endpoint name
                                        that details Glusterfs topology. More info:
                                        https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: string
                                    path:
                                      description: 'path is the Glusterfs volume path.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the Glusterfs
                                        volume to be mounted with read-only permissions.
                                        Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: boolean
                                  required:
                                  - endpoints
                                  - path
                                  type: object
                                hostPath:
                                  description: 'hostPath represents a pre-existing
                                    file or directory on the host machine that is
                                    directly exposed to the container. This is generally
                                    used for system agents or other privileged things
                                    that are allowed to see the host machine. Most
                                    containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                    --- TODO(jonesdl) We need to restrict who can
                                    use host directory mounts and who can/can not
                                    mount host directories as read/write.'
                                  properties:
                                    path:
                                      description: 'path of the directory on the host.
                                        If the path is a symlink, it will follow the
                                        link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                      type: string
                                    type:
                                      description: 'type for HostPath Volume Defaults
                                        to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                      type: string
                                  required:
                                  - path
                                  type: object
                                iscsi:
                                  description: 'iscsi represents an ISCSI Disk resource
                                    that is attached to a kubelet''s host machine
                                    and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                  properties:
                                    chapAuthDiscovery:
                                      description: chapAuthDiscovery defines whether
                                        support iSCSI Discovery CHAP authentication
                                      type: boolean
                                    chapAuthSession:
                                      description: chapAuthSession defines whether
                                        support iSCSI Session CHAP authentication
                                      type: boolean
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    initiatorName:
                                      description: initiatorName is the custom iSCSI
                                        Initiator Name. If initiatorName is specified
                                        with iscsiInterface simultaneously, new iSCSI
                                        interface <target portal>:<volume name> will
                                        be created for the connection.
                                      type: string
                                    iqn:
                                      description: iqn is the target iSCSI Qualified
                                        Name.
                                      type: string
                                    iscsiInterface:
                                      description: iscsiInterface is the interface
                                        Name that uses an iSCSI transport. Defaults
                                        to 'default' (tcp).
                                      type: string
                                    lun:
                                      description: lun represents iSCSI Target Lun
                                        number.
                                      format: int32
                                      type: integer
                                    portals:
                                      description: portals is the iSCSI Target Portal
                                        List. The portal is either an IP or ip_addr:port
                                        if the port is other than default (typically
                                        TCP ports 860 and 3260).
                                      items:
                                        type: string
                                      type: array
                                    readOnly:
                                      description: readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                      type: boolean
                                    secretRef:
                                      description: secretRef is the CHAP Secret for
                                        iSCSI target and initiator authentication
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    targetPortal:
                                      description: targetPortal is iSCSI Target Portal.
                                        The Portal is either an IP or ip_addr:port
                                        if the port is other than default (typically
                                        TCP ports 860 and 3260).
                                      type: string
                                  required:
                                  - iqn
                                  - lun
                                  - targetPortal
                                  type: object
                                name:
                                  description: 'name of the volume. Must be a DNS_LABEL
                                    and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                nfs:
                                  description: 'nfs represents an NFS mount on the
                                    host that shares a pod''s lifetime More info:
                                    https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                  properties:
                                    path:
                                      description: 'path that is exported by the NFS
                                        server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the NFS
                                        export to be mounted with read-only permissions.
                                        Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: boolean
                                    server:
                                      description: 'server is the hostname or IP address
                                        of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: string
                                  required:
                                  - path
                                  - server
                                  type: object
                                persistentVolumeClaim:
                                  description: 'persistentVolumeClaimVolumeSource
                                    represents a reference to a PersistentVolumeClaim
                                    in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                  properties:
                                    claimName:
                                      description: 'claimName is the name of a PersistentVolumeClaim
                                        in the same namespace as the pod using this
                                        volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                      type: string
                                    readOnly:
                                      description: readOnly Will force the ReadOnly
                                        setting in VolumeMounts. Default false.
                                      type: boolean
                                  required:
                                  - claimName
                                  type: object
                                photonPersistentDisk:
                                  description: photonPersistentDisk represents a PhotonController
                                    persistent disk attached and mounted on kubelets
                                    host machine
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified.
                                      type: string
                                    pdID:
                                      description: pdID is the ID that identifies
                                        Photon Controller persistent disk
                                      type: string
                                  required:
                                  - pdID
                                  type: object
                                portworxVolume:
                                  description: portworxVolume represents a portworx
                                    volume attached and mounted on kubelets host machine
                                  properties:
                                    fsType:
                                      description: fSType represents the filesystem
                                        type to mount Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    volumeID:
                                      description: volumeID uniquely identifies a
                                        Portworx volume
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                projected:
                                  description: projected items for all in one resources
                                    secrets, configmaps, and downward API
                                  properties:
                                    defaultMode:
                                      description: defaultMode are the mode bits used
                                        to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777
                                        or a decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values, JSON
                                        requires decimal values for mode bits. Directories
                                        within the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    sources:
                                      description: sources is the list of volume projections
                                      items:
                                        description: Projection that may be projected
                                          along with other supported volume types
                                        properties:
                                          configMap:
                                            description: configMap information about
                                              the configMap data to project
                                            properties:
                                              items:
                                                description: items if unspecified,
                                                  each key-value pair in the Data
                                                  field of the referenced ConfigMap
                                                  will be projected into the volume
                                                  as a file whose name is the key
                                                  and content is the value. If specified,
                                                  the listed keys will be projected
                                                  into the specified paths, and unlisted
                                                  keys will not be present. If a key
                                                  is specified which is not present
                                                  in the ConfigMap, the volume setup
                                                  will error unless it is marked optional.
                                                  Paths must be relative and may not
                                                  contain the '..' path or start with
                                                  '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: 'mode is Optional:
                                                        mode bits used to set permissions
                                                        on this file. Must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: path is the relative
                                                        path of the file to map the
                                                        key to. May not be an absolute
                                                        path. May not contain the
                                                        path element '..'. May not
                                                        start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: optional specify whether
                                                  the ConfigMap or its keys must be
                                                  defined
                                                type: boolean
                                            type: object
                                          downwardAPI:
                                            description: downwardAPI information about
                                              the downwardAPI data to project
                                            properties:
                                              items:
                                                description: Items is a list of DownwardAPIVolume
                                                  file
                                                items:
                                                  description: DownwardAPIVolumeFile
                                                    represents information to create
                                                    the file containing the pod field
                                                  properties:
                                                    fieldRef:
                                                      description: 'Required: Selects
                                                        a field of the pod: only annotations,
                                                        labels, name and namespace
                                                        are supported.'
                                                      properties:
                                                        apiVersion:
                                                          description: Version of
                                                            the schema the FieldPath
                                                            is written in terms of,
                                                            defaults to "v1".
                                                          type: string
                                                        fieldPath:
                                                          description: Path of the
                                                            field to select in the
                                                            specified API version.
                                                          type: string
                                                      required:
                                                      - fieldPath
                                                      type: object
                                                    mode:
                                                      description: 'Optional: mode
                                                        bits used to set permissions
                                                        on this file, must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: 'Required: Path
                                                        is  the relative path name
                                                        of the file to be created.
                                                        Must not be absolute or contain
                                                        the ''..'' path. Must be utf-8
                                                        encoded. The first item of
                                                        the relative path must not
                                                        start with ''..'''
                                                      type: string
                                                    resourceFieldRef:
                                                      description: 'Selects a resource
                                                        of the container: only resources
                                                        limits and requests (limits.cpu,
                                                        limits.memory, requests.cpu
                                                        and requests.memory) are currently
                                                        supported.'
                                                      properties:
                                                        containerName:
                                                          description: 'Container
                                                            name: required for volumes,
                                                            optional for env vars'
                                                          type: string
                                                        divisor:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Specifies the
                                                            output format of the exposed
                                                            resources, defaults to
                                                            "1"
                                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                          x-kubernetes-int-or-string: true
                                                        resource:
                                                          description: 'Required:
                                                            resource to select'
                                                          type: string
                                                      required:
                                                      - resource
                                                      type: object
                                                  required:
                                                  - path
                                                  type: object
                                                type: array
                                            type: object
                                          secret:
                                            description: secret information about
                                              the secret data to project
                                            properties:
                                              items:
                                                description: items if unspecified,
                                                  each key-value pair in the Data
                                                  field of the referenced Secret will
                                                  be projected into the volume as
                                                  a file whose name is the key and
                                                  content is the value. If specified,
                                                  the listed keys will be projected
                                                  into the specified paths, and unlisted
                                                  keys will not be present. If a key
                                                  is specified which is not present
                                                  in the Secret, the volume setup
                                                  will error unless it is marked optional.
                                                  Paths must be relative and may not
                                                  contain the '..' path or start with
                                                  '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: 'mode is Optional:
                                                        mode bits used to set permissions
                                                        on this file. Must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: path is the relative
                                                        path of the file to map the
                                                        key to. May not be an absolute
                                                        path. May not contain the
                                                        path element '..'. May not
                                                        start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: optional field specify
                                                  whether the Secret or its key must
                                                  be defined
                                                type: boolean
                                            type: object
                                          serviceAccountToken:
                                            description: serviceAccountToken is information
                                              about the serviceAccountToken data to
                                              project
                                            properties:
                                              audience:
                                                description: audience is the intended
                                                  audience of the token. A recipient
                                                  of a token must identify itself
                                                  with an identifier specified in
                                                  the audience of the token, and otherwise
                                                  should reject the token. The audience
                                                  defaults to the identifier of the
                                                  apiserver.
                                                type: string
                                              expirationSeconds:
                                                description: expirationSeconds is
                                                  the requested duration of validity
                                                  of the service account token. As
                                                  the token approaches expiration,
                                                  the kubelet volume plugin will proactively
                                                  rotate the service account token.
                                                  The kubelet will start trying to
                                                  rotate the token if the token is
                                                  older than 80 percent of its time
                                                  to live or if the token is older
                                                  than 24 hours.Defaults to 1 hour
                                                  and must be at least 10 minutes.
                                                format: int64
                                                type: integer
                                              path:
                                                description: path is the path relative
                                                  to the mount point of the file to
                                                  project the token into.
                                                type: string
                                            required:
                                            - path
                                            type: object
                                        type: object
                                      type: array
                                  type: object
                                quobyte:
                                  description: quobyte represents a Quobyte mount
                                    on the host that shares a pod's lifetime
                                  properties:
                                    group:
                                      description: group to map volume access to Default
                                        is no group
                                      type: string
                                    readOnly:
                                      description: readOnly here will force the Quobyte
                                        volume to be mounted with read-only permissions.
                                        Defaults to false.
                                      type: boolean
                                    registry:
                                      description: registry represents a single or
                                        multiple Quobyte Registry services specified
                                        as a string as host:port pair (multiple entries
                                        are separated with commas) which acts as the
                                        central registry for volumes
                                      type: string
                                    tenant:
                                      description: tenant owning the given Quobyte
                                        volume in the Backend Used with dynamically
                                        provisioned Quobyte volumes, value is set
                                        by the plugin
                                      type: string
                                    user:
                                      description: user to map volume access to Defaults
                                        to serivceaccount user
                                      type: string
                                    volume:
                                      description: volume is a string that references
                                        an already created Quobyte volume by name.
                                      type: string
                                  required:
                                  - registry
                                  - volume
                                  type: object
                                rbd:
                                  description: 'rbd represents a Rados Block Device
                                    mount on the host that shares a pod''s lifetime.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    image:
                                      description: 'image is the rados image name.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    keyring:
                                      description: 'keyring is the path to key ring
                                        for RBDUser. Default is /etc/ceph/keyring.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    monitors:
                                      description: 'monitors is a collection of Ceph
                                        monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      items:
                                        type: string
                                      type: array
                                    pool:
                                      description: 'pool is the rados pool name. Default
                                        is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is name of the authentication
                                        secret for RBDUser. If provided overrides
                                        keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    user:
                                      description: 'user is the rados user name. Default
                                        is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                  required:
                                  - image
                                  - monitors
                                  type: object
                                scaleIO:
                                  description: scaleIO represents a ScaleIO persistent
                                    volume attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Default is "xfs".
                                      type: string
                                    gateway:
                                      description: gateway is the host address of
                                        the ScaleIO API Gateway.
                                      type: string
                                    protectionDomain:
                                      description: protectionDomain is the name of
                                        the ScaleIO Protection Domain for the configured
                                        storage.
                                      type: string
                                    readOnly:
                                      description: readOnly Defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: secretRef references to the secret
                                        for ScaleIO user and other sensitive information.
                                        If this is not provided, Login operation will
                                        fail.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    sslEnabled:
                                      description: sslEnabled Flag enable/disable
                                        SSL communication with Gateway, default false
                                      type: boolean
                                    storageMode:
                                      description: storageMode indicates whether the
                                        storage for a volume should be ThickProvisioned
                                        or ThinProvisioned. Default is ThinProvisioned.
                                      type: string
                                    storagePool:
                                      description: storagePool is the ScaleIO Storage
                                        Pool associated with the protection domain.
                                      type: string
                                    system:
                                      description: system is the name of the storage
                                        system as configured in ScaleIO.
                                      type: string
                                    volumeName:
                                      description: volumeName is the name of a volume
                                        already created in the ScaleIO system that
                                        is associated with this volume source.
                                      type: string
                                  required:
                                  - gateway
                                  - secretRef
                                  - system
                                  type: object
                                secret:
                                  description: 'secret represents a secret that should
                                    populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                  properties:
                                    defaultMode:
                                      description: 'defaultMode is Optional: mode
                                        bits used to set permissions on created files
                                        by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: items If unspecified, each key-value
                                        pair in the Data field of the referenced Secret
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the Secret, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain
                                        the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    optional:
                                      description: optional field specify whether
                                        the Secret or its keys must be defined
                                      type: boolean
                                    secretName:
                                      description: 'secretName is the name of the
                                        secret in the pod''s namespace to use. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      type: string
                                  type: object
                                storageos:
                                  description: storageOS represents a StorageOS volume
                                    attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified.
                                      type: string
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: secretRef specifies the secret
                                        to use for obtaining the StorageOS API credentials.  If
                                        not specified, default values will be attempted.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    volumeName:
                                      description: volumeName is the human-readable
                                        name of the StorageOS volume.  Volume names
                                        are only unique within a namespace.
                                      type: string
                                    volumeNamespace:
                                      description: volumeNamespace specifies the scope
                                        of the volume within StorageOS.  If no namespace
                                        is specified then the Pod's namespace will
                                        be used.  This allows the Kubernetes name
                                        scoping to be mirrored within StorageOS for
                                        tighter integration. Set VolumeName to any
                                        name to override the default behaviour. Set
                                        to "default" if you are not using namespaces
                                        within StorageOS. Namespaces that do not pre-exist
                                        within StorageOS will be created.
                                      type: string
                                  type: object
                                vsphereVolume:
                                  description: vsphereVolume represents a vSphere
                                    volume attached and mounted on kubelets host machine
                                  properties:
                                    fsType:
                                      description: fsType is filesystem type to mount.
                                        Must be a filesystem type supported by the
                                        host operating system. Ex. "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    storagePolicyID:
                                      description: storagePolicyID is the storage
                                        Policy Based Management (SPBM) profile ID
                                        associated with the StoragePolicyName.
                                      type: string
                                    storagePolicyName:
                                      description: storagePolicyName is the storage
                                        Policy Based Management (SPBM) profile name.
                                      type: string
                                    volumePath:
                                      description: volumePath is the path that identifies
                                        vSphere volume vmdk
                                      type: string
                                  required:
                                  - volumePath
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          hostNetwork:
                            type: boolean
                          image:
                            type: string
                          imagePullPolicy:
                            description: PullPolicy describes a policy for if/when
                              to pull a container image
                            type: string
                          imagePullSecrets:
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          initContainers:
                            items:
                              description: A single application container that you
                                want to run within a pod.
                              properties:
                                args:
                                  description: 'Arguments to the entrypoint. The container
                                    image''s CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using
                                    the container''s environment. If a variable cannot
                                    be resolved, the reference in the input string
                                    will be unchanged. Double $$ are reduced to a
                                    single $, which allows for escaping the $(VAR_NAME)
                                    syntax: i.e. "$$(VAR_NAME)" will produce the string
                                    literal "$(VAR_NAME)". Escaped references will
                                    never be expanded, regardless of whether the variable
                                    exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: 'Entrypoint array. Not executed within
                                    a shell. The container image''s ENTRYPOINT is
                                    used if this is not provided. Variable references
                                    $(VAR_NAME) are expanded using the container''s
                                    environment. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot
                                    be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: List of environment variables to set
                                    in the container. Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previously defined
                                          environment variables in the container and
                                          any service environment variables. If a
                                          variable cannot be resolved, the reference
                                          in the input string will be unchanged. Double
                                          $$ are reduced to a single $, which allows
                                          for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal
                                          "$(VAR_NAME)". Escaped references will never
                                          be expanded, regardless of whether the variable
                                          exists or not. Defaults to "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          fieldRef:
                                            description: 'Selects a field of the pod:
                                              supports metadata.name, metadata.namespace,
                                              `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                              spec.nodeName, spec.serviceAccountName,
                                              status.hostIP, status.podIP, status.podIPs.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              limits.ephemeral-storage, requests.cpu,
                                              requests.memory and requests.ephemeral-storage)
                                              are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                envFrom:
                                  description: List of sources to populate environment
                                    variables in the container. The keys defined within
                                    a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container
                                    is starting. When a key exists in multiple sources,
                                    the value associated with the last source will
                                    take precedence. Values defined by an Env with
                                    a duplicate key will take precedence. Cannot be
                                    updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                    type: object
                                  type: array
                                image:
                                  description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config
                                    management to default or override container images
                                    in workload controllers like Deployments and StatefulSets.'
                                  type: string
                                imagePullPolicy:
                                  description: 'Image pull policy. One of Always,
                                    Never, IfNotPresent. Defaults to Always if :latest
                                    tag is specified, or IfNotPresent otherwise. Cannot
                                    be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                  type: string
                                lifecycle:
                                  description: Actions that the management system
                                    should take in response to container lifecycle
                                    events. Cannot be updated.
                                  properties:
                                    postStart:
                                      description: 'PostStart is called immediately
                                        after a container is created. If the handler
                                        fails, the container is terminated and restarted
                                        according to its restart policy. Other management
                                        of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: 'PreStop is called immediately
                                        before a container is terminated due to an
                                        API request or management event such as liveness/startup
                                        probe failure, preemption, resource contention,
                                        etc. The handler is not called if the container
                                        crashes or exits. The Pod''s termination grace
                                        period countdown begins before the PreStop
                                        hook is executed. Regardless of the outcome
                                        of the handler, the container will eventually
                                        terminate within the Pod''s termination grace
                                        period (unless delayed by finalizers). Other
                                        management of the container blocks until the
                                        hook completes or until the termination grace
                                        period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: 'Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: Name of the container specified as
                                    a DNS_LABEL. Each container in a pod must have
                                    a unique name (DNS_LABEL). Cannot be updated.
                                  type: string
                                ports:
                                  description: List of ports to expose from the container.
                                    Exposing a port here gives the system additional
                                    information about the network connections a container
                                    uses, but is primarily informational. Not specifying
                                    a port here DOES NOT prevent that port from being
                                    exposed. Any port which is listening on the default
                                    "0.0.0.0" address inside a container will be accessible
                                    from the network. Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: Number of port to expose on the
                                          pod's IP address. This must be a valid port
                                          number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: Number of port to expose on the
                                          host. If specified, this must be a valid
                                          port number, 0 < x < 65536. If HostNetwork
                                          is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: If specified, this must be an
                                          IANA_SVC_NAME and unique within the pod.
                                          Each named port in a pod must have a unique
                                          name. Name for the port that can be referred
                                          to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: Protocol for port. Must be UDP,
                                          TCP, or SCTP. Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: 'Periodic probe of container service
                                    readiness. Container will be removed from service
                                    endpoints if the probe fails. Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                resources:
                                  description: 'Compute Resources required by this
                                    container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                  type: object
                                securityContext:
                                  description: 'SecurityContext defines the security
                                    options the container should be run with. If set,
                                    the fields of SecurityContext override the equivalent
                                    fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: 'AllowPrivilegeEscalation controls
                                        whether a process can gain more privileges
                                        than its parent process. This bool directly
                                        controls if the no_new_privs flag will be
                                        set on the container process. AllowPrivilegeEscalation
                                        is true always when the container is: 1) run
                                        as Privileged 2) has CAP_SYS_ADMIN Note that
                                        this field cannot be set when spec.os.name
                                        is windows.'
                                      type: boolean
                                    capabilities:
                                      description: The capabilities to add/drop when
                                        running containers. Defaults to the default
                                        set of capabilities granted by the container
                                        runtime. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                      type: object
                                    privileged:
                                      description: Run container in privileged mode.
                                        Processes in privileged containers are essentially
                                        equivalent to root on the host. Defaults to
                                        false. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: procMount denotes the type of proc
                                        mount to use for the containers. The default
                                        is DefaultProcMount which uses the container
                                        runtime defaults for readonly paths and masked
                                        paths. This requires the ProcMountType feature
                                        flag to be enabled. Note that this field cannot
                                        be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: Whether this container has a read-only
                                        root filesystem. Default is false. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: The GID to run the entrypoint of
                                        the container process. Uses runtime default
                                        if unset. May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: Indicates that the container must
                                        run as a non-root user. If true, the Kubelet
                                        will validate the image at runtime to ensure
                                        that it does not run as UID 0 (root) and fail
                                        to start the container if it does. If unset
                                        or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence.
                                      type: boolean
                                    runAsUser:
                                      description: The UID to run the entrypoint of
                                        the container process. Defaults to user specified
                                        in image metadata if unspecified. May also
                                        be set in PodSecurityContext.  If set in both
                                        SecurityContext and PodSecurityContext, the
                                        value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name
                                        is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: The SELinux context to be applied
                                        to the container. If unspecified, the container
                                        runtime will allocate a random SELinux context
                                        for each container.  May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: The seccomp options to use by this
                                        container. If seccomp options are provided
                                        at both the pod & container level, the container
                                        options override the pod options. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      properties:
                                        localhostProfile:
                                          description: localhostProfile indicates
                                            a profile defined in a file on the node
                                            should be used. The profile must be preconfigured
                                            on the node to work. Must be a descending
                                            path, relative to the kubelet's configured
                                            seccomp profile location. Must only be
                                            set if type is "Localhost".
                                          type: string
                                        type:
                                          description: "type indicates which kind
                                            of seccomp profile will be applied. Valid
                                            options are: \n Localhost - a profile
                                            defined in a file on the node should be
                                            used. RuntimeDefault - the container runtime
                                            default profile should be used. Unconfined
                                            - no profile should be applied."
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: The Windows specific settings applied
                                        to all containers. If unspecified, the options
                                        from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: GMSACredentialSpec is where
                                            the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                            inlines the contents of the GMSA credential
                                            spec named by the GMSACredentialSpecName
                                            field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: HostProcess determines if a
                                            container should be run as a 'Host Process'
                                            container. This field is alpha-level and
                                            will only be honored by components that
                                            enable the WindowsHostProcessContainers
                                            feature flag. Setting this field without
                                            the feature flag will result in errors
                                            when validating the Pod. All of a Pod's
                                            containers must have the same effective
                                            HostProcess value (it is not allowed to
                                            have a mix of HostProcess containers and
                                            non-HostProcess containers).  In addition,
                                            if HostProcess is true then HostNetwork
                                            must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: The UserName in Windows to
                                            run the entrypoint of the container process.
                                            Defaults to the user specified in image
                                            metadata if unspecified. May also be set
                                            in PodSecurityContext. If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: 'StartupProbe indicates that the Pod
                                    has successfully initialized. If specified, no
                                    other probes are executed until this completes
                                    successfully. If this probe fails, the Pod will
                                    be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters
                                    at the beginning of a Pod''s lifecycle, when it
                                    might take a long time to load data or warm a
                                    cache, than during steady-state operation. This
                                    cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: Whether this container should allocate
                                    a buffer for stdin in the container runtime. If
                                    this is not set, reads from stdin in the container
                                    will always result in EOF. Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: Whether the container runtime should
                                    close the stdin channel after it has been opened
                                    by a single attach. When stdin is true the stdin
                                    stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is
                                    opened on container start, is empty until the
                                    first client attaches to stdin, and then remains
                                    open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed
                                    until the container is restarted. If this flag
                                    is false, a container processes that reads from
                                    stdin will never receive an EOF. Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: 'Optional: Path at which the file to
                                    which the container''s termination message will
                                    be written is mounted into the container''s filesystem.
                                    Message written is intended to be brief final
                                    status, such as an assertion failure message.
                                    Will be truncated by the node if greater than
                                    4096 bytes. The total message length across all
                                    containers will be limited to 12kb. Defaults to
                                    /dev/termination-log. Cannot be updated.'
                                  type: string
                                terminationMessagePolicy:
                                  description: Indicate how the termination message
                                    should be populated. File will use the contents
                                    of terminationMessagePath to populate the container
                                    status message on both success and failure. FallbackToLogsOnError
                                    will use the last chunk of container log output
                                    if the termination message file is empty and the
                                    container exited with an error. The log output
                                    is limited to 2048 bytes or 80 lines, whichever
                                    is smaller. Defaults to File. Cannot be updated.
                                  type: string
                                tty:
                                  description: Whether this container should allocate
                                    a TTY for itself, also requires 'stdin' to be
                                    true. Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                volumeMounts:
                                  description: Pod volumes to mount into the container's
                                    filesystem. Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: Path within the container at
                                          which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: mountPropagation determines how
                                          mounts are propagated from the host to container
                                          and the other way around. When not set,
                                          MountPropagationNone is used. This field
                                          is beta in 1.10.
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: Mounted read-only if true, read-write
                                          otherwise (false or unspecified). Defaults
                                          to false.
                                        type: boolean
                                      subPath:
                                        description: Path within the volume from which
                                          the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: Expanded path within the volume
                                          from which the container's volume should
                                          be mounted. Behaves similarly to SubPath
                                          but environment variable references $(VAR_NAME)
                                          are expanded using the container's environment.
                                          Defaults to "" (volume's root). SubPathExpr
                                          and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                workingDir:
                                  description: Container's working directory. If not
                                    specified, the container runtime's default will
                                    be used, which might be configured in the container
                                    image. Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          nodeSelector:
                            additionalProperties:
                              type: string
                            type: object
                          podAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          port:
                            format: int32
                            type: integer
                          priorityClassName:
                            type: string
                          replicas:
                            format: int32
                            type: integer
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            description: PodSecurityContext holds pod-level security
                              attributes and common container settings. Some fields
                              are also present in container.securityContext.  Field
                              values of container.securityContext take precedence
                              over field values of PodSecurityContext.
                            properties:
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume. Note that this field
                                  cannot be set when spec.os.name is windows."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.
                                  Note that this field cannot be set when spec.os.name
                                  is windows.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container. Note that this field cannot be set
                                  when spec.os.name is windows.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container. Note that this
                                  field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container. Note that this field cannot
                                  be set when spec.os.name is windows.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod. Note that this field cannot be set
                                  when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container. Note that this field
                                  cannot be set when spec.os.name is windows.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                  Note that this field cannot be set when spec.os.name
                                  is windows.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name
                                  is linux.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: HostProcess determines if a container
                                      should be run as a 'Host Process' container.
                                      This field is alpha-level and will only be honored
                                      by components that enable the WindowsHostProcessContainers
                                      feature flag. Setting this field without the
                                      feature flag will result in errors when validating
                                      the Pod. All of a Pod's containers must have
                                      the same effective HostProcess value (it is
                                      not allowed to have a mix of HostProcess containers
                                      and non-HostProcess containers).  In addition,
                                      if HostProcess is true then HostNetwork must
                                      also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                          serviceAccountName:
                            type: string
                          serviceAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          shutdownConfigMap:
                            type: string
                          startupConfigMap:
                            type: string
                          storage:
                            description: RedisStorage defines the structure used to
                              store the Redis Data
                            properties:
                              emptyDir:
                                description: Represents an empty directory for a pod.
                                  Empty directory volumes support ownership management
                                  and SELinux relabeling.
                                properties:
                                  medium:
                                    description: 'medium represents what type of storage
                                      medium should back this directory. The default
                                      is "" which means to use the node''s default
                                      medium. Must be an empty string (default) or
                                      Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                    type: string
                                  sizeLimit:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'sizeLimit is the total amount of
                                      local storage required for this EmptyDir volume.
                                      The size limit is also applicable for memory
                                      medium. The maximum usage on memory medium EmptyDir
                                      would be the minimum value between the SizeLimit
                                      specified here and the sum of memory limits
                                      of all containers in a pod. The default is nil
                                      which means that the limit is undefined. More
                                      info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                type: object
                              keepAfterDeletion:
                                type: boolean
                              persistentVolumeClaim:
                                description: EmbeddedPersistentVolumeClaim is an embedded
                                  version of k8s.io/api/core/v1.PersistentVolumeClaim.
                                  It contains TypeMeta and a reduced ObjectMeta.
                                properties:
                                  apiVersion:
                                    description: 'APIVersion defines the versioned
                                      schema of this representation of an object.
                                      Servers should convert recognized schemas to
                                      the latest internal value, and may reject unrecognized
                                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                    type: string
                                  kind:
                                    description: 'Kind is a string value representing
                                      the REST resource this object represents. Servers
                                      may infer this from the endpoint the client
                                      submits requests to. Cannot be updated. In CamelCase.
                                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  metadata:
                                    description: EmbeddedMetadata contains metadata
                                      relevant to an EmbeddedResource.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: 'Annotations is an unstructured
                                          key value map stored with a resource that
                                          may be set by external tools to store and
                                          retrieve arbitrary metadata. They are not
                                          queryable and should be preserved when modifying
                                          objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: 'Map of string keys and values
                                          that can be used to organize and categorize
                                          (scope and select) objects. May match selectors
                                          of replication controllers and services.
                                          More info: http://kubernetes.io/docs/user-guide/labels'
                                        type: object
                                      name:
                                        description: 'Name must be unique within a
                                          namespace. Is required when creating resources,
                                          although some resources may allow a client
                                          to request the generation of an appropriate
                                          name automatically. Name is primarily intended
                                          for creation idempotence and configuration
                                          definition. Cannot be updated. More info:
                                          http://kubernetes.io/docs/user-guide/identifiers#names'
                                        type: string
                                    type: object
                                  spec:
                                    description: 'Spec defines the desired characteristics
                                      of a volume requested by a pod author. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    properties:
                                      accessModes:
                                        description: 'accessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'dataSource field can be used
                                          to specify either: * An existing VolumeSnapshot
                                          object (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          If the provisioner or an external controller
                                          can support the specified data source, it
                                          will create a new volume based on the contents
                                          of the specified data source. If the AnyVolumeDataSource
                                          feature gate is enabled, this field will
                                          always have the same contents as the DataSourceRef
                                          field.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      dataSourceRef:
                                        description: 'dataSourceRef specifies the
                                          object from which to populate the volume
                                          with data, if a non-empty volume is desired.
                                          This may be any local object from a non-empty
                                          API group (non core object) or a PersistentVolumeClaim
                                          object. When this field is specified, volume
                                          binding will only succeed if the type of
                                          the specified object matches some installed
                                          volume populator or dynamic provisioner.
                                          This field will replace the functionality
                                          of the DataSource field and as such if both
                                          fields are non-empty, they must have the
                                          same value. For backwards compatibility,
                                          both fields (DataSource and DataSourceRef)
                                          will be set to the same value automatically
                                          if one of them is empty and the other is
                                          non-empty. There are two important differences
                                          between DataSource and DataSourceRef: *
                                          While DataSource only allows two specific
                                          types of objects, DataSourceRef   allows
                                          any non-core object, as well as PersistentVolumeClaim
                                          objects. * While DataSource ignores disallowed
                                          values (dropping them), DataSourceRef   preserves
                                          all values, and generates an error if a
                                          disallowed value is   specified. (Beta)
                                          Using this field requires the AnyVolumeDataSource
                                          feature gate to be enabled.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      resources:
                                        description: 'resources represents the minimum
                                          resources the volume should have. If RecoverVolumeExpansionFailure
                                          feature is enabled users are allowed to
                                          specify resource requirements that are lower
                                          than previous value but must still be higher
                                          than capacity recorded in the status field
                                          of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: selector is a label query over
                                          volumes to consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      storageClassName:
                                        description: 'storageClassName is the name
                                          of the StorageClass required by the claim.
                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type
                                          of volume is required by the claim. Value
                                          of Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: volumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                  status:
                                    description: 'Status represents the current information/status
                                      of a persistent volume claim. Read-only. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    properties:
                                      accessModes:
                                        description: 'accessModes contains the actual
                                          access modes the volume backing the PVC
                                          has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      allocatedResources:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: allocatedResources is the storage
                                          resource within AllocatedResources tracks
                                          the capacity allocated to a PVC. It may
                                          be larger than the actual capacity when
                                          a volume expansion operation is requested.
                                          For storage quota, the larger value from
                                          allocatedResources and PVC.spec.resources
                                          is used. If allocatedResources is not set,
                                          PVC.spec.resources alone is used for quota
                                          calculation. If a volume expansion capacity
                                          request is lowered, allocatedResources is
                                          only lowered if there are no expansion operations
                                          in progress and if the actual volume capacity
                                          is equal or lower than the requested capacity.
                                          This is an alpha field and requires enabling
                                          RecoverVolumeExpansionFailure feature.
                                        type: object
                                      capacity:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: capacity represents the actual
                                          resources of the underlying volume.
                                        type: object
                                      conditions:
                                        description: conditions is the current Condition
                                          of persistent volume claim. If underlying
                                          persistent volume is being resized then
                                          the Condition will be set to 'ResizeStarted'.
                                        items:
                                          description: PersistentVolumeClaimCondition
                                            contails details about state of pvc
                                          properties:
                                            lastProbeTime:
                                              description: lastProbeTime is the time
                                                we probed the condition.
                                              format: date-time
                                              type: string
                                            lastTransitionTime:
                                              description: lastTransitionTime is the
                                                time the condition transitioned from
                                                one status to another.
                                              format: date-time
                                              type: string
                                            message:
                                              description: message is the human-readable
                                                message indicating details about last
                                                transition.
                                              type: string
                                            reason:
                                              description: reason is a unique, this
                                                should be a short, machine understandable
                                                string that gives the reason for condition's
                                                last transition. If it reports "ResizeStarted"
                                                that means the underlying persistent
                                                volume is being resized.
                                              type: string
                                            status:
                                              type: string
                                            type:
                                              description: PersistentVolumeClaimConditionType
                                                is a valid value of PersistentVolumeClaimCondition.Type
                                              type: string
                                          required:
                                          - status
                                          - type
                                          type: object
                                        type: array
                                      phase:
                                        description: phase represents the current
                                          phase of PersistentVolumeClaim.
                                        type: string
                                      resizeStatus:
                                        description: resizeStatus stores status of
                                          resize operation. ResizeStatus is not set
                                          by default but when expansion is complete
                                          resizeStatus is set to empty string by resize
                                          controller or kubelet. This is an alpha
                                          field and requires enabling RecoverVolumeExpansionFailure
                                          feature.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          terminationGracePeriod:
                            format: int64
                            type: integer
                          tolerations:
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                          topologySpreadConstraints:
                            items:
                              description: TopologySpreadConstraint specifies how
                                to spread matching pods among the given topology.
                              properties:
                                labelSelector:
                                  description: LabelSelector is used to find matching
                                    pods. Pods that match this label selector are
                                    counted to determine the number of pods in their
                                    corresponding topology domain.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                maxSkew:
                                  description: 'MaxSkew describes the degree to which
                                    pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`,
                                    it is the maximum permitted difference between
                                    the number of matching pods in the target topology
                                    and the global minimum. The global minimum is
                                    the minimum number of matching pods in an eligible
                                    domain or zero if the number of eligible domains
                                    is less than MinDomains. For example, in a 3-zone
                                    cluster, MaxSkew is set to 1, and pods with the
                                    same labelSelector spread as 2/2/1: In this case,
                                    the global minimum is 1. | zone1 | zone2 | zone3
                                    | |  P P  |  P P  |   P   | - if MaxSkew is 1,
                                    incoming pod can only be scheduled to zone3 to
                                    become 2/2/2; scheduling it onto zone1(zone2)
                                    would make the ActualSkew(3-1) on zone1(zone2)
                                    violate MaxSkew(1). - if MaxSkew is 2, incoming
                                    pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                                    it is used to give higher precedence to topologies
                                    that satisfy it. It''s a required field. Default
                                    value is 1 and 0 is not allowed.'
                                  format: int32
                                  type: integer
                                minDomains:
                                  description: "MinDomains indicates a minimum number
                                    of eligible domains. When the number of eligible
                                    domains with matching topology keys is less than
                                    minDomains, Pod Topology Spread treats \"global
                                    minimum\" as 0, and then the calculation of Skew
                                    is performed. And when the number of eligible
                                    domains with matching topology keys equals or
                                    greater than minDomains, this value has no effect
                                    on scheduling. As a result, when the number of
                                    eligible domains is less than minDomains, scheduler
                                    won't schedule more than maxSkew Pods to those
                                    domains. If value is nil, the constraint behaves
                                    as if MinDomains is equal to 1. Valid values are
                                    integers greater than 0. When value is not nil,
                                    WhenUnsatisfiable must be DoNotSchedule. \n For
                                    example, in a 3-zone cluster, MaxSkew is set to
                                    2, MinDomains is set to 5 and pods with the same
                                    labelSelector spread as 2/2/2: | zone1 | zone2
                                    | zone3 | |  P P  |  P P  |  P P  | The number
                                    of domains is less than 5(MinDomains), so \"global
                                    minimum\" is treated as 0. In this situation,
                                    new pod with the same labelSelector cannot be
                                    scheduled, because computed skew will be 3(3 -
                                    0) if new Pod is scheduled to any of the three
                                    zones, it will violate MaxSkew. \n This is an
                                    alpha field and requires enabling MinDomainsInPodTopologySpread
                                    feature gate."
                                  format: int32
                                  type: integer
                                topologyKey:
                                  description: TopologyKey is the key of node labels.
                                    Nodes that have a label with this key and identical
                                    values are considered to be in the same topology.
                                    We consider each <key, value> as a "bucket", and
                                    try to put balanced number of pods into each bucket.
                                    We define a domain as a particular instance of
                                    a topology. Also, we define an eligible domain
                                    as a domain whose nodes match the node selector.
                                    e.g. If TopologyKey is "kubernetes.io/hostname",
                                    each Node is a domain of that topology. And, if
                                    TopologyKey is "topology.kubernetes.io/zone",
                                    each zone is a domain of that topology. It's a
                                    required field.
                                  type: string
                                whenUnsatisfiable:
                                  description: 'WhenUnsatisfiable indicates how to
                                    deal with a pod if it doesn''t satisfy the spread
                                    constraint. - DoNotSchedule (default) tells the
                                    scheduler not to schedule it. - ScheduleAnyway
                                    tells the scheduler to schedule the pod in any
                                    location,   but giving higher precedence to topologies
                                    that would help reduce the   skew. A constraint
                                    is considered "Unsatisfiable" for an incoming
                                    pod if and only if every possible node assignment
                                    for that pod would violate "MaxSkew" on some topology.
                                    For example, in a 3-zone cluster, MaxSkew is set
                                    to 1, and pods with the same labelSelector spread
                                    as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   |
                                    If WhenUnsatisfiable is set to DoNotSchedule,
                                    incoming pod can only be scheduled to zone2(zone3)
                                    to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3)
                                    satisfies MaxSkew(1). In other words, the cluster
                                    can still be imbalanced, but scheduler won''t
                                    make it *more* imbalanced. It''s a required field.'
                                  type: string
                              required:
                              - maxSkew
                              - topologyKey
                              - whenUnsatisfiable
                              type: object
                            type: array
                        type: object
                      sentinel:
                        description: SentinelSettings defines the specification of
                          the sentinel cluster
                        properties:
                          affinity:
                            description: Affinity is a group of affinity scheduling
                              rules.
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules
                                  for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node matches
                                      the corresponding matchExpressions; the node(s)
                                      with the highest sum are the most preferred.
                                    items:
                                      description: An empty preferred scheduling term
                                        matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling
                                        term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated
                                            with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        weight:
                                          description: Weight associated with matching
                                            the corresponding nodeSelectorTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - preference
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod
                                      from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector
                                          terms. The terms are ORed.
                                        items:
                                          description: A null or empty node selector
                                            term matches no objects. The requirements
                                            of them are ANDed. The TopologySelectorTerm
                                            type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector
                                                requirements by node's labels.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchFields:
                                              description: A list of node selector
                                                requirements by node's fields.
                                              items:
                                                description: A node selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that
                                                      the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: Represents a key's
                                                      relationship to a set of values.
                                                      Valid operators are In, NotIn,
                                                      Exists, DoesNotExist. Gt, and
                                                      Lt.
                                                    type: string
                                                  values:
                                                    description: An array of string
                                                      values. If the operator is In
                                                      or NotIn, the values array must
                                                      be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      If the operator is Gt or Lt,
                                                      the values array must have a
                                                      single element, which will be
                                                      interpreted as an integer. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                    required:
                                    - nodeSelectorTerms
                                    type: object
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules
                                  (e.g. co-locate this pod in the same node, zone,
                                  etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the affinity expressions
                                      specified by this field, but it may choose a
                                      node that violates one or more of the expressions.
                                      The node that is most preferred is the one with
                                      the greatest sum of weights, i.e. for each node
                                      that meets all of the scheduling requirements
                                      (resource request, requiredDuringScheduling
                                      affinity expressions, etc.), compute a sum by
                                      iterating through the elements of this field
                                      and adding "weight" to the sum if the node has
                                      pods which matches the corresponding podAffinityTerm;
                                      the node(s) with the highest sum are the most
                                      preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the affinity requirements specified
                                      by this field are not met at scheduling time,
                                      the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this
                                      field cease to be met at some point during pod
                                      execution (e.g. due to a pod label update),
                                      the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling
                                  rules (e.g. avoid putting this pod in the same node,
                                  zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: The scheduler will prefer to schedule
                                      pods to nodes that satisfy the anti-affinity
                                      expressions specified by this field, but it
                                      may choose a node that violates one or more
                                      of the expressions. The node that is most preferred
                                      is the one with the greatest sum of weights,
                                      i.e. for each node that meets all of the scheduling
                                      requirements (resource request, requiredDuringScheduling
                                      anti-affinity expressions, etc.), compute a
                                      sum by iterating through the elements of this
                                      field and adding "weight" to the sum if the
                                      node has pods which matches the corresponding
                                      podAffinityTerm; the node(s) with the highest
                                      sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched
                                        WeightedPodAffinityTerm fields are added per-node
                                        to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term,
                                            associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        weight:
                                          description: weight associated with matching
                                            the corresponding podAffinityTerm, in
                                            the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                      - podAffinityTerm
                                      - weight
                                      type: object
                                    type: array
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: If the anti-affinity requirements
                                      specified by this field are not met at scheduling
                                      time, the pod will not be scheduled onto the
                                      node. If the anti-affinity requirements specified
                                      by this field cease to be met at some point
                                      during pod execution (e.g. due to a pod label
                                      update), the system may or may not try to eventually
                                      evict the pod from its node. When there are
                                      multiple elements, the lists of nodes corresponding
                                      to each podAffinityTerm are intersected, i.e.
                                      all terms must be satisfied.
                                    items:
                                      description: Defines a set of pods (namely those
                                        matching the labelSelector relative to the
                                        given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity)
                                        with, where co-located is defined as running
                                        on a node whose value of the label with key
                                        <topologyKey> matches that of any node on
                                        which a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of
                                            resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaceSelector:
                                          description: A label query over the set
                                            of namespaces that the term applies to.
                                            The term is applied to the union of the
                                            namespaces selected by this field and
                                            the ones listed in the namespaces field.
                                            null selector and null or empty namespaces
                                            list means "this pod's namespace". An
                                            empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label
                                                      key that the selector applies
                                                      to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty.
                                                      This array is replaced during
                                                      a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of
                                                {key,value} pairs. A single {key,value}
                                                in the matchLabels map is equivalent
                                                to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are
                                                ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies a static
                                            list of namespace names that the term
                                            applies to. The term is applied to the
                                            union of the namespaces listed in this
                                            field and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null
                                            namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose
                                            value of the label with key topologyKey
                                            matches that of any node on which any
                                            of the selected pods is running. Empty
                                            topologyKey is not allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    type: array
                                type: object
                            type: object
                          command:
                            items:
                              type: string
                            type: array
                          configCopy:
                            description: SentinelConfigCopy defines the specification
                              for the sentinel exporter
                            properties:
                              containerSecurityContext:
                                description: SecurityContext holds security configuration
                                  that will be applied to a container. Some fields
                                  are present in both SecurityContext and PodSecurityContext.  When
                                  both are set, the values in SecurityContext take
                                  precedence.
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls
                                      whether a process can gain more privileges than
                                      its parent process. This bool directly controls
                                      if the no_new_privs flag will be set on the
                                      container process. AllowPrivilegeEscalation
                                      is true always when the container is: 1) run
                                      as Privileged 2) has CAP_SYS_ADMIN Note that
                                      this field cannot be set when spec.os.name is
                                      windows.'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when
                                      running containers. Defaults to the default
                                      set of capabilities granted by the container
                                      runtime. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      add:
                                        description: Added capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                    type: object
                                  privileged:
                                    description: Run container in privileged mode.
                                      Processes in privileged containers are essentially
                                      equivalent to root on the host. Defaults to
                                      false. Note that this field cannot be set when
                                      spec.os.name is windows.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc
                                      mount to use for the containers. The default
                                      is DefaultProcMount which uses the container
                                      runtime defaults for readonly paths and masked
                                      paths. This requires the ProcMountType feature
                                      flag to be enabled. Note that this field cannot
                                      be set when spec.os.name is windows.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only
                                      root filesystem. Default is false. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of
                                      the container process. Uses runtime default
                                      if unset. May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must
                                      run as a non-root user. If true, the Kubelet
                                      will validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and fail
                                      to start the container if it does. If unset
                                      or false, no such validation will be performed.
                                      May also be set in PodSecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of
                                      the container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified
                                      in SecurityContext takes precedence. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied
                                      to the container. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by this
                                      container. If seccomp options are provided at
                                      both the pod & container level, the container
                                      options override the pod options. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a
                                          profile defined in a file on the node should
                                          be used. The profile must be preconfigured
                                          on the node to work. Must be a descending
                                          path, relative to the kubelet's configured
                                          seccomp profile location. Must only be set
                                          if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of
                                          seccomp profile will be applied. Valid options
                                          are: \n Localhost - a profile defined in
                                          a file on the node should be used. RuntimeDefault
                                          - the container runtime default profile
                                          should be used. Unconfined - no profile
                                          should be applied."
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      from the PodSecurityContext will be used. If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName
                                          field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only
                                          be honored by components that enable the
                                          WindowsHostProcessContainers feature flag.
                                          Setting this field without the feature flag
                                          will result in errors when validating the
                                          Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it
                                          is not allowed to have a mix of HostProcess
                                          containers and non-HostProcess containers).  In
                                          addition, if HostProcess is true then HostNetwork
                                          must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both SecurityContext
                                          and PodSecurityContext, the value specified
                                          in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                            type: object
                          containerSecurityContext:
                            description: SecurityContext holds security configuration
                              that will be applied to a container. Some fields are
                              present in both SecurityContext and PodSecurityContext.  When
                              both are set, the values in SecurityContext take precedence.
                            properties:
                              allowPrivilegeEscalation:
                                description: 'AllowPrivilegeEscalation controls whether
                                  a process can gain more privileges than its parent
                                  process. This bool directly controls if the no_new_privs
                                  flag will be set on the container process. AllowPrivilegeEscalation
                                  is true always when the container is: 1) run as
                                  Privileged 2) has CAP_SYS_ADMIN Note that this field
                                  cannot be set when spec.os.name is windows.'
                                type: boolean
                              capabilities:
                                description: The capabilities to add/drop when running
                                  containers. Defaults to the default set of capabilities
                                  granted by the container runtime. Note that this
                                  field cannot be set when spec.os.name is windows.
                                properties:
                                  add:
                                    description: Added capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                  drop:
                                    description: Removed capabilities
                                    items:
                                      description: Capability represent POSIX capabilities
                                        type
                                      type: string
                                    type: array
                                type: object
                              privileged:
                                description: Run container in privileged mode. Processes
                                  in privileged containers are essentially equivalent
                                  to root on the host. Defaults to false. Note that
                                  this field cannot be set when spec.os.name is windows.
                                type: boolean
                              procMount:
                                description: procMount denotes the type of proc mount
                                  to use for the containers. The default is DefaultProcMount
                                  which uses the container runtime defaults for readonly
                                  paths and masked paths. This requires the ProcMountType
                                  feature flag to be enabled. Note that this field
                                  cannot be set when spec.os.name is windows.
                                type: string
                              readOnlyRootFilesystem:
                                description: Whether this container has a read-only
                                  root filesystem. Default is false. Note that this
                                  field cannot be set when spec.os.name is windows.
                                type: boolean
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in PodSecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the
                                  value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name
                                  is windows.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  PodSecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence. Note that this field cannot be
                                  set when spec.os.name is windows.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  the container. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in PodSecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name
                                  is windows.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by this container.
                                  If seccomp options are provided at both the pod
                                  & container level, the container options override
                                  the pod options. Note that this field cannot be
                                  set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options from
                                  the PodSecurityContext will be used. If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence. Note
                                  that this field cannot be set when spec.os.name
                                  is linux.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: HostProcess determines if a container
                                      should be run as a 'Host Process' container.
                                      This field is alpha-level and will only be honored
                                      by components that enable the WindowsHostProcessContainers
                                      feature flag. Setting this field without the
                                      feature flag will result in errors when validating
                                      the Pod. All of a Pod's containers must have
                                      the same effective HostProcess value (it is
                                      not allowed to have a mix of HostProcess containers
                                      and non-HostProcess containers).  In addition,
                                      if HostProcess is true then HostNetwork must
                                      also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                          customConfig:
                            items:
                              type: string
                            type: array
                          dnsPolicy:
                            description: DNSPolicy defines how a pod's DNS will be
                              configured.
                            type: string
                          exporter:
                            description: Exporter defines the specification for the
                              redis/sentinel exporter
                            properties:
                              args:
                                items:
                                  type: string
                                type: array
                              containerSecurityContext:
                                description: SecurityContext holds security configuration
                                  that will be applied to a container. Some fields
                                  are present in both SecurityContext and PodSecurityContext.  When
                                  both are set, the values in SecurityContext take
                                  precedence.
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls
                                      whether a process can gain more privileges than
                                      its parent process. This bool directly controls
                                      if the no_new_privs flag will be set on the
                                      container process. AllowPrivilegeEscalation
                                      is true always when the container is: 1) run
                                      as Privileged 2) has CAP_SYS_ADMIN Note that
                                      this field cannot be set when spec.os.name is
                                      windows.'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when
                                      running containers. Defaults to the default
                                      set of capabilities granted by the container
                                      runtime. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      add:
                                        description: Added capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                    type: object
                                  privileged:
                                    description: Run container in privileged mode.
                                      Processes in privileged containers are essentially
                                      equivalent to root on the host. Defaults to
                                      false. Note that this field cannot be set when
                                      spec.os.name is windows.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc
                                      mount to use for the containers. The default
                                      is DefaultProcMount which uses the container
                                      runtime defaults for readonly paths and masked
                                      paths. This requires the ProcMountType feature
                                      flag to be enabled. Note that this field cannot
                                      be set when spec.os.name is windows.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only
                                      root filesystem. Default is false. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of
                                      the container process. Uses runtime default
                                      if unset. May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must
                                      run as a non-root user. If true, the Kubelet
                                      will validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and fail
                                      to start the container if it does. If unset
                                      or false, no such validation will be performed.
                                      May also be set in PodSecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of
                                      the container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified
                                      in SecurityContext takes precedence. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied
                                      to the container. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by this
                                      container. If seccomp options are provided at
                                      both the pod & container level, the container
                                      options override the pod options. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a
                                          profile defined in a file on the node should
                                          be used. The profile must be preconfigured
                                          on the node to work. Must be a descending
                                          path, relative to the kubelet's configured
                                          seccomp profile location. Must only be set
                                          if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of
                                          seccomp profile will be applied. Valid options
                                          are: \n Localhost - a profile defined in
                                          a file on the node should be used. RuntimeDefault
                                          - the container runtime default profile
                                          should be used. Unconfined - no profile
                                          should be applied."
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      from the PodSecurityContext will be used. If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName
                                          field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only
                                          be honored by components that enable the
                                          WindowsHostProcessContainers feature flag.
                                          Setting this field without the feature flag
                                          will result in errors when validating the
                                          Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it
                                          is not allowed to have a mix of HostProcess
                                          containers and non-HostProcess containers).  In
                                          addition, if HostProcess is true then HostNetwork
                                          must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both SecurityContext
                                          and PodSecurityContext, the value specified
                                          in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              enabled:
                                type: boolean
                              env:
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                type: string
                              imagePullPolicy:
                                description: PullPolicy describes a policy for if/when
                                  to pull a container image
                                type: string
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                            type: object
                          extraContainers:
                            items:
                              description: A single application container that you
                                want to run within a pod.
                              properties:
                                args:
                                  description: 'Arguments to the entrypoint. The container
                                    image''s CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using
                                    the container''s environment. If a variable cannot
                                    be resolved, the reference in the input string
                                    will be unchanged. Double $$ are reduced to a
                                    single $, which allows for escaping the $(VAR_NAME)
                                    syntax: i.e. "$$(VAR_NAME)" will produce the string
                                    literal "$(VAR_NAME)". Escaped references will
                                    never be expanded, regardless of whether the variable
                                    exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: 'Entrypoint array. Not executed within
                                    a shell. The container image''s ENTRYPOINT is
                                    used if this is not provided. Variable references
                                    $(VAR_NAME) are expanded using the container''s
                                    environment. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot
                                    be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: List of environment variables to set
                                    in the container. Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previously defined
                                          environment variables in the container and
                                          any service environment variables. If a
                                          variable cannot be resolved, the reference
                                          in the input string will be unchanged. Double
                                          $$ are reduced to a single $, which allows
                                          for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal
                                          "$(VAR_NAME)". Escaped references will never
                                          be expanded, regardless of whether the variable
                                          exists or not. Defaults to "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          fieldRef:
                                            description: 'Selects a field of the pod:
                                              supports metadata.name, metadata.namespace,
                                              `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                              spec.nodeName, spec.serviceAccountName,
                                              status.hostIP, status.podIP, status.podIPs.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              limits.ephemeral-storage, requests.cpu,
                                              requests.memory and requests.ephemeral-storage)
                                              are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                envFrom:
                                  description: List of sources to populate environment
                                    variables in the container. The keys defined within
                                    a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container
                                    is starting. When a key exists in multiple sources,
                                    the value associated with the last source will
                                    take precedence. Values defined by an Env with
                                    a duplicate key will take precedence. Cannot be
                                    updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                    type: object
                                  type: array
                                image:
                                  description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config
                                    management to default or override container images
                                    in workload controllers like Deployments and StatefulSets.'
                                  type: string
                                imagePullPolicy:
                                  description: 'Image pull policy. One of Always,
                                    Never, IfNotPresent. Defaults to Always if :latest
                                    tag is specified, or IfNotPresent otherwise. Cannot
                                    be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                  type: string
                                lifecycle:
                                  description: Actions that the management system
                                    should take in response to container lifecycle
                                    events. Cannot be updated.
                                  properties:
                                    postStart:
                                      description: 'PostStart is called immediately
                                        after a container is created. If the handler
                                        fails, the container is terminated and restarted
                                        according to its restart policy. Other management
                                        of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: 'PreStop is called immediately
                                        before a container is terminated due to an
                                        API request or management event such as liveness/startup
                                        probe failure, preemption, resource contention,
                                        etc. The handler is not called if the container
                                        crashes or exits. The Pod''s termination grace
                                        period countdown begins before the PreStop
                                        hook is executed. Regardless of the outcome
                                        of the handler, the container will eventually
                                        terminate within the Pod''s termination grace
                                        period (unless delayed by finalizers). Other
                                        management of the container blocks until the
                                        hook completes or until the termination grace
                                        period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: 'Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: Name of the container specified as
                                    a DNS_LABEL. Each container in a pod must have
                                    a unique name (DNS_LABEL). Cannot be updated.
                                  type: string
                                ports:
                                  description: List of ports to expose from the container.
                                    Exposing a port here gives the system additional
                                    information about the network connections a container
                                    uses, but is primarily informational. Not specifying
                                    a port here DOES NOT prevent that port from being
                                    exposed. Any port which is listening on the default
                                    "0.0.0.0" address inside a container will be accessible
                                    from the network. Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: Number of port to expose on the
                                          pod's IP address. This must be a valid port
                                          number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: Number of port to expose on the
                                          host. If specified, this must be a valid
                                          port number, 0 < x < 65536. If HostNetwork
                                          is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: If specified, this must be an
                                          IANA_SVC_NAME and unique within the pod.
                                          Each named port in a pod must have a unique
                                          name. Name for the port that can be referred
                                          to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: Protocol for port. Must be UDP,
                                          TCP, or SCTP. Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: 'Periodic probe of container service
                                    readiness. Container will be removed from service
                                    endpoints if the probe fails. Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                resources:
                                  description: 'Compute Resources required by this
                                    container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                  type: object
                                securityContext:
                                  description: 'SecurityContext defines the security
                                    options the container should be run with. If set,
                                    the fields of SecurityContext override the equivalent
                                    fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: 'AllowPrivilegeEscalation controls
                                        whether a process can gain more privileges
                                        than its parent process. This bool directly
                                        controls if the no_new_privs flag will be
                                        set on the container process. AllowPrivilegeEscalation
                                        is true always when the container is: 1) run
                                        as Privileged 2) has CAP_SYS_ADMIN Note that
                                        this field cannot be set when spec.os.name
                                        is windows.'
                                      type: boolean
                                    capabilities:
                                      description: The capabilities to add/drop when
                                        running containers. Defaults to the default
                                        set of capabilities granted by the container
                                        runtime. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                      type: object
                                    privileged:
                                      description: Run container in privileged mode.
                                        Processes in privileged containers are essentially
                                        equivalent to root on the host. Defaults to
                                        false. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: procMount denotes the type of proc
                                        mount to use for the containers. The default
                                        is DefaultProcMount which uses the container
                                        runtime defaults for readonly paths and masked
                                        paths. This requires the ProcMountType feature
                                        flag to be enabled. Note that this field cannot
                                        be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: Whether this container has a read-only
                                        root filesystem. Default is false. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: The GID to run the entrypoint of
                                        the container process. Uses runtime default
                                        if unset. May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: Indicates that the container must
                                        run as a non-root user. If true, the Kubelet
                                        will validate the image at runtime to ensure
                                        that it does not run as UID 0 (root) and fail
                                        to start the container if it does. If unset
                                        or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence.
                                      type: boolean
                                    runAsUser:
                                      description: The UID to run the entrypoint of
                                        the container process. Defaults to user specified
                                        in image metadata if unspecified. May also
                                        be set in PodSecurityContext.  If set in both
                                        SecurityContext and PodSecurityContext, the
                                        value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name
                                        is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: The SELinux context to be applied
                                        to the container. If unspecified, the container
                                        runtime will allocate a random SELinux context
                                        for each container.  May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: The seccomp options to use by this
                                        container. If seccomp options are provided
                                        at both the pod & container level, the container
                                        options override the pod options. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      properties:
                                        localhostProfile:
                                          description: localhostProfile indicates
                                            a profile defined in a file on the node
                                            should be used. The profile must be preconfigured
                                            on the node to work. Must be a descending
                                            path, relative to the kubelet's configured
                                            seccomp profile location. Must only be
                                            set if type is "Localhost".
                                          type: string
                                        type:
                                          description: "type indicates which kind
                                            of seccomp profile will be applied. Valid
                                            options are: \n Localhost - a profile
                                            defined in a file on the node should be
                                            used. RuntimeDefault - the container runtime
                                            default profile should be used. Unconfined
                                            - no profile should be applied."
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: The Windows specific settings applied
                                        to all containers. If unspecified, the options
                                        from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: GMSACredentialSpec is where
                                            the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                            inlines the contents of the GMSA credential
                                            spec named by the GMSACredentialSpecName
                                            field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: HostProcess determines if a
                                            container should be run as a 'Host Process'
                                            container. This field is alpha-level and
                                            will only be honored by components that
                                            enable the WindowsHostProcessContainers
                                            feature flag. Setting this field without
                                            the feature flag will result in errors
                                            when validating the Pod. All of a Pod's
                                            containers must have the same effective
                                            HostProcess value (it is not allowed to
                                            have a mix of HostProcess containers and
                                            non-HostProcess containers).  In addition,
                                            if HostProcess is true then HostNetwork
                                            must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: The UserName in Windows to
                                            run the entrypoint of the container process.
                                            Defaults to the user specified in image
                                            metadata if unspecified. May also be set
                                            in PodSecurityContext. If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: 'StartupProbe indicates that the Pod
                                    has successfully initialized. If specified, no
                                    other probes are executed until this completes
                                    successfully. If this probe fails, the Pod will
                                    be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters
                                    at the beginning of a Pod''s lifecycle, when it
                                    might take a long time to load data or warm a
                                    cache, than during steady-state operation. This
                                    cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: Whether this container should allocate
                                    a buffer for stdin in the container runtime. If
                                    this is not set, reads from stdin in the container
                                    will always result in EOF. Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: Whether the container runtime should
                                    close the stdin channel after it has been opened
                                    by a single attach. When stdin is true the stdin
                                    stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is
                                    opened on container start, is empty until the
                                    first client attaches to stdin, and then remains
                                    open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed
                                    until the container is restarted. If this flag
                                    is false, a container processes that reads from
                                    stdin will never receive an EOF. Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: 'Optional: Path at which the file to
                                    which the container''s termination message will
                                    be written is mounted into the container''s filesystem.
                                    Message written is intended to be brief final
                                    status, such as an assertion failure message.
                                    Will be truncated by the node if greater than
                                    4096 bytes. The total message length across all
                                    containers will be limited to 12kb. Defaults to
                                    /dev/termination-log. Cannot be updated.'
                                  type: string
                                terminationMessagePolicy:
                                  description: Indicate how the termination message
                                    should be populated. File will use the contents
                                    of terminationMessagePath to populate the container
                                    status message on both success and failure. FallbackToLogsOnError
                                    will use the last chunk of container log output
                                    if the termination message file is empty and the
                                    container exited with an error. The log output
                                    is limited to 2048 bytes or 80 lines, whichever
                                    is smaller. Defaults to File. Cannot be updated.
                                  type: string
                                tty:
                                  description: Whether this container should allocate
                                    a TTY for itself, also requires 'stdin' to be
                                    true. Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                volumeMounts:
                                  description: Pod volumes to mount into the container's
                                    filesystem. Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: Path within the container at
                                          which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: mountPropagation determines how
                                          mounts are propagated from the host to container
                                          and the other way around. When not set,
                                          MountPropagationNone is used. This field
                                          is beta in 1.10.
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: Mounted read-only if true, read-write
                                          otherwise (false or unspecified). Defaults
                                          to false.
                                        type: boolean
                                      subPath:
                                        description: Path within the volume from which
                                          the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: Expanded path within the volume
                                          from which the container's volume should
                                          be mounted. Behaves similarly to SubPath
                                          but environment variable references $(VAR_NAME)
                                          are expanded using the container's environment.
                                          Defaults to "" (volume's root). SubPathExpr
                                          and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                workingDir:
                                  description: Container's working directory. If not
                                    specified, the container runtime's default will
                                    be used, which might be configured in the container
                                    image. Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          extraVolumeMounts:
                            items:
                              description: VolumeMount describes a mounting of a Volume
                                within a container.
                              properties:
                                mountPath:
                                  description: Path within the container at which
                                    the volume should be mounted.  Must not contain
                                    ':'.
                                  type: string
                                mountPropagation:
                                  description: mountPropagation determines how mounts
                                    are propagated from the host to container and
                                    the other way around. When not set, MountPropagationNone
                                    is used. This field is beta in 1.10.
                                  type: string
                                name:
                                  description: This must match the Name of a Volume.
                                  type: string
                                readOnly:
                                  description: Mounted read-only if true, read-write
                                    otherwise (false or unspecified). Defaults to
                                    false.
                                  type: boolean
                                subPath:
                                  description: Path within the volume from which the
                                    container's volume should be mounted. Defaults
                                    to "" (volume's root).
                                  type: string
                                subPathExpr:
                                  description: Expanded path within the volume from
                                    which the container's volume should be mounted.
                                    Behaves similarly to SubPath but environment variable
                                    references $(VAR_NAME) are expanded using the
                                    container's environment. Defaults to "" (volume's
                                    root). SubPathExpr and SubPath are mutually exclusive.
                                  type: string
                              required:
                              - mountPath
                              - name
                              type: object
                            type: array
                          extraVolumes:
                            items:
                              description: Volume represents a named volume in a pod
                                that may be accessed by any container in the pod.
                              properties:
                                awsElasticBlockStore:
                                  description: 'awsElasticBlockStore represents an
                                    AWS Disk resource that is attached to a kubelet''s
                                    host machine and then exposed to the pod. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    partition:
                                      description: 'partition is the partition in
                                        the volume that you want to mount. If omitted,
                                        the default is to mount by volume name. Examples:
                                        For volume /dev/sda1, you specify the partition
                                        as "1". Similarly, the volume partition for
                                        /dev/sda is "0" (or you can leave the property
                                        empty).'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: 'readOnly value true will force
                                        the readOnly setting in VolumeMounts. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      type: boolean
                                    volumeID:
                                      description: 'volumeID is unique ID of the persistent
                                        disk resource in AWS (Amazon EBS volume).
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                azureDisk:
                                  description: azureDisk represents an Azure Data
                                    Disk mount on the host and bind mount to the pod.
                                  properties:
                                    cachingMode:
                                      description: 'cachingMode is the Host Caching
                                        mode: None, Read Only, Read Write.'
                                      type: string
                                    diskName:
                                      description: diskName is the Name of the data
                                        disk in the blob storage
                                      type: string
                                    diskURI:
                                      description: diskURI is the URI of data disk
                                        in the blob storage
                                      type: string
                                    fsType:
                                      description: fsType is Filesystem type to mount.
                                        Must be a filesystem type supported by the
                                        host operating system. Ex. "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    kind:
                                      description: 'kind expected values are Shared:
                                        multiple blob disks per storage account  Dedicated:
                                        single blob disk per storage account  Managed:
                                        azure managed data disk (only in managed availability
                                        set). defaults to shared'
                                      type: string
                                    readOnly:
                                      description: readOnly Defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                  required:
                                  - diskName
                                  - diskURI
                                  type: object
                                azureFile:
                                  description: azureFile represents an Azure File
                                    Service mount on the host and bind mount to the
                                    pod.
                                  properties:
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretName:
                                      description: secretName is the  name of secret
                                        that contains Azure Storage Account Name and
                                        Key
                                      type: string
                                    shareName:
                                      description: shareName is the azure share Name
                                      type: string
                                  required:
                                  - secretName
                                  - shareName
                                  type: object
                                cephfs:
                                  description: cephFS represents a Ceph FS mount on
                                    the host that shares a pod's lifetime
                                  properties:
                                    monitors:
                                      description: 'monitors is Required: Monitors
                                        is a collection of Ceph monitors More info:
                                        https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      items:
                                        type: string
                                      type: array
                                    path:
                                      description: 'path is Optional: Used as the
                                        mounted root, rather than the full Ceph tree,
                                        default is /'
                                      type: string
                                    readOnly:
                                      description: 'readOnly is Optional: Defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: boolean
                                    secretFile:
                                      description: 'secretFile is Optional: SecretFile
                                        is the path to key ring for User, default
                                        is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: string
                                    secretRef:
                                      description: 'secretRef is Optional: SecretRef
                                        is reference to the authentication secret
                                        for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    user:
                                      description: 'user is optional: User is the
                                        rados user name, default is admin More info:
                                        https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: string
                                  required:
                                  - monitors
                                  type: object
                                cinder:
                                  description: 'cinder represents a cinder volume
                                    attached and mounted on kubelets host machine.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        to mount. Must be a filesystem type supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: string
                                    readOnly:
                                      description: 'readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is optional: points
                                        to a secret object containing parameters used
                                        to connect to OpenStack.'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    volumeID:
                                      description: 'volumeID used to identify the
                                        volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                configMap:
                                  description: configMap represents a configMap that
                                    should populate this volume
                                  properties:
                                    defaultMode:
                                      description: 'defaultMode is optional: mode
                                        bits used to set permissions on created files
                                        by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: items if unspecified, each key-value
                                        pair in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the ConfigMap, the
                                        volume setup will error unless it is marked
                                        optional. Paths must be relative and may not
                                        contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: optional specify whether the ConfigMap
                                        or its keys must be defined
                                      type: boolean
                                  type: object
                                csi:
                                  description: csi (Container Storage Interface) represents
                                    ephemeral storage that is handled by certain external
                                    CSI drivers (Beta feature).
                                  properties:
                                    driver:
                                      description: driver is the name of the CSI driver
                                        that handles this volume. Consult with your
                                        admin for the correct name as registered in
                                        the cluster.
                                      type: string
                                    fsType:
                                      description: fsType to mount. Ex. "ext4", "xfs",
                                        "ntfs". If not provided, the empty value is
                                        passed to the associated CSI driver which
                                        will determine the default filesystem to apply.
                                      type: string
                                    nodePublishSecretRef:
                                      description: nodePublishSecretRef is a reference
                                        to the secret object containing sensitive
                                        information to pass to the CSI driver to complete
                                        the CSI NodePublishVolume and NodeUnpublishVolume
                                        calls. This field is optional, and  may be
                                        empty if no secret is required. If the secret
                                        object contains more than one secret, all
                                        secret references are passed.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    readOnly:
                                      description: readOnly specifies a read-only
                                        configuration for the volume. Defaults to
                                        false (read/write).
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      description: volumeAttributes stores driver-specific
                                        properties that are passed to the CSI driver.
                                        Consult your driver's documentation for supported
                                        values.
                                      type: object
                                  required:
                                  - driver
                                  type: object
                                downwardAPI:
                                  description: downwardAPI represents downward API
                                    about the pod that should populate this volume
                                  properties:
                                    defaultMode:
                                      description: 'Optional: mode bits to use on
                                        created files by default. Must be a Optional:
                                        mode bits used to set permissions on created
                                        files by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: Items is a list of downward API
                                        volume file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name and namespace are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          mode:
                                            description: 'Optional: mode bits used
                                              to set permissions on this file, must
                                              be an octal value between 0000 and 0777
                                              or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal
                                              values, JSON requires decimal values
                                              for mode bits. If not specified, the
                                              volume defaultMode will be used. This
                                              might be in conflict with other options
                                              that affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              requests.cpu and requests.memory) are
                                              currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                        required:
                                        - path
                                        type: object
                                      type: array
                                  type: object
                                emptyDir:
                                  description: 'emptyDir represents a temporary directory
                                    that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                  properties:
                                    medium:
                                      description: 'medium represents what type of
                                        storage medium should back this directory.
                                        The default is "" which means to use the node''s
                                        default medium. Must be an empty string (default)
                                        or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      type: string
                                    sizeLimit:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: 'sizeLimit is the total amount
                                        of local storage required for this EmptyDir
                                        volume. The size limit is also applicable
                                        for memory medium. The maximum usage on memory
                                        medium EmptyDir would be the minimum value
                                        between the SizeLimit specified here and the
                                        sum of memory limits of all containers in
                                        a pod. The default is nil which means that
                                        the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                ephemeral:
                                  description: "ephemeral represents a volume that
                                    is handled by a cluster storage driver. The volume's
                                    lifecycle is tied to the pod that defines it -
                                    it will be created before the pod starts, and
                                    deleted when the pod is removed. \n Use this if:
                                    a) the volume is only needed while the pod runs,
                                    b) features of normal volumes like restoring from
                                    snapshot or capacity    tracking are needed, c)
                                    the storage driver is specified through a storage
                                    class, and d) the storage driver supports dynamic
                                    volume provisioning through    a PersistentVolumeClaim
                                    (see EphemeralVolumeSource for more    information
                                    on the connection between this volume type    and
                                    PersistentVolumeClaim). \n Use PersistentVolumeClaim
                                    or one of the vendor-specific APIs for volumes
                                    that persist for longer than the lifecycle of
                                    an individual pod. \n Use CSI for light-weight
                                    local ephemeral volumes if the CSI driver is meant
                                    to be used that way - see the documentation of
                                    the driver for more information. \n A pod can
                                    use both types of ephemeral volumes and persistent
                                    volumes at the same time."
                                  properties:
                                    volumeClaimTemplate:
                                      description: "Will be used to create a stand-alone
                                        PVC to provision the volume. The pod in which
                                        this EphemeralVolumeSource is embedded will
                                        be the owner of the PVC, i.e. the PVC will
                                        be deleted together with the pod.  The name
                                        of the PVC will be `<pod name>-<volume name>`
                                        where `<volume name>` is the name from the
                                        `PodSpec.Volumes` array entry. Pod validation
                                        will reject the pod if the concatenated name
                                        is not valid for a PVC (for example, too long).
                                        \n An existing PVC with that name that is
                                        not owned by the pod will *not* be used for
                                        the pod to avoid using an unrelated volume
                                        by mistake. Starting the pod is then blocked
                                        until the unrelated PVC is removed. If such
                                        a pre-created PVC is meant to be used by the
                                        pod, the PVC has to updated with an owner
                                        reference to the pod once the pod exists.
                                        Normally this should not be necessary, but
                                        it may be useful when manually reconstructing
                                        a broken cluster. \n This field is read-only
                                        and no changes will be made by Kubernetes
                                        to the PVC after it has been created. \n Required,
                                        must not be nil."
                                      properties:
                                        metadata:
                                          description: May contain labels and annotations
                                            that will be copied into the PVC when
                                            creating it. No other fields are allowed
                                            and will be rejected during validation.
                                          type: object
                                        spec:
                                          description: The specification for the PersistentVolumeClaim.
                                            The entire content is copied unchanged
                                            into the PVC that gets created from this
                                            template. The same fields as in a PersistentVolumeClaim
                                            are also valid here.
                                          properties:
                                            accessModes:
                                              description: 'accessModes contains the
                                                desired access modes the volume should
                                                have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                              items:
                                                type: string
                                              type: array
                                            dataSource:
                                              description: 'dataSource field can be
                                                used to specify either: * An existing
                                                VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                * An existing PVC (PersistentVolumeClaim)
                                                If the provisioner or an external
                                                controller can support the specified
                                                data source, it will create a new
                                                volume based on the contents of the
                                                specified data source. If the AnyVolumeDataSource
                                                feature gate is enabled, this field
                                                will always have the same contents
                                                as the DataSourceRef field.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            dataSourceRef:
                                              description: 'dataSourceRef specifies
                                                the object from which to populate
                                                the volume with data, if a non-empty
                                                volume is desired. This may be any
                                                local object from a non-empty API
                                                group (non core object) or a PersistentVolumeClaim
                                                object. When this field is specified,
                                                volume binding will only succeed if
                                                the type of the specified object matches
                                                some installed volume populator or
                                                dynamic provisioner. This field will
                                                replace the functionality of the DataSource
                                                field and as such if both fields are
                                                non-empty, they must have the same
                                                value. For backwards compatibility,
                                                both fields (DataSource and DataSourceRef)
                                                will be set to the same value automatically
                                                if one of them is empty and the other
                                                is non-empty. There are two important
                                                differences between DataSource and
                                                DataSourceRef: * While DataSource
                                                only allows two specific types of
                                                objects, DataSourceRef   allows any
                                                non-core object, as well as PersistentVolumeClaim
                                                objects. * While DataSource ignores
                                                disallowed values (dropping them),
                                                DataSourceRef   preserves all values,
                                                and generates an error if a disallowed
                                                value is   specified. (Beta) Using
                                                this field requires the AnyVolumeDataSource
                                                feature gate to be enabled.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            resources:
                                              description: 'resources represents the
                                                minimum resources the volume should
                                                have. If RecoverVolumeExpansionFailure
                                                feature is enabled users are allowed
                                                to specify resource requirements that
                                                are lower than previous value but
                                                must still be higher than capacity
                                                recorded in the status field of the
                                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                              properties:
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Limits describes the
                                                    maximum amount of compute resources
                                                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Requests describes
                                                    the minimum amount of compute
                                                    resources required. If Requests
                                                    is omitted for a container, it
                                                    defaults to Limits if that is
                                                    explicitly specified, otherwise
                                                    to an implementation-defined value.
                                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                              type: object
                                            selector:
                                              description: selector is a label query
                                                over volumes to consider for binding.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            storageClassName:
                                              description: 'storageClassName is the
                                                name of the StorageClass required
                                                by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                              type: string
                                            volumeMode:
                                              description: volumeMode defines what
                                                type of volume is required by the
                                                claim. Value of Filesystem is implied
                                                when not included in claim spec.
                                              type: string
                                            volumeName:
                                              description: volumeName is the binding
                                                reference to the PersistentVolume
                                                backing this claim.
                                              type: string
                                          type: object
                                      required:
                                      - spec
                                      type: object
                                  type: object
                                fc:
                                  description: fc represents a Fibre Channel resource
                                    that is attached to a kubelet's host machine and
                                    then exposed to the pod.
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        to mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. TODO: how do we prevent errors
                                        in the filesystem from compromising the machine'
                                      type: string
                                    lun:
                                      description: 'lun is Optional: FC target lun
                                        number'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: 'readOnly is Optional: Defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.'
                                      type: boolean
                                    targetWWNs:
                                      description: 'targetWWNs is Optional: FC target
                                        worldwide names (WWNs)'
                                      items:
                                        type: string
                                      type: array
                                    wwids:
                                      description: 'wwids Optional: FC volume world
                                        wide identifiers (wwids) Either wwids or combination
                                        of targetWWNs and lun must be set, but not
                                        both simultaneously.'
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                flexVolume:
                                  description: flexVolume represents a generic volume
                                    resource that is provisioned/attached using an
                                    exec based plugin.
                                  properties:
                                    driver:
                                      description: driver is the name of the driver
                                        to use for this volume.
                                      type: string
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". The default filesystem depends
                                        on FlexVolume script.
                                      type: string
                                    options:
                                      additionalProperties:
                                        type: string
                                      description: 'options is Optional: this field
                                        holds extra command options if any.'
                                      type: object
                                    readOnly:
                                      description: 'readOnly is Optional: defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is Optional: secretRef
                                        is reference to the secret object containing
                                        sensitive information to pass to the plugin
                                        scripts. This may be empty if no secret object
                                        is specified. If the secret object contains
                                        more than one secret, all secrets are passed
                                        to the plugin scripts.'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                  required:
                                  - driver
                                  type: object
                                flocker:
                                  description: flocker represents a Flocker volume
                                    attached to a kubelet's host machine. This depends
                                    on the Flocker control service being running
                                  properties:
                                    datasetName:
                                      description: datasetName is Name of the dataset
                                        stored as metadata -> name on the dataset
                                        for Flocker should be considered as deprecated
                                      type: string
                                    datasetUUID:
                                      description: datasetUUID is the UUID of the
                                        dataset. This is unique identifier of a Flocker
                                        dataset
                                      type: string
                                  type: object
                                gcePersistentDisk:
                                  description: 'gcePersistentDisk represents a GCE
                                    Disk resource that is attached to a kubelet''s
                                    host machine and then exposed to the pod. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                  properties:
                                    fsType:
                                      description: 'fsType is filesystem type of the
                                        volume that you want to mount. Tip: Ensure
                                        that the filesystem type is supported by the
                                        host operating system. Examples: "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    partition:
                                      description: 'partition is the partition in
                                        the volume that you want to mount. If omitted,
                                        the default is to mount by volume name. Examples:
                                        For volume /dev/sda1, you specify the partition
                                        as "1". Similarly, the volume partition for
                                        /dev/sda is "0" (or you can leave the property
                                        empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      format: int32
                                      type: integer
                                    pdName:
                                      description: 'pdName is unique name of the PD
                                        resource in GCE. Used to identify the disk
                                        in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      type: boolean
                                  required:
                                  - pdName
                                  type: object
                                gitRepo:
                                  description: 'gitRepo represents a git repository
                                    at a particular revision. DEPRECATED: GitRepo
                                    is deprecated. To provision a container with a
                                    git repo, mount an EmptyDir into an InitContainer
                                    that clones the repo using git, then mount the
                                    EmptyDir into the Pod''s container.'
                                  properties:
                                    directory:
                                      description: directory is the target directory
                                        name. Must not contain or start with '..'.  If
                                        '.' is supplied, the volume directory will
                                        be the git repository.  Otherwise, if specified,
                                        the volume will contain the git repository
                                        in the subdirectory with the given name.
                                      type: string
                                    repository:
                                      description: repository is the URL
                                      type: string
                                    revision:
                                      description: revision is the commit hash for
                                        the specified revision.
                                      type: string
                                  required:
                                  - repository
                                  type: object
                                glusterfs:
                                  description: 'glusterfs represents a Glusterfs mount
                                    on the host that shares a pod''s lifetime. More
                                    info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                  properties:
                                    endpoints:
                                      description: 'endpoints is the endpoint name
                                        that details Glusterfs topology. More info:
                                        https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: string
                                    path:
                                      description: 'path is the Glusterfs volume path.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the Glusterfs
                                        volume to be mounted with read-only permissions.
                                        Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: boolean
                                  required:
                                  - endpoints
                                  - path
                                  type: object
                                hostPath:
                                  description: 'hostPath represents a pre-existing
                                    file or directory on the host machine that is
                                    directly exposed to the container. This is generally
                                    used for system agents or other privileged things
                                    that are allowed to see the host machine. Most
                                    containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                    --- TODO(jonesdl) We need to restrict who can
                                    use host directory mounts and who can/can not
                                    mount host directories as read/write.'
                                  properties:
                                    path:
                                      description: 'path of the directory on the host.
                                        If the path is a symlink, it will follow the
                                        link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                      type: string
                                    type:
                                      description: 'type for HostPath Volume Defaults
                                        to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                      type: string
                                  required:
                                  - path
                                  type: object
                                iscsi:
                                  description: 'iscsi represents an ISCSI Disk resource
                                    that is attached to a kubelet''s host machine
                                    and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                  properties:
                                    chapAuthDiscovery:
                                      description: chapAuthDiscovery defines whether
                                        support iSCSI Discovery CHAP authentication
                                      type: boolean
                                    chapAuthSession:
                                      description: chapAuthSession defines whether
                                        support iSCSI Session CHAP authentication
                                      type: boolean
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    initiatorName:
                                      description: initiatorName is the custom iSCSI
                                        Initiator Name. If initiatorName is specified
                                        with iscsiInterface simultaneously, new iSCSI
                                        interface <target portal>:<volume name> will
                                        be created for the connection.
                                      type: string
                                    iqn:
                                      description: iqn is the target iSCSI Qualified
                                        Name.
                                      type: string
                                    iscsiInterface:
                                      description: iscsiInterface is the interface
                                        Name that uses an iSCSI transport. Defaults
                                        to 'default' (tcp).
                                      type: string
                                    lun:
                                      description: lun represents iSCSI Target Lun
                                        number.
                                      format: int32
                                      type: integer
                                    portals:
                                      description: portals is the iSCSI Target Portal
                                        List. The portal is either an IP or ip_addr:port
                                        if the port is other than default (typically
                                        TCP ports 860 and 3260).
                                      items:
                                        type: string
                                      type: array
                                    readOnly:
                                      description: readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                      type: boolean
                                    secretRef:
                                      description: secretRef is the CHAP Secret for
                                        iSCSI target and initiator authentication
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    targetPortal:
                                      description: targetPortal is iSCSI Target Portal.
                                        The Portal is either an IP or ip_addr:port
                                        if the port is other than default (typically
                                        TCP ports 860 and 3260).
                                      type: string
                                  required:
                                  - iqn
                                  - lun
                                  - targetPortal
                                  type: object
                                name:
                                  description: 'name of the volume. Must be a DNS_LABEL
                                    and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                nfs:
                                  description: 'nfs represents an NFS mount on the
                                    host that shares a pod''s lifetime More info:
                                    https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                  properties:
                                    path:
                                      description: 'path that is exported by the NFS
                                        server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the NFS
                                        export to be mounted with read-only permissions.
                                        Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: boolean
                                    server:
                                      description: 'server is the hostname or IP address
                                        of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: string
                                  required:
                                  - path
                                  - server
                                  type: object
                                persistentVolumeClaim:
                                  description: 'persistentVolumeClaimVolumeSource
                                    represents a reference to a PersistentVolumeClaim
                                    in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                  properties:
                                    claimName:
                                      description: 'claimName is the name of a PersistentVolumeClaim
                                        in the same namespace as the pod using this
                                        volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                      type: string
                                    readOnly:
                                      description: readOnly Will force the ReadOnly
                                        setting in VolumeMounts. Default false.
                                      type: boolean
                                  required:
                                  - claimName
                                  type: object
                                photonPersistentDisk:
                                  description: photonPersistentDisk represents a PhotonController
                                    persistent disk attached and mounted on kubelets
                                    host machine
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified.
                                      type: string
                                    pdID:
                                      description: pdID is the ID that identifies
                                        Photon Controller persistent disk
                                      type: string
                                  required:
                                  - pdID
                                  type: object
                                portworxVolume:
                                  description: portworxVolume represents a portworx
                                    volume attached and mounted on kubelets host machine
                                  properties:
                                    fsType:
                                      description: fSType represents the filesystem
                                        type to mount Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    volumeID:
                                      description: volumeID uniquely identifies a
                                        Portworx volume
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                projected:
                                  description: projected items for all in one resources
                                    secrets, configmaps, and downward API
                                  properties:
                                    defaultMode:
                                      description: defaultMode are the mode bits used
                                        to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777
                                        or a decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values, JSON
                                        requires decimal values for mode bits. Directories
                                        within the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    sources:
                                      description: sources is the list of volume projections
                                      items:
                                        description: Projection that may be projected
                                          along with other supported volume types
                                        properties:
                                          configMap:
                                            description: configMap information about
                                              the configMap data to project
                                            properties:
                                              items:
                                                description: items if unspecified,
                                                  each key-value pair in the Data
                                                  field of the referenced ConfigMap
                                                  will be projected into the volume
                                                  as a file whose name is the key
                                                  and content is the value. If specified,
                                                  the listed keys will be projected
                                                  into the specified paths, and unlisted
                                                  keys will not be present. If a key
                                                  is specified which is not present
                                                  in the ConfigMap, the volume setup
                                                  will error unless it is marked optional.
                                                  Paths must be relative and may not
                                                  contain the '..' path or start with
                                                  '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: 'mode is Optional:
                                                        mode bits used to set permissions
                                                        on this file. Must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: path is the relative
                                                        path of the file to map the
                                                        key to. May not be an absolute
                                                        path. May not contain the
                                                        path element '..'. May not
                                                        start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: optional specify whether
                                                  the ConfigMap or its keys must be
                                                  defined
                                                type: boolean
                                            type: object
                                          downwardAPI:
                                            description: downwardAPI information about
                                              the downwardAPI data to project
                                            properties:
                                              items:
                                                description: Items is a list of DownwardAPIVolume
                                                  file
                                                items:
                                                  description: DownwardAPIVolumeFile
                                                    represents information to create
                                                    the file containing the pod field
                                                  properties:
                                                    fieldRef:
                                                      description: 'Required: Selects
                                                        a field of the pod: only annotations,
                                                        labels, name and namespace
                                                        are supported.'
                                                      properties:
                                                        apiVersion:
                                                          description: Version of
                                                            the schema the FieldPath
                                                            is written in terms of,
                                                            defaults to "v1".
                                                          type: string
                                                        fieldPath:
                                                          description: Path of the
                                                            field to select in the
                                                            specified API version.
                                                          type: string
                                                      required:
                                                      - fieldPath
                                                      type: object
                                                    mode:
                                                      description: 'Optional: mode
                                                        bits used to set permissions
                                                        on this file, must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: 'Required: Path
                                                        is  the relative path name
                                                        of the file to be created.
                                                        Must not be absolute or contain
                                                        the ''..'' path. Must be utf-8
                                                        encoded. The first item of
                                                        the relative path must not
                                                        start with ''..'''
                                                      type: string
                                                    resourceFieldRef:
                                                      description: 'Selects a resource
                                                        of the container: only resources
                                                        limits and requests (limits.cpu,
                                                        limits.memory, requests.cpu
                                                        and requests.memory) are currently
                                                        supported.'
                                                      properties:
                                                        containerName:
                                                          description: 'Container
                                                            name: required for volumes,
                                                            optional for env vars'
                                                          type: string
                                                        divisor:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Specifies the
                                                            output format of the exposed
                                                            resources, defaults to
                                                            "1"
                                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                          x-kubernetes-int-or-string: true
                                                        resource:
                                                          description: 'Required:
                                                            resource to select'
                                                          type: string
                                                      required:
                                                      - resource
                                                      type: object
                                                  required:
                                                  - path
                                                  type: object
                                                type: array
                                            type: object
                                          secret:
                                            description: secret information about
                                              the secret data to project
                                            properties:
                                              items:
                                                description: items if unspecified,
                                                  each key-value pair in the Data
                                                  field of the referenced Secret will
                                                  be projected into the volume as
                                                  a file whose name is the key and
                                                  content is the value. If specified,
                                                  the listed keys will be projected
                                                  into the specified paths, and unlisted
                                                  keys will not be present. If a key
                                                  is specified which is not present
                                                  in the Secret, the volume setup
                                                  will error unless it is marked optional.
                                                  Paths must be relative and may not
                                                  contain the '..' path or start with
                                                  '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: 'mode is Optional:
                                                        mode bits used to set permissions
                                                        on this file. Must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: path is the relative
                                                        path of the file to map the
                                                        key to. May not be an absolute
                                                        path. May not contain the
                                                        path element '..'. May not
                                                        start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: optional field specify
                                                  whether the Secret or its key must
                                                  be defined
                                                type: boolean
                                            type: object
                                          serviceAccountToken:
                                            description: serviceAccountToken is information
                                              about the serviceAccountToken data to
                                              project
                                            properties:
                                              audience:
                                                description: audience is the intended
                                                  audience of the token. A recipient
                                                  of a token must identify itself
                                                  with an identifier specified in
                                                  the audience of the token, and otherwise
                                                  should reject the token. The audience
                                                  defaults to the identifier of the
                                                  apiserver.
                                                type: string
                                              expirationSeconds:
                                                description: expirationSeconds is
                                                  the requested duration of validity
                                                  of the service account token. As
                                                  the token approaches expiration,
                                                  the kubelet volume plugin will proactively
                                                  rotate the service account token.
                                                  The kubelet will start trying to
                                                  rotate the token if the token is
                                                  older than 80 percent of its time
                                                  to live or if the token is older
                                                  than 24 hours.Defaults to 1 hour
                                                  and must be at least 10 minutes.
                                                format: int64
                                                type: integer
                                              path:
                                                description: path is the path relative
                                                  to the mount point of the file to
                                                  project the token into.
                                                type: string
                                            required:
                                            - path
                                            type: object
                                        type: object
                                      type: array
                                  type: object
                                quobyte:
                                  description: quobyte represents a Quobyte mount
                                    on the host that shares a pod's lifetime
                                  properties:
                                    group:
                                      description: group to map volume access to Default
                                        is no group
                                      type: string
                                    readOnly:
                                      description: readOnly here will force the Quobyte
                                        volume to be mounted with read-only permissions.
                                        Defaults to false.
                                      type: boolean
                                    registry:
                                      description: registry represents a single or
                                        multiple Quobyte Registry services specified
                                        as a string as host:port pair (multiple entries
                                        are separated with commas) which acts as the
                                        central registry for volumes
                                      type: string
                                    tenant:
                                      description: tenant owning the given Quobyte
                                        volume in the Backend Used with dynamically
                                        provisioned Quobyte volumes, value is set
                                        by the plugin
                                      type: string
                                    user:
                                      description: user to map volume access to Defaults
                                        to serivceaccount user
                                      type: string
                                    volume:
                                      description: volume is a string that references
                                        an already created Quobyte volume by name.
                                      type: string
                                  required:
                                  - registry
                                  - volume
                                  type: object
                                rbd:
                                  description: 'rbd represents a Rados Block Device
                                    mount on the host that shares a pod''s lifetime.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    image:
                                      description: 'image is the rados image name.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    keyring:
                                      description: 'keyring is the path to key ring
                                        for RBDUser. Default is /etc/ceph/keyring.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    monitors:
                                      description: 'monitors is a collection of Ceph
                                        monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      items:
                                        type: string
                                      type: array
                                    pool:
                                      description: 'pool is the rados pool name. Default
                                        is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is name of the authentication
                                        secret for RBDUser. If provided overrides
                                        keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    user:
                                      description: 'user is the rados user name. Default
                                        is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                  required:
                                  - image
                                  - monitors
                                  type: object
                                scaleIO:
                                  description: scaleIO represents a ScaleIO persistent
                                    volume attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Default is "xfs".
                                      type: string
                                    gateway:
                                      description: gateway is the host address of
                                        the ScaleIO API Gateway.
                                      type: string
                                    protectionDomain:
                                      description: protectionDomain is the name of
                                        the ScaleIO Protection Domain for the configured
                                        storage.
                                      type: string
                                    readOnly:
                                      description: readOnly Defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: secretRef references to the secret
                                        for ScaleIO user and other sensitive information.
                                        If this is not provided, Login operation will
                                        fail.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    sslEnabled:
                                      description: sslEnabled Flag enable/disable
                                        SSL communication with Gateway, default false
                                      type: boolean
                                    storageMode:
                                      description: storageMode indicates whether the
                                        storage for a volume should be ThickProvisioned
                                        or ThinProvisioned. Default is ThinProvisioned.
                                      type: string
                                    storagePool:
                                      description: storagePool is the ScaleIO Storage
                                        Pool associated with the protection domain.
                                      type: string
                                    system:
                                      description: system is the name of the storage
                                        system as configured in ScaleIO.
                                      type: string
                                    volumeName:
                                      description: volumeName is the name of a volume
                                        already created in the ScaleIO system that
                                        is associated with this volume source.
                                      type: string
                                  required:
                                  - gateway
                                  - secretRef
                                  - system
                                  type: object
                                secret:
                                  description: 'secret represents a secret that should
                                    populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                  properties:
                                    defaultMode:
                                      description: 'defaultMode is Optional: mode
                                        bits used to set permissions on created files
                                        by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: items If unspecified, each key-value
                                        pair in the Data field of the referenced Secret
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the Secret, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain
                                        the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    optional:
                                      description: optional field specify whether
                                        the Secret or its keys must be defined
                                      type: boolean
                                    secretName:
                                      description: 'secretName is the name of the
                                        secret in the pod''s namespace to use. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      type: string
                                  type: object
                                storageos:
                                  description: storageOS represents a StorageOS volume
                                    attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified.
                                      type: string
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: secretRef specifies the secret
                                        to use for obtaining the StorageOS API credentials.  If
                                        not specified, default values will be attempted.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    volumeName:
                                      description: volumeName is the human-readable
                                        name of the StorageOS volume.  Volume names
                                        are only unique within a namespace.
                                      type: string
                                    volumeNamespace:
                                      description: volumeNamespace specifies the scope
                                        of the volume within StorageOS.  If no namespace
                                        is specified then the Pod's namespace will
                                        be used.  This allows the Kubernetes name
                                        scoping to be mirrored within StorageOS for
                                        tighter integration. Set VolumeName to any
                                        name to override the default behaviour. Set
                                        to "default" if you are not using namespaces
                                        within StorageOS. Namespaces that do not pre-exist
                                        within StorageOS will be created.
                                      type: string
                                  type: object
                                vsphereVolume:
                                  description: vsphereVolume represents a vSphere
                                    volume attached and mounted on kubelets host machine
                                  properties:
                                    fsType:
                                      description: fsType is filesystem type to mount.
                                        Must be a filesystem type supported by the
                                        host operating system. Ex. "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    storagePolicyID:
                                      description: storagePolicyID is the storage
                                        Policy Based Management (SPBM) profile ID
                                        associated with the StoragePolicyName.
                                      type: string
                                    storagePolicyName:
                                      description: storagePolicyName is the storage
                                        Policy Based Management (SPBM) profile name.
                                      type: string
                                    volumePath:
                                      description: volumePath is the path that identifies
                                        vSphere volume vmdk
                                      type: string
                                  required:
                                  - volumePath
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          hostNetwork:
                            type: boolean
                          image:
                            type: string
                          imagePullPolicy:
                            description: PullPolicy describes a policy for if/when
                              to pull a container image
                            type: string
                          imagePullSecrets:
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          initContainers:
                            items:
                              description: A single application container that you
                                want to run within a pod.
                              properties:
                                args:
                                  description: 'Arguments to the entrypoint. The container
                                    image''s CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using
                                    the container''s environment. If a variable cannot
                                    be resolved, the reference in the input string
                                    will be unchanged. Double $$ are reduced to a
                                    single $, which allows for escaping the $(VAR_NAME)
                                    syntax: i.e. "$$(VAR_NAME)" will produce the string
                                    literal "$(VAR_NAME)". Escaped references will
                                    never be expanded, regardless of whether the variable
                                    exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: 'Entrypoint array. Not executed within
                                    a shell. The container image''s ENTRYPOINT is
                                    used if this is not provided. Variable references
                                    $(VAR_NAME) are expanded using the container''s
                                    environment. If a variable cannot be resolved,
                                    the reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot
                                    be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: List of environment variables to set
                                    in the container. Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previously defined
                                          environment variables in the container and
                                          any service environment variables. If a
                                          variable cannot be resolved, the reference
                                          in the input string will be unchanged. Double
                                          $$ are reduced to a single $, which allows
                                          for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal
                                          "$(VAR_NAME)". Escaped references will never
                                          be expanded, regardless of whether the variable
                                          exists or not. Defaults to "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          fieldRef:
                                            description: 'Selects a field of the pod:
                                              supports metadata.name, metadata.namespace,
                                              `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                              spec.nodeName, spec.serviceAccountName,
                                              status.hostIP, status.podIP, status.podIPs.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              limits.ephemeral-storage, requests.cpu,
                                              requests.memory and requests.ephemeral-storage)
                                              are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                envFrom:
                                  description: List of sources to populate environment
                                    variables in the container. The keys defined within
                                    a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container
                                    is starting. When a key exists in multiple sources,
                                    the value associated with the last source will
                                    take precedence. Values defined by an Env with
                                    a duplicate key will take precedence. Cannot be
                                    updated.
                                  items:
                                    description: EnvFromSource represents the source
                                      of a set of ConfigMaps
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap. Must be a
                                          C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            description: 'Name of the referent. More
                                              info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              TODO: Add other useful fields. apiVersion,
                                              kind, uid?'
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                    type: object
                                  type: array
                                image:
                                  description: 'Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config
                                    management to default or override container images
                                    in workload controllers like Deployments and StatefulSets.'
                                  type: string
                                imagePullPolicy:
                                  description: 'Image pull policy. One of Always,
                                    Never, IfNotPresent. Defaults to Always if :latest
                                    tag is specified, or IfNotPresent otherwise. Cannot
                                    be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                  type: string
                                lifecycle:
                                  description: Actions that the management system
                                    should take in response to container lifecycle
                                    events. Cannot be updated.
                                  properties:
                                    postStart:
                                      description: 'PostStart is called immediately
                                        after a container is created. If the handler
                                        fails, the container is terminated and restarted
                                        according to its restart policy. Other management
                                        of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: 'PreStop is called immediately
                                        before a container is terminated due to an
                                        API request or management event such as liveness/startup
                                        probe failure, preemption, resource contention,
                                        etc. The handler is not called if the container
                                        crashes or exits. The Pod''s termination grace
                                        period countdown begins before the PreStop
                                        hook is executed. Regardless of the outcome
                                        of the handler, the container will eventually
                                        terminate within the Pod''s termination grace
                                        period (unless delayed by finalizers). Other
                                        management of the container blocks until the
                                        hook completes or until the termination grace
                                        period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                      properties:
                                        exec:
                                          description: Exec specifies the action to
                                            take.
                                          properties:
                                            command:
                                              description: Command is the command
                                                line to execute inside the container,
                                                the working directory for the command  is
                                                root ('/') in the container's filesystem.
                                                The command is simply exec'd, it is
                                                not run inside a shell, so traditional
                                                shell instructions ('|', etc) won't
                                                work. To use a shell, you need to
                                                explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy
                                                and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies the http
                                            request to perform.
                                          properties:
                                            host:
                                              description: Host name to connect to,
                                                defaults to the pod IP. You probably
                                                want to set "Host" in httpHeaders
                                                instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in
                                                the request. HTTP allows repeated
                                                headers.
                                              items:
                                                description: HTTPHeader describes
                                                  a custom header to be used in HTTP
                                                  probes
                                                properties:
                                                  name:
                                                    description: The header field
                                                      name
                                                    type: string
                                                  value:
                                                    description: The header field
                                                      value
                                                    type: string
                                                required:
                                                - name
                                                - value
                                                type: object
                                              type: array
                                            path:
                                              description: Path to access on the HTTP
                                                server.
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Name or number of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: Scheme to use for connecting
                                                to the host. Defaults to HTTP.
                                              type: string
                                          required:
                                          - port
                                          type: object
                                        tcpSocket:
                                          description: Deprecated. TCPSocket is NOT
                                            supported as a LifecycleHandler and kept
                                            for the backward compatibility. There
                                            are no validation of this field and lifecycle
                                            hooks will fail in runtime when tcp handler
                                            is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to
                                                connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Number or name of the port
                                                to access on the container. Number
                                                must be in the range 1 to 65535. Name
                                                must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                          - port
                                          type: object
                                      type: object
                                  type: object
                                livenessProbe:
                                  description: 'Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: Name of the container specified as
                                    a DNS_LABEL. Each container in a pod must have
                                    a unique name (DNS_LABEL). Cannot be updated.
                                  type: string
                                ports:
                                  description: List of ports to expose from the container.
                                    Exposing a port here gives the system additional
                                    information about the network connections a container
                                    uses, but is primarily informational. Not specifying
                                    a port here DOES NOT prevent that port from being
                                    exposed. Any port which is listening on the default
                                    "0.0.0.0" address inside a container will be accessible
                                    from the network. Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network
                                      port in a single container.
                                    properties:
                                      containerPort:
                                        description: Number of port to expose on the
                                          pod's IP address. This must be a valid port
                                          number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external
                                          port to.
                                        type: string
                                      hostPort:
                                        description: Number of port to expose on the
                                          host. If specified, this must be a valid
                                          port number, 0 < x < 65536. If HostNetwork
                                          is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: If specified, this must be an
                                          IANA_SVC_NAME and unique within the pod.
                                          Each named port in a pod must have a unique
                                          name. Name for the port that can be referred
                                          to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: Protocol for port. Must be UDP,
                                          TCP, or SCTP. Defaults to "TCP".
                                        type: string
                                    required:
                                    - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: 'Periodic probe of container service
                                    readiness. Container will be removed from service
                                    endpoints if the probe fails. Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                resources:
                                  description: 'Compute Resources required by this
                                    container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. More info:
                                        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                      type: object
                                  type: object
                                securityContext:
                                  description: 'SecurityContext defines the security
                                    options the container should be run with. If set,
                                    the fields of SecurityContext override the equivalent
                                    fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: 'AllowPrivilegeEscalation controls
                                        whether a process can gain more privileges
                                        than its parent process. This bool directly
                                        controls if the no_new_privs flag will be
                                        set on the container process. AllowPrivilegeEscalation
                                        is true always when the container is: 1) run
                                        as Privileged 2) has CAP_SYS_ADMIN Note that
                                        this field cannot be set when spec.os.name
                                        is windows.'
                                      type: boolean
                                    capabilities:
                                      description: The capabilities to add/drop when
                                        running containers. Defaults to the default
                                        set of capabilities granted by the container
                                        runtime. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX
                                              capabilities type
                                            type: string
                                          type: array
                                      type: object
                                    privileged:
                                      description: Run container in privileged mode.
                                        Processes in privileged containers are essentially
                                        equivalent to root on the host. Defaults to
                                        false. Note that this field cannot be set
                                        when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: procMount denotes the type of proc
                                        mount to use for the containers. The default
                                        is DefaultProcMount which uses the container
                                        runtime defaults for readonly paths and masked
                                        paths. This requires the ProcMountType feature
                                        flag to be enabled. Note that this field cannot
                                        be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: Whether this container has a read-only
                                        root filesystem. Default is false. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: The GID to run the entrypoint of
                                        the container process. Uses runtime default
                                        if unset. May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: Indicates that the container must
                                        run as a non-root user. If true, the Kubelet
                                        will validate the image at runtime to ensure
                                        that it does not run as UID 0 (root) and fail
                                        to start the container if it does. If unset
                                        or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence.
                                      type: boolean
                                    runAsUser:
                                      description: The UID to run the entrypoint of
                                        the container process. Defaults to user specified
                                        in image metadata if unspecified. May also
                                        be set in PodSecurityContext.  If set in both
                                        SecurityContext and PodSecurityContext, the
                                        value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name
                                        is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: The SELinux context to be applied
                                        to the container. If unspecified, the container
                                        runtime will allocate a random SELinux context
                                        for each container.  May also be set in PodSecurityContext.  If
                                        set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label
                                            that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label
                                            that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label
                                            that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label
                                            that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: The seccomp options to use by this
                                        container. If seccomp options are provided
                                        at both the pod & container level, the container
                                        options override the pod options. Note that
                                        this field cannot be set when spec.os.name
                                        is windows.
                                      properties:
                                        localhostProfile:
                                          description: localhostProfile indicates
                                            a profile defined in a file on the node
                                            should be used. The profile must be preconfigured
                                            on the node to work. Must be a descending
                                            path, relative to the kubelet's configured
                                            seccomp profile location. Must only be
                                            set if type is "Localhost".
                                          type: string
                                        type:
                                          description: "type indicates which kind
                                            of seccomp profile will be applied. Valid
                                            options are: \n Localhost - a profile
                                            defined in a file on the node should be
                                            used. RuntimeDefault - the container runtime
                                            default profile should be used. Unconfined
                                            - no profile should be applied."
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    windowsOptions:
                                      description: The Windows specific settings applied
                                        to all containers. If unspecified, the options
                                        from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext,
                                        the value specified in SecurityContext takes
                                        precedence. Note that this field cannot be
                                        set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: GMSACredentialSpec is where
                                            the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                            inlines the contents of the GMSA credential
                                            spec named by the GMSACredentialSpecName
                                            field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the
                                            name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: HostProcess determines if a
                                            container should be run as a 'Host Process'
                                            container. This field is alpha-level and
                                            will only be honored by components that
                                            enable the WindowsHostProcessContainers
                                            feature flag. Setting this field without
                                            the feature flag will result in errors
                                            when validating the Pod. All of a Pod's
                                            containers must have the same effective
                                            HostProcess value (it is not allowed to
                                            have a mix of HostProcess containers and
                                            non-HostProcess containers).  In addition,
                                            if HostProcess is true then HostNetwork
                                            must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: The UserName in Windows to
                                            run the entrypoint of the container process.
                                            Defaults to the user specified in image
                                            metadata if unspecified. May also be set
                                            in PodSecurityContext. If set in both
                                            SecurityContext and PodSecurityContext,
                                            the value specified in SecurityContext
                                            takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: 'StartupProbe indicates that the Pod
                                    has successfully initialized. If specified, no
                                    other probes are executed until this completes
                                    successfully. If this probe fails, the Pod will
                                    be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters
                                    at the beginning of a Pod''s lifecycle, when it
                                    might take a long time to load data or warm a
                                    cache, than during steady-state operation. This
                                    cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                  properties:
                                    exec:
                                      description: Exec specifies the action to take.
                                      properties:
                                        command:
                                          description: Command is the command line
                                            to execute inside the container, the working
                                            directory for the command  is root ('/')
                                            in the container's filesystem. The command
                                            is simply exec'd, it is not run inside
                                            a shell, so traditional shell instructions
                                            ('|', etc) won't work. To use a shell,
                                            you need to explicitly call out to that
                                            shell. Exit status of 0 is treated as
                                            live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    failureThreshold:
                                      description: Minimum consecutive failures for
                                        the probe to be considered failed after having
                                        succeeded. Defaults to 3. Minimum value is
                                        1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies an action involving
                                        a GRPC port. This is a beta field and requires
                                        enabling GRPCContainerProbe feature gate.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service.
                                            Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          description: "Service is the name of the
                                            service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                            \n If this is not specified, the default
                                            behavior is defined by gRPC."
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request
                                        to perform.
                                      properties:
                                        host:
                                          description: Host name to connect to, defaults
                                            to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the
                                            request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom
                                              header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: The header field name
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                            - name
                                            - value
                                            type: object
                                          type: array
                                        path:
                                          description: Path to access on the HTTP
                                            server.
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Name or number of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: Scheme to use for connecting
                                            to the host. Defaults to HTTP.
                                          type: string
                                      required:
                                      - port
                                      type: object
                                    initialDelaySeconds:
                                      description: 'Number of seconds after the container
                                        has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: How often (in seconds) to perform
                                        the probe. Default to 10 seconds. Minimum
                                        value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: Minimum consecutive successes for
                                        the probe to be considered successful after
                                        having failed. Defaults to 1. Must be 1 for
                                        liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies an action involving
                                        a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect
                                            to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Number or name of the port
                                            to access on the container. Number must
                                            be in the range 1 to 65535. Name must
                                            be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                      - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: Optional duration in seconds the
                                        pod needs to terminate gracefully upon probe
                                        failure. The grace period is the duration
                                        in seconds after the processes running in
                                        the pod are sent a termination signal and
                                        the time when the processes are forcibly halted
                                        with a kill signal. Set this value longer
                                        than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds
                                        will be used. Otherwise, this value overrides
                                        the value provided by the pod spec. Value
                                        must be non-negative integer. The value zero
                                        indicates stop immediately via the kill signal
                                        (no opportunity to shut down). This is a beta
                                        field and requires enabling ProbeTerminationGracePeriod
                                        feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                        is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: 'Number of seconds after which
                                        the probe times out. Defaults to 1 second.
                                        Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: Whether this container should allocate
                                    a buffer for stdin in the container runtime. If
                                    this is not set, reads from stdin in the container
                                    will always result in EOF. Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: Whether the container runtime should
                                    close the stdin channel after it has been opened
                                    by a single attach. When stdin is true the stdin
                                    stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is
                                    opened on container start, is empty until the
                                    first client attaches to stdin, and then remains
                                    open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed
                                    until the container is restarted. If this flag
                                    is false, a container processes that reads from
                                    stdin will never receive an EOF. Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: 'Optional: Path at which the file to
                                    which the container''s termination message will
                                    be written is mounted into the container''s filesystem.
                                    Message written is intended to be brief final
                                    status, such as an assertion failure message.
                                    Will be truncated by the node if greater than
                                    4096 bytes. The total message length across all
                                    containers will be limited to 12kb. Defaults to
                                    /dev/termination-log. Cannot be updated.'
                                  type: string
                                terminationMessagePolicy:
                                  description: Indicate how the termination message
                                    should be populated. File will use the contents
                                    of terminationMessagePath to populate the container
                                    status message on both success and failure. FallbackToLogsOnError
                                    will use the last chunk of container log output
                                    if the termination message file is empty and the
                                    container exited with an error. The log output
                                    is limited to 2048 bytes or 80 lines, whichever
                                    is smaller. Defaults to File. Cannot be updated.
                                  type: string
                                tty:
                                  description: Whether this container should allocate
                                    a TTY for itself, also requires 'stdin' to be
                                    true. Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block
                                    devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping
                                      of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside
                                          of the container that the device will be
                                          mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a
                                          persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                    - devicePath
                                    - name
                                    type: object
                                  type: array
                                volumeMounts:
                                  description: Pod volumes to mount into the container's
                                    filesystem. Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting
                                      of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: Path within the container at
                                          which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: mountPropagation determines how
                                          mounts are propagated from the host to container
                                          and the other way around. When not set,
                                          MountPropagationNone is used. This field
                                          is beta in 1.10.
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                      readOnly:
                                        description: Mounted read-only if true, read-write
                                          otherwise (false or unspecified). Defaults
                                          to false.
                                        type: boolean
                                      subPath:
                                        description: Path within the volume from which
                                          the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: Expanded path within the volume
                                          from which the container's volume should
                                          be mounted. Behaves similarly to SubPath
                                          but environment variable references $(VAR_NAME)
                                          are expanded using the container's environment.
                                          Defaults to "" (volume's root). SubPathExpr
                                          and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                workingDir:
                                  description: Container's working directory. If not
                                    specified, the container runtime's default will
                                    be used, which might be configured in the container
                                    image. Cannot be updated.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                          nodeSelector:
                            additionalProperties:
                              type: string
                            type: object
                          podAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          priorityClassName:
                            type: string
                          replicas:
                            format: int32
                            type: integer
                          resources:
                            description: ResourceRequirements describes the compute
                              resource requirements.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          securityContext:
                            description: PodSecurityContext holds pod-level security
                              attributes and common container settings. Some fields
                              are also present in container.securityContext.  Field
                              values of container.securityContext take precedence
                              over field values of PodSecurityContext.
                            properties:
                              fsGroup:
                                description: "A special supplemental group that applies
                                  to all containers in a pod. Some volume types allow
                                  the Kubelet to change the ownership of that volume
                                  to be owned by the pod: \n 1. The owning GID will
                                  be the FSGroup 2. The setgid bit is set (new files
                                  created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw---- \n
                                  If unset, the Kubelet will not modify the ownership
                                  and permissions of any volume. Note that this field
                                  cannot be set when spec.os.name is windows."
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: 'fsGroupChangePolicy defines behavior
                                  of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will
                                  only apply to volume types which support fsGroup
                                  based ownership(and permissions). It will have no
                                  effect on ephemeral volume types such as: secret,
                                  configmaps and emptydir. Valid values are "OnRootMismatch"
                                  and "Always". If not specified, "Always" is used.
                                  Note that this field cannot be set when spec.os.name
                                  is windows.'
                                type: string
                              runAsGroup:
                                description: The GID to run the entrypoint of the
                                  container process. Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both
                                  SecurityContext and PodSecurityContext, the value
                                  specified in SecurityContext takes precedence for
                                  that container. Note that this field cannot be set
                                  when spec.os.name is windows.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: Indicates that the container must run
                                  as a non-root user. If true, the Kubelet will validate
                                  the image at runtime to ensure that it does not
                                  run as UID 0 (root) and fail to start the container
                                  if it does. If unset or false, no such validation
                                  will be performed. May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: The UID to run the entrypoint of the
                                  container process. Defaults to user specified in
                                  image metadata if unspecified. May also be set in
                                  SecurityContext.  If set in both SecurityContext
                                  and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container. Note that this
                                  field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: The SELinux context to be applied to
                                  all containers. If unspecified, the container runtime
                                  will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If
                                  set in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence
                                  for that container. Note that this field cannot
                                  be set when spec.os.name is windows.
                                properties:
                                  level:
                                    description: Level is SELinux level label that
                                      applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that
                                      applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that
                                      applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that
                                      applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: The seccomp options to use by the containers
                                  in this pod. Note that this field cannot be set
                                  when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: localhostProfile indicates a profile
                                      defined in a file on the node should be used.
                                      The profile must be preconfigured on the node
                                      to work. Must be a descending path, relative
                                      to the kubelet's configured seccomp profile
                                      location. Must only be set if type is "Localhost".
                                    type: string
                                  type:
                                    description: "type indicates which kind of seccomp
                                      profile will be applied. Valid options are:
                                      \n Localhost - a profile defined in a file on
                                      the node should be used. RuntimeDefault - the
                                      container runtime default profile should be
                                      used. Unconfined - no profile should be applied."
                                    type: string
                                required:
                                - type
                                type: object
                              supplementalGroups:
                                description: A list of groups applied to the first
                                  process run in each container, in addition to the
                                  container's primary GID.  If unspecified, no groups
                                  will be added to any container. Note that this field
                                  cannot be set when spec.os.name is windows.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                              sysctls:
                                description: Sysctls hold a list of namespaced sysctls
                                  used for the pod. Pods with unsupported sysctls
                                  (by the container runtime) might fail to launch.
                                  Note that this field cannot be set when spec.os.name
                                  is windows.
                                items:
                                  description: Sysctl defines a kernel parameter to
                                    be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              windowsOptions:
                                description: The Windows specific settings applied
                                  to all containers. If unspecified, the options within
                                  a container's SecurityContext will be used. If set
                                  in both SecurityContext and PodSecurityContext,
                                  the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name
                                  is linux.
                                properties:
                                  gmsaCredentialSpec:
                                    description: GMSACredentialSpec is where the GMSA
                                      admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                      inlines the contents of the GMSA credential
                                      spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name
                                      of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: HostProcess determines if a container
                                      should be run as a 'Host Process' container.
                                      This field is alpha-level and will only be honored
                                      by components that enable the WindowsHostProcessContainers
                                      feature flag. Setting this field without the
                                      feature flag will result in errors when validating
                                      the Pod. All of a Pod's containers must have
                                      the same effective HostProcess value (it is
                                      not allowed to have a mix of HostProcess containers
                                      and non-HostProcess containers).  In addition,
                                      if HostProcess is true then HostNetwork must
                                      also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: The UserName in Windows to run the
                                      entrypoint of the container process. Defaults
                                      to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: string
                                type: object
                            type: object
                          serviceAccountName:
                            type: string
                          serviceAnnotations:
                            additionalProperties:
                              type: string
                            type: object
                          startupConfigMap:
                            type: string
                          tolerations:
                            items:
                              description: The pod this Toleration is attached to
                                tolerates any taint that matches the triple <key,value,effect>
                                using the matching operator <operator>.
                              properties:
                                effect:
                                  description: Effect indicates the taint effect to
                                    match. Empty means match all taint effects. When
                                    specified, allowed values are NoSchedule, PreferNoSchedule
                                    and NoExecute.
                                  type: string
                                key:
                                  description: Key is the taint key that the toleration
                                    applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists;
                                    this combination means to match all values and
                                    all keys.
                                  type: string
                                operator:
                                  description: Operator represents a key's relationship
                                    to the value. Valid operators are Exists and Equal.
                                    Defaults to Equal. Exists is equivalent to wildcard
                                    for value, so that a pod can tolerate all taints
                                    of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: TolerationSeconds represents the period
                                    of time the toleration (which must be of effect
                                    NoExecute, otherwise this field is ignored) tolerates
                                    the taint. By default, it is not set, which means
                                    tolerate the taint forever (do not evict). Zero
                                    and negative values will be treated as 0 (evict
                                    immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: Value is the taint value the toleration
                                    matches to. If the operator is Exists, the value
                                    should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                          topologySpreadConstraints:
                            items:
                              description: TopologySpreadConstraint specifies how
                                to spread matching pods among the given topology.
                              properties:
                                labelSelector:
                                  description: LabelSelector is used to find matching
                                    pods. Pods that match this label selector are
                                    counted to determine the number of pods in their
                                    corresponding topology domain.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                maxSkew:
                                  description: 'MaxSkew describes the degree to which
                                    pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`,
                                    it is the maximum permitted difference between
                                    the number of matching pods in the target topology
                                    and the global minimum. The global minimum is
                                    the minimum number of matching pods in an eligible
                                    domain or zero if the number of eligible domains
                                    is less than MinDomains. For example, in a 3-zone
                                    cluster, MaxSkew is set to 1, and pods with the
                                    same labelSelector spread as 2/2/1: In this case,
                                    the global minimum is 1. | zone1 | zone2 | zone3
                                    | |  P P  |  P P  |   P   | - if MaxSkew is 1,
                                    incoming pod can only be scheduled to zone3 to
                                    become 2/2/2; scheduling it onto zone1(zone2)
                                    would make the ActualSkew(3-1) on zone1(zone2)
                                    violate MaxSkew(1). - if MaxSkew is 2, incoming
                                    pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                                    it is used to give higher precedence to topologies
                                    that satisfy it. It''s a required field. Default
                                    value is 1 and 0 is not allowed.'
                                  format: int32
                                  type: integer
                                minDomains:
                                  description: "MinDomains indicates a minimum number
                                    of eligible domains. When the number of eligible
                                    domains with matching topology keys is less than
                                    minDomains, Pod Topology Spread treats \"global
                                    minimum\" as 0, and then the calculation of Skew
                                    is performed. And when the number of eligible
                                    domains with matching topology keys equals or
                                    greater than minDomains, this value has no effect
                                    on scheduling. As a result, when the number of
                                    eligible domains is less than minDomains, scheduler
                                    won't schedule more than maxSkew Pods to those
                                    domains. If value is nil, the constraint behaves
                                    as if MinDomains is equal to 1. Valid values are
                                    integers greater than 0. When value is not nil,
                                    WhenUnsatisfiable must be DoNotSchedule. \n For
                                    example, in a 3-zone cluster, MaxSkew is set to
                                    2, MinDomains is set to 5 and pods with the same
                                    labelSelector spread as 2/2/2: | zone1 | zone2
                                    | zone3 | |  P P  |  P P  |  P P  | The number
                                    of domains is less than 5(MinDomains), so \"global
                                    minimum\" is treated as 0. In this situation,
                                    new pod with the same labelSelector cannot be
                                    scheduled, because computed skew will be 3(3 -
                                    0) if new Pod is scheduled to any of the three
                                    zones, it will violate MaxSkew. \n This is an
                                    alpha field and requires enabling MinDomainsInPodTopologySpread
                                    feature gate."
                                  format: int32
                                  type: integer
                                topologyKey:
                                  description: TopologyKey is the key of node labels.
                                    Nodes that have a label with this key and identical
                                    values are considered to be in the same topology.
                                    We consider each <key, value> as a "bucket", and
                                    try to put balanced number of pods into each bucket.
                                    We define a domain as a particular instance of
                                    a topology. Also, we define an eligible domain
                                    as a domain whose nodes match the node selector.
                                    e.g. If TopologyKey is "kubernetes.io/hostname",
                                    each Node is a domain of that topology. And, if
                                    TopologyKey is "topology.kubernetes.io/zone",
                                    each zone is a domain of that topology. It's a
                                    required field.
                                  type: string
                                whenUnsatisfiable:
                                  description: 'WhenUnsatisfiable indicates how to
                                    deal with a pod if it doesn''t satisfy the spread
                                    constraint. - DoNotSchedule (default) tells the
                                    scheduler not to schedule it. - ScheduleAnyway
                                    tells the scheduler to schedule the pod in any
                                    location,   but giving higher precedence to topologies
                                    that would help reduce the   skew. A constraint
                                    is considered "Unsatisfiable" for an incoming
                                    pod if and only if every possible node assignment
                                    for that pod would violate "MaxSkew" on some topology.
                                    For example, in a 3-zone cluster, MaxSkew is set
                                    to 1, and pods with the same labelSelector spread
                                    as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   |
                                    If WhenUnsatisfiable is set to DoNotSchedule,
                                    incoming pod can only be scheduled to zone2(zone3)
                                    to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3)
                                    satisfies MaxSkew(1). In other words, the cluster
                                    can still be imbalanced, but scheduler won''t
                                    make it *more* imbalanced. It''s a required field.'
                                  type: string
                              required:
                              - maxSkew
                              - topologyKey
                              - whenUnsatisfiable
                              type: object
                            type: array
                        type: object
                    type: object
                required:
                - spec
                type: object
            served: true
            storage: true
            subresources: {}
        status:
          acceptedNames:
            kind: ""
            plural: ""
          conditions: []
          storedVersions: []
      destinationSelectors:
      - matchLabels:
          environment: dev
      workflows:
        resource:
          configure:
          - apiVersion: platform.kratix.io/v1alpha1
            kind: Pipeline
            metadata:
              name: instance-configure
              namespace: default
            spec:
              containers:
              - image: ghcr.io/syntasso/kratix-marketplace/redis-configure-pipeline:v0.1.0
                name: redis-configure-pipeline
              - image: ghcr.io/syntasso/kratix-marketplace/pipeline-destination-image:v0.1.0
                name: add-destination
    status: {}
  - apiVersion: platform.kratix.io/v1alpha1
    kind: Promise
    metadata:
      name: slack
      namespace: default
    spec:
      api:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          name: slacks.marketplace.kratix.io
        spec:
          group: marketplace.kratix.io
          names:
            kind: slack
            plural: slacks
            singular: slack
          scope: Namespaced
          versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  spec:
                    properties:
                      message:
                        description: |
                          The message to be sent
                        type: string
                    required:
                    - message
                    type: object
                type: object
            served: true
            storage: true
      workflows:
        resource:
          configure:
          - apiVersion: platform.kratix.io/v1alpha1
            kind: Pipeline
            metadata:
              name: instance-configure
              namespace: default
            spec:
              containers:
              - image: ghcr.io/syntasso/kratix-marketplace/slack-configure-pipeline:v0.1.0
                name: slack-configure-pipeline
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: slack-default-promise-pipeline-credentials
      namespace: default
    rules:
    - apiGroups:
      - ""
      resourceNames:
      - slack-channel-hook
      resources:
      - secrets
      verbs:
      - get
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: slack-default-promise-pipeline-credentials
      namespace: default
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: slack-default-promise-pipeline-credentials
    subjects:
    - kind: ServiceAccount
      name: slack-default-promise-pipeline
      namespace: default
  destinationSelectors:
  - matchLabels:
      environment: platform
  workflows:
    resource:
      configure:
      - apiVersion: platform.kratix.io/v1alpha1
        kind: Pipeline
        metadata:
          name: instance-configure
          namespace: default
        spec:
          containers:
          - image: syntasso/demo-app-as-a-service-configure-pipeline:v0.1.1
            name: demo-app-as-a-service-configure-pipeline
status: {}
