#!/usr/bin/env sh

set -x

base_instance="/tmp/transfer/postgresql-instance.yaml"

# Read current values from the provided resource request
name="$(yq eval '.metadata.name' /kratix/input/object.yaml)"

env_type="$(yq eval '.spec.env // "dev"' /kratix/input/object.yaml)"
team="$(yq eval '.spec.teamId' /kratix/input/object.yaml)"
dbname="$(yq eval '.spec.dbName // "postgres"' /kratix/input/object.yaml)"
cluster_selectors="$(yq eval '.spec.clusterSelectors // ""' /kratix/input/object.yaml)"

if [ -n "${cluster_selectors}" ]; then
  cat > /kratix/metadata/scheduling.yaml <<EOF
- target:
    matchLabels:
      $cluster_selectors
EOF
fi

backup="false"
size="1Gi"
instances="1"
if [ $env_type = "prod" ]; then
  backup="true"
  size="10Gi"
  instances="3"
fi

# Replace defaults with user provided values
cat ${base_instance} |
  sed "s/TEAM/${team}/g" |
  sed "s/BACKUP/${backup}/g" |
  sed "s/SIZE/${size}/g" |
  sed "s/DBNAME/${dbname}/g" |
  sed "s/INSTANCES/${instances}/g" |
  sed "s/NAME/${name}/g" > /kratix/output/postgres-instance.yaml
